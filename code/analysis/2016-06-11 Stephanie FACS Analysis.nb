(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1694711,      37755]
NotebookOptionsPosition[   1666913,      37031]
NotebookOutlinePosition[   1667388,      37048]
CellTagsIndexPosition[   1667345,      37045]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "Stephanie idea version 2: Does not seem to really matter what ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]\[Epsilon]", "R"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is, but it is probably positive"
}], "Text",
 CellChangeTimes->{{3.679696883393997*^9, 3.679696900613982*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      GraphicsBox[{{{{}, {{}, {}, 
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.011000000000000001`], AbsoluteThickness[1.6], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5UOjriZSrP2ldP2z5lz7X+/RD+XfugN3Y5vm/6
90ulLXO/KvXM3uL+gaXNf/v3K4Hl39r/ficvv0J4wX6x0K27N2Z/snes9Q54
abFivzRY/Tf7TCGPhqC4Ffvly6df/nHyp72N5uH87aVb9iuD9f+1NyiJnnr0
xo79U87s+So/hcFhr+18ucqYvVDzmBxiP8lOmmN8eP+Mu2sbnZ1ZHGSnndPL
Mj0FNZ/NwW5D0s1Jdy/sn/NuHm/6J3YH/pwMU03za1D7OB32P/r+YPrhe/sX
/O+f2bWQ26Hm4L6gqOlPoPbzOvi+vqDVc/PN/mUCjarrAvgdDshw9E6o/7p/
Mtg9Ag57rSPMThxhOHBVYOeNF/WCDj0S3DGp99gPQNwn5HAjSErbQYn3QPjM
jfOqwoUdHD6JzZTrEjgAca+Ig8qFF37B6kIHbiquSuHRF3VYdSW9qL9P+ADE
/WIOjx8ffZF/WeRA9KpFWvPYxB3mT5n/UIVR7ADEP+IO+V1LuifJiR+4azT7
g/49CQeFF3nlFgYSByD+k3T4a/6PWcNS8kDC7snbDm6VclhzcRZrt7XUAYh/
pR28Gx+bfLKQPgAA6eDo7A==
             "]]}, 
           {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
            0.011000000000000001`], AbsoluteThickness[1.6], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5UOjriZSrP2iseuF/KNWnyfgj/rr1H8MuPEYsm
75dKW+Z+VeqZ/fcLy1wT1k/erwSWf2tfzTjX/MG5xfvFQrfu3pj9yZ6jlK9n
8v21+6XB6r/Zx8dnOX2UWLdfvnz65R8nf9rnqWmuX+e/c78yWP9f+7uhXg9O
X963f8qZPV/lpzA46Lx8IPnR9RDUPCaH76cXRqkxntg/4+7aRmdnFgfh/Gds
XNUXoOazOQQfOp7ol3R1/5x383jTP7E7JO83919VdwdqH6dDmPXsZcrsT/Yv
+N8/s2sht4NSlW93fu9rqP28Dm9+lP6bL/ll/zKBRtV1AfwOO7qXsl288m//
ZLB7BBz6VD5u0f3HeuCqwM4bL+oFHUpP3NzrbsR9AOI+IYfPO7o28WrwHwif
uXFeVbiwg+esst7FxoIHIO4VcfiXFRRwYo7QgZuKq1J49EUdwj19G0UfCx+A
uF/Mwejd8hU3BUUPRK9apDWPTdzBWSNgqpCB2AGIf8QdboRfiQ9yEj9w12j2
B/17Eg5rbF9VbPeWOADxn6RDDd+dnyV+kgcSdk/ednCrlEPvRiY3JR+pAxD/
SjvEsbYxvXGVPgAASKToNw==
             "]]}, 
           {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
            0.011000000000000001`], AbsoluteThickness[1.6], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5UOjriZSrP2ufybJgwrWfXfgj/rn2a59yUaYt2
7ZdKW+Z+VeqZvbS27R/NLbv2K4Hl39pvTzR4yy9/Zr9Y6NbdG7M/2T988Fv6
pPu1/dJg9d/s22+eWBbYcG2/fPn0yz9O/rRfFTFl0ymbp/uVwfr/2nN9l2F+
wvBm/5Qze77KT2FwkK3Xfbot+RPUPCaHI3o3THM6/++fcXdto7MziwNvslJF
ykyOAxDz2RxqrnIHzZLjPTDn3Tze9E/sDgsb9qxoCxE4ALGP0+HPCVs79iuC
Bxb875/ZtZDbQYpz+uVDGsIHIPbzOqiy3D4ZlyhyYJlAo+q6AH4Hz93TZ05s
Ez0wGeweAYfTl73Sns0VO3BVYOeNF/WCDi0vg6cKrRY/AHGfkMO2yrq7KzdI
HAifuXFeVbiwQ1CIul7LBskDEPeKOEjceHn612qpAzcVV6Xw6Is6rD/28hDf
Emmo+8Uc2JY+EWqaKXMgetUirXls4g4szh92vuiRhfpH3MFaImbSljq5A3eN
Zn/QvyfhIHiq84RtvjzUf5IOxoYvG1L0FQ4k7J687eBWKYdLX0K+HF2mAPWv
tEOSZ4nXDVnFAwAq9edp
             "]]}}, {}}, {{}, {
           {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
            AbsoluteThickness[1.6], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {1.2725655957915476`, 0.044973365642731196`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {1.5583551222047844`, -0.03293650024626485},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {1.7007400708408864`, 0.02273948696948934},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {1.8787013993618633`, 0.15529288440603525`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {1.9756076379346226`, -0.16782711064350203`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.0818137258248917`, 0.035367143837291344`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.198557022569998, -0.08872193006080453},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.347558458636777, -0.07483131062300348},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.4965057856313524`, -0.02829659915511379},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.649714624089247, 0.20701416938432612`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.1888289035159043`, -0.23029405534305067`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.613886475072506, -1.0501078796084948`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.860308569741467, -1.6337306050031448`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.056469609793174, -1.1548652302189082`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.492561241605437, -2.1413169453979233`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.736198448394496, -3.9808373214285058`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.869839484130799, -4.475897850283952},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.93014804318357, -4.255922757878156},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.994505912166372, -4.723503372949956},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.085124146086995, -4.576582729136179},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.160204064418402, -5.3093783139074615`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.2786247332023, -4.958422422649321},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.423186348593906, -5.201372160491558},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.556828061699537, -5.2409922999287675`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.682899263739777, -5.125036554406231},
              Automatic, Scaled[{0.03, 0.03}]]}, 
           {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
            AbsoluteThickness[1.6], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {1.655175804107954, 0.04879016416943204},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.4553061800117097`, -0.3286429655068798},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.844327819394758, -0.4820762104800047},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.477540948249489, -1.5478725567759455`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.8128654338949275`, -2.707100652066622},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.9913885608088866`, -2.8719229878277046`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.152613470346076, -2.3849889192488614`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.294560608892605, -3.4517541052793077`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.412313327278754, -3.5533001598721135`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.54052499249456, -3.973366635669198},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.634728988229636, -4.211777659114197},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], 
             {4.74406218485471, -4.458475806837288}, Automatic, 
             Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.844187086458591, -4.521748577849019},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.9473404437239425`, -4.554477071672573},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.050496827521386, -4.241221758082861},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.152713392689245, -4.6646017697575175`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.281679725395013, -4.676344005442616},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.41610040220442, -5.215079767977981},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.5443958891447425`, -5.201916872261721},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.66608060747219, -4.786212561283666},
              Automatic, Scaled[{0.03, 0.03}]]}, 
           {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
            AbsoluteThickness[1.6], InsetBox[
             GraphicsBox[
              {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.273053290388008, -1.9477117710019414`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.9428587839469227`, -3.2281688717797934`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.5700959181239695`, -4.403046001897957},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.235120483100881, -5.246104495101102},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.674696248636701, -5.82189056313653},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.345677937907874, -6.815176097689044},
              Automatic, Scaled[{0.03, 0.03}]]}, {}}, {}}}, InsetBox[
         TemplateBox[{
          StyleBox[
           "\"O1, \\!\\(\\*SubscriptBox[\\(N\\), \\(s\\)]\\)=64\"", 
            FontFamily -> "Times", 12, StripOnInput -> False],StyleBox[
           "\"O1, \\!\\(\\*SubscriptBox[\\(N\\), \\(s\\)]\\)=52\"", 
            FontFamily -> "Times", 12, StripOnInput -> False],StyleBox[
           "\"Oid, \\!\\(\\*SubscriptBox[\\(N\\), \\(s\\)]\\)=10\"", 
            FontFamily -> "Times", 12, StripOnInput -> False]},
          "PointLegend",
          DisplayFunction->(FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    
                    LineBox[{{0, 6.6747670784988635`}, {
                    20, 6.6747670784988635`}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.6747670784988635`}, PlotRangePadding -> 
                    None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.054435681955988385`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    
                    LineBox[{{0, 6.6747670784988635`}, {
                    20, 6.6747670784988635`}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.6747670784988635`}, PlotRangePadding -> 
                    None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.054435681955988385`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    
                    LineBox[{{0, 6.6747670784988635`}, {
                    20, 6.6747670784988635`}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.6747670784988635`}, PlotRangePadding -> 
                    None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.054435681955988385`] -> 
                    Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.4}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}], ",", "0.03`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}], ",", "0.03`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}], ",", "0.03`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}], ",", "0.03`"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Spacings", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.4`"}], "}"}]}]}], "]"}]& )], 
         Scaled[{0.05, 0.3}], ImageScaled[{0, 0.5}],
         BaseStyle->{FontSize -> Larger},
         FormatType->StandardForm]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{-0.248863320129927, -8.513247157374849},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )},
       DisplayFunction->Identity,
       Frame->{{True, False}, {True, False}},
       FrameLabel->{{
          FormBox[
           StyleBox[
           "\"Fold-Change\"", FontFamily -> "Times", 10, StripOnInput -> 
            False], TraditionalForm], None}, {
          FormBox[
           StyleBox[
           "\"Repressor Copy Number\"", FontFamily -> "Times", 10, 
            StripOnInput -> False], TraditionalForm], None}},
       FrameStyle->Directive[
         GrayLevel[1], 
         Thickness[Large], FontColor -> GrayLevel[0]],
       FrameTicks->{{{{-11.512925464970229`, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "5"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-9.210340371976182, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "4"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-6.907755278982137, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-4.605170185988091, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "2"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-2.3025850929940455`, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "1"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {0., 
            FormBox[
             TagBox[
              SuperscriptBox["10", "0"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {2.302585092994046, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "1"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-10.819778284410283`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-10.414313176302118`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-10.126631103850338`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.903487552536129, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.721165995742172, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.567015315914915, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.433483923290392, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.315700887634009, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-8.517193191416236, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-8.111728083308073, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.824046010856292, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.600902459542082, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.418580902748128, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.264430222920869, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.130898830296347, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.013115794639964, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-6.214608098422191, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.809142990314027, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.521460917862246, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.298317366548037, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.115995809754082, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-4.961845129926823, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-4.8283137373023015`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-4.710530701645918, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-3.912023005428146, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-3.506557897319982, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-3.218875824868201, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.9957322735539913`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.813410716760037, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.6592600369327783`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.525728644308256, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.4079456086518722`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-1.6094379124341005`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-1.2039728043259361`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.9162907318741553, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.6931471805599457, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.5108256237659909, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.3566749439387326, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.2231435513142104, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.10536051565782652`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           0.6931471805599452, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.0986122886681096`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.3862943611198904`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.6094379124341, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.7917594692280547`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.945910149055313, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.0794415416798353`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.197224577336219, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}}, {{-11.512925464970229`, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "5"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-9.210340371976182, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "4"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-6.907755278982137, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-4.605170185988091, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "2"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-2.3025850929940455`, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "1"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {0., 
            FormBox[
             TagBox[
              SuperscriptBox["10", "0"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {2.302585092994046, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "1"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-10.819778284410283`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-10.414313176302118`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-10.126631103850338`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.903487552536129, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.721165995742172, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.567015315914915, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.433483923290392, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.315700887634009, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-8.517193191416236, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-8.111728083308073, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.824046010856292, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.600902459542082, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.418580902748128, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.264430222920869, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.130898830296347, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.013115794639964, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-6.214608098422191, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.809142990314027, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.521460917862246, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.298317366548037, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.115995809754082, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-4.961845129926823, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-4.8283137373023015`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-4.710530701645918, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-3.912023005428146, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-3.506557897319982, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-3.218875824868201, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.9957322735539913`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.813410716760037, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.6592600369327783`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.525728644308256, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.4079456086518722`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-1.6094379124341005`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-1.2039728043259361`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.9162907318741553, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.6931471805599457, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.5108256237659909, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.3566749439387326, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.2231435513142104, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.10536051565782652`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           0.6931471805599452, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.0986122886681096`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.3862943611198904`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.6094379124341, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.7917594692280547`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.945910149055313, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.0794415416798353`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.197224577336219, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}}}, {{{0., 
            FormBox[
             TagBox[
              SuperscriptBox["10", "0"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {2.302585092994046, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "1"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {4.605170185988092, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "2"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {6.907755278982137, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "3"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {9.210340371976184, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "4"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {0.6931471805599452, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.0986122886681096`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.3862943611198904`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.6094379124341, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.7917594692280547`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.945910149055313, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.0794415416798353`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.197224577336219, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.9957322735539913`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           3.912023005428146, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.2484952420493585`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           5.298317366548037, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           5.703782474656202, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           5.991464547107983, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.214608098422191, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.396929655216145, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.551080335043405, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           7.600902459542082, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.006367567650248, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.517193191416236, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.699514748210191, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.85366542803745, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.987196820661973, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           9.104979856318357, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}}, {{0., 
            FormBox[
             TagBox[
              SuperscriptBox["10", "0"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {2.302585092994046, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "1"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {4.605170185988092, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "2"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {6.907755278982137, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "3"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {9.210340371976184, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "4"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {0.6931471805599452, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.0986122886681096`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.3862943611198904`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.6094379124341, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.7917594692280547`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.945910149055313, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.0794415416798353`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.197224577336219, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.9957322735539913`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           3.912023005428146, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.2484952420493585`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           5.298317366548037, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           5.703782474656202, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           5.991464547107983, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.214608098422191, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.396929655216145, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.551080335043405, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           7.600902459542082, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.006367567650248, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.517193191416236, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.699514748210191, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.85366542803745, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.987196820661973, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           9.104979856318357, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}}}},
       FrameTicksStyle->Directive[
         GrayLevel[1], 
         Thickness[Small], FontColor -> GrayLevel[0]],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->NCache[{295, 295/GoldenRatio}, {295, 182.32002668121896`}],
       Method->{},
       PlotLabel->FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\[Epsilon]\\), \\(R\\)]\\)=5.\"", 
         TraditionalForm],
       PlotRange->{{-0.1409745975302477, 
         6.907755278982137}, {-8.558290793128155, 0}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 0}, {0, 
          Scaled[0.05]}},
       Prolog->{
         RGBColor[
          NCache[{
            Rational[223, 255], 
            Rational[72, 85], 
            Rational[40, 51]}, {0.8745098039215686, 0.8470588235294118, 
           0.7843137254901961}]], 
         RectangleBox[
          Scaled[{0, 0}], 
          Scaled[{1, 1}]]},
       Ticks->{
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledTicks[{Log, Exp}]}],
      InterpretTemplate[Legended[
        Graphics[{{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5UOjriZSrP2ldP2z5lz7X+/RD+XfugN3Y5vm/6
90ulLXO/KvXM3uL+gaXNf/v3K4Hl39r/ficvv0J4wX6x0K27N2Z/snes9Q54
abFivzRY/Tf7TCGPhqC4Ffvly6df/nHyp72N5uH87aVb9iuD9f+1NyiJnnr0
xo79U87s+So/hcFhr+18ucqYvVDzmBxiP8lOmmN8eP+Mu2sbnZ1ZHGSnndPL
Mj0FNZ/NwW5D0s1Jdy/sn/NuHm/6J3YH/pwMU03za1D7OB32P/r+YPrhe/sX
/O+f2bWQ26Hm4L6gqOlPoPbzOvi+vqDVc/PN/mUCjarrAvgdDshw9E6o/7p/
Mtg9Ag57rSPMThxhOHBVYOeNF/WCDj0S3DGp99gPQNwn5HAjSErbQYn3QPjM
jfOqwoUdHD6JzZTrEjgAca+Ig8qFF37B6kIHbiquSuHRF3VYdSW9qL9P+ADE
/WIOjx8ffZF/WeRA9KpFWvPYxB3mT5n/UIVR7ADEP+IO+V1LuifJiR+4azT7
g/49CQeFF3nlFgYSByD+k3T4a/6PWcNS8kDC7snbDm6VclhzcRZrt7XUAYh/
pR28Gx+bfLKQPgAA6eDo7A==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5UOjriZSrP2iseuF/KNWnyfgj/rr1H8MuPEYsm
75dKW+Z+VeqZ/fcLy1wT1k/erwSWf2tfzTjX/MG5xfvFQrfu3pj9yZ6jlK9n
8v21+6XB6r/Zx8dnOX2UWLdfvnz65R8nf9rnqWmuX+e/c78yWP9f+7uhXg9O
X963f8qZPV/lpzA46Lx8IPnR9RDUPCaH76cXRqkxntg/4+7aRmdnFgfh/Gds
XNUXoOazOQQfOp7ol3R1/5x383jTP7E7JO83919VdwdqH6dDmPXsZcrsT/Yv
+N8/s2sht4NSlW93fu9rqP28Dm9+lP6bL/ll/zKBRtV1AfwOO7qXsl288m//
ZLB7BBz6VD5u0f3HeuCqwM4bL+oFHUpP3NzrbsR9AOI+IYfPO7o28WrwHwif
uXFeVbiwg+esst7FxoIHIO4VcfiXFRRwYo7QgZuKq1J49EUdwj19G0UfCx+A
uF/Mwejd8hU3BUUPRK9apDWPTdzBWSNgqpCB2AGIf8QdboRfiQ9yEj9w12j2
B/17Eg5rbF9VbPeWOADxn6RDDd+dnyV+kgcSdk/ednCrlEPvRiY3JR+pAxD/
SjvEsbYxvXGVPgAASKToNw==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5UOjriZSrP2ufybJgwrWfXfgj/rn2a59yUaYt2
7ZdKW+Z+VeqZvbS27R/NLbv2K4Hl39pvTzR4yy9/Zr9Y6NbdG7M/2T988Fv6
pPu1/dJg9d/s22+eWBbYcG2/fPn0yz9O/rRfFTFl0ymbp/uVwfr/2nN9l2F+
wvBm/5Qze77KT2FwkK3Xfbot+RPUPCaHI3o3THM6/++fcXdto7MziwNvslJF
ykyOAxDz2RxqrnIHzZLjPTDn3Tze9E/sDgsb9qxoCxE4ALGP0+HPCVs79iuC
Bxb875/ZtZDbQYpz+uVDGsIHIPbzOqiy3D4ZlyhyYJlAo+q6AH4Hz93TZ05s
Ez0wGeweAYfTl73Sns0VO3BVYOeNF/WCDi0vg6cKrRY/AHGfkMO2yrq7KzdI
HAifuXFeVbiwQ1CIul7LBskDEPeKOEjceHn612qpAzcVV6Xw6Is6rD/28hDf
Emmo+8Uc2JY+EWqaKXMgetUirXls4g4szh92vuiRhfpH3MFaImbSljq5A3eN
Zn/QvyfhIHiq84RtvjzUf5IOxoYvG1L0FQ4k7J687eBWKYdLX0K+HF2mAPWv
tEOSZ4nXDVnFAwAq9edp
               "]]}}}, {}}, {{{}, {{{
               Directive[
                PointSize[0.011000000000000001`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6], 
                AbsolutePointSize[6]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {1.2725655957915476`, 
                0.044973365642731196`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                1.5583551222047844`, -0.03293650024626485}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {1.7007400708408864`, 
                0.02273948696948934}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {1.8787013993618633`, 
                0.15529288440603525`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                1.9756076379346226`, -0.16782711064350203`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {2.0818137258248917`, 
                0.035367143837291344`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.198557022569998, -0.08872193006080453}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.347558458636777, -0.07483131062300348}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.4965057856313524`, -0.02829659915511379}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {2.649714624089247, 
                0.20701416938432612`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.1888289035159043`, -0.23029405534305067`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.613886475072506, -1.0501078796084948`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.860308569741467, -1.6337306050031448`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.056469609793174, -1.1548652302189082`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.492561241605437, -2.1413169453979233`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.736198448394496, -3.9808373214285058`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.869839484130799, -4.475897850283952}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {4.93014804318357, -4.255922757878156},
                 Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.994505912166372, -4.723503372949956}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.085124146086995, -4.576582729136179}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.160204064418402, -5.3093783139074615`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {5.2786247332023, -4.958422422649321}, 
                Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.423186348593906, -5.201372160491558}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.556828061699537, -5.2409922999287675`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.682899263739777, -5.125036554406231}, Automatic, 
                Scaled[{0.03, 0.03}]]}, {
               Directive[
                PointSize[0.011000000000000001`], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6], 
                AbsolutePointSize[6]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {1.655175804107954, 
                0.04879016416943204}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.4553061800117097`, -0.3286429655068798}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.844327819394758, -0.4820762104800047}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.477540948249489, -1.5478725567759455`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.8128654338949275`, -2.707100652066622}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.9913885608088866`, -2.8719229878277046`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.152613470346076, -2.3849889192488614`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.294560608892605, -3.4517541052793077`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.412313327278754, -3.5533001598721135`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {4.54052499249456, -3.973366635669198},
                 Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.634728988229636, -4.211777659114197}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {4.74406218485471, -4.458475806837288},
                 Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.844187086458591, -4.521748577849019}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.9473404437239425`, -4.554477071672573}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.050496827521386, -4.241221758082861}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.152713392689245, -4.6646017697575175`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.281679725395013, -4.676344005442616}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {5.41610040220442, -5.215079767977981},
                 Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.5443958891447425`, -5.201916872261721}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {5.66608060747219, -4.786212561283666},
                 Automatic, 
                Scaled[{0.03, 0.03}]]}, {
               Directive[
                PointSize[0.011000000000000001`], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6], 
                AbsolutePointSize[6]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.273053290388008, -1.9477117710019414`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.9428587839469227`, -3.2281688717797934`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.5700959181239695`, -4.403046001897957}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.235120483100881, -5.246104495101102}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {4.674696248636701, -5.82189056313653},
                 Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.345677937907874, -6.815176097689044}, Automatic, 
                Scaled[{0.03, 0.03}]]}, {}}}, {}}}}, {
         DisplayFunction -> Identity, GridLines -> {None, None}, 
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, PlotRangePadding -> {{
             Scaled[0.02], 0}, {0, 
             Scaled[0.05]}}, 
          AxesOrigin -> {-0.248863320129927, -8.513247157374849}, 
          PlotRange -> {{-0.1409745975302477, 
            6.907755278982137}, {-8.558290793128155, 0}}, DisplayFunction -> 
          Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, 
          AxesOrigin -> {-0.248863320129927, -8.513247157374849}, 
          CoordinatesToolOptions -> {"DisplayFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& )}, DisplayFunction :> Identity, 
          Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
             Style["Fold-Change", FontFamily -> "Times", 10], None}, {
             Style["Repressor Copy Number", FontFamily -> "Times", 10], 
             None}}, FrameStyle -> Directive[
            GrayLevel[1], 
            Thickness[Large], FontColor -> GrayLevel[0]], 
          FrameTicks -> {{{{-11.512925464970229`, 
               DisplayForm[
                SuperscriptBox[10, -5]], {0.02, 0}, {}}, {-9.210340371976182, 
               DisplayForm[
                SuperscriptBox[10, -4]], {0.02, 0}, {}}, {-6.907755278982137, 
               DisplayForm[
                SuperscriptBox[10, -3]], {0.02, 0}, {}}, {-4.605170185988091, 
               DisplayForm[
                SuperscriptBox[10, -2]], {
               0.02, 0}, {}}, {-2.3025850929940455`, 
               DisplayForm[
                SuperscriptBox[10, -1]], {0.02, 0}, {}}, {0., 
               DisplayForm[
                SuperscriptBox[10, 0]], {0.02, 0}, {}}, {2.302585092994046, 
               DisplayForm[
                SuperscriptBox[10, 1]], {0.02, 0}, {}}, {-10.819778284410283`,
                "", {0.01, 0}, {}}, {-10.414313176302118`, "", {
               0.01, 0}, {}}, {-10.126631103850338`, "", {
               0.01, 0}, {}}, {-9.903487552536129, "", {
               0.01, 0}, {}}, {-9.721165995742172, "", {
               0.01, 0}, {}}, {-9.567015315914915, "", {
               0.01, 0}, {}}, {-9.433483923290392, "", {
               0.01, 0}, {}}, {-9.315700887634009, "", {
               0.01, 0}, {}}, {-8.517193191416236, "", {
               0.01, 0}, {}}, {-8.111728083308073, "", {
               0.01, 0}, {}}, {-7.824046010856292, "", {
               0.01, 0}, {}}, {-7.600902459542082, "", {
               0.01, 0}, {}}, {-7.418580902748128, "", {
               0.01, 0}, {}}, {-7.264430222920869, "", {
               0.01, 0}, {}}, {-7.130898830296347, "", {
               0.01, 0}, {}}, {-7.013115794639964, "", {
               0.01, 0}, {}}, {-6.214608098422191, "", {
               0.01, 0}, {}}, {-5.809142990314027, "", {
               0.01, 0}, {}}, {-5.521460917862246, "", {
               0.01, 0}, {}}, {-5.298317366548037, "", {
               0.01, 0}, {}}, {-5.115995809754082, "", {
               0.01, 0}, {}}, {-4.961845129926823, "", {
               0.01, 0}, {}}, {-4.8283137373023015`, "", {
               0.01, 0}, {}}, {-4.710530701645918, "", {
               0.01, 0}, {}}, {-3.912023005428146, "", {
               0.01, 0}, {}}, {-3.506557897319982, "", {
               0.01, 0}, {}}, {-3.218875824868201, "", {
               0.01, 0}, {}}, {-2.9957322735539913`, "", {
               0.01, 0}, {}}, {-2.813410716760037, "", {
               0.01, 0}, {}}, {-2.6592600369327783`, "", {
               0.01, 0}, {}}, {-2.525728644308256, "", {
               0.01, 0}, {}}, {-2.4079456086518722`, "", {
               0.01, 0}, {}}, {-1.6094379124341005`, "", {
               0.01, 0}, {}}, {-1.2039728043259361`, "", {
               0.01, 0}, {}}, {-0.9162907318741553, "", {
               0.01, 0}, {}}, {-0.6931471805599457, "", {
               0.01, 0}, {}}, {-0.5108256237659909, "", {
               0.01, 0}, {}}, {-0.3566749439387326, "", {
               0.01, 0}, {}}, {-0.2231435513142104, "", {
               0.01, 0}, {}}, {-0.10536051565782652`, "", {0.01, 0}, {}}, {
              0.6931471805599452, "", {0.01, 0}, {}}, {
              1.0986122886681096`, "", {0.01, 0}, {}}, {
              1.3862943611198904`, "", {0.01, 0}, {}}, {
              1.6094379124341, "", {0.01, 0}, {}}, {
              1.7917594692280547`, "", {0.01, 0}, {}}, {
              1.945910149055313, "", {0.01, 0}, {}}, {
              2.0794415416798353`, "", {0.01, 0}, {}}, {
              2.197224577336219, "", {0.01, 0}, {}}}, {{-11.512925464970229`, 
               DisplayForm[
                SuperscriptBox[10, -5]], {0.02, 0}, {}}, {-9.210340371976182, 
               DisplayForm[
                SuperscriptBox[10, -4]], {0.02, 0}, {}}, {-6.907755278982137, 
               DisplayForm[
                SuperscriptBox[10, -3]], {0.02, 0}, {}}, {-4.605170185988091, 
               DisplayForm[
                SuperscriptBox[10, -2]], {
               0.02, 0}, {}}, {-2.3025850929940455`, 
               DisplayForm[
                SuperscriptBox[10, -1]], {0.02, 0}, {}}, {0., 
               DisplayForm[
                SuperscriptBox[10, 0]], {0.02, 0}, {}}, {2.302585092994046, 
               DisplayForm[
                SuperscriptBox[10, 1]], {0.02, 0}, {}}, {-10.819778284410283`,
                "", {0.01, 0}, {}}, {-10.414313176302118`, "", {
               0.01, 0}, {}}, {-10.126631103850338`, "", {
               0.01, 0}, {}}, {-9.903487552536129, "", {
               0.01, 0}, {}}, {-9.721165995742172, "", {
               0.01, 0}, {}}, {-9.567015315914915, "", {
               0.01, 0}, {}}, {-9.433483923290392, "", {
               0.01, 0}, {}}, {-9.315700887634009, "", {
               0.01, 0}, {}}, {-8.517193191416236, "", {
               0.01, 0}, {}}, {-8.111728083308073, "", {
               0.01, 0}, {}}, {-7.824046010856292, "", {
               0.01, 0}, {}}, {-7.600902459542082, "", {
               0.01, 0}, {}}, {-7.418580902748128, "", {
               0.01, 0}, {}}, {-7.264430222920869, "", {
               0.01, 0}, {}}, {-7.130898830296347, "", {
               0.01, 0}, {}}, {-7.013115794639964, "", {
               0.01, 0}, {}}, {-6.214608098422191, "", {
               0.01, 0}, {}}, {-5.809142990314027, "", {
               0.01, 0}, {}}, {-5.521460917862246, "", {
               0.01, 0}, {}}, {-5.298317366548037, "", {
               0.01, 0}, {}}, {-5.115995809754082, "", {
               0.01, 0}, {}}, {-4.961845129926823, "", {
               0.01, 0}, {}}, {-4.8283137373023015`, "", {
               0.01, 0}, {}}, {-4.710530701645918, "", {
               0.01, 0}, {}}, {-3.912023005428146, "", {
               0.01, 0}, {}}, {-3.506557897319982, "", {
               0.01, 0}, {}}, {-3.218875824868201, "", {
               0.01, 0}, {}}, {-2.9957322735539913`, "", {
               0.01, 0}, {}}, {-2.813410716760037, "", {
               0.01, 0}, {}}, {-2.6592600369327783`, "", {
               0.01, 0}, {}}, {-2.525728644308256, "", {
               0.01, 0}, {}}, {-2.4079456086518722`, "", {
               0.01, 0}, {}}, {-1.6094379124341005`, "", {
               0.01, 0}, {}}, {-1.2039728043259361`, "", {
               0.01, 0}, {}}, {-0.9162907318741553, "", {
               0.01, 0}, {}}, {-0.6931471805599457, "", {
               0.01, 0}, {}}, {-0.5108256237659909, "", {
               0.01, 0}, {}}, {-0.3566749439387326, "", {
               0.01, 0}, {}}, {-0.2231435513142104, "", {
               0.01, 0}, {}}, {-0.10536051565782652`, "", {0.01, 0}, {}}, {
              0.6931471805599452, "", {0.01, 0}, {}}, {
              1.0986122886681096`, "", {0.01, 0}, {}}, {
              1.3862943611198904`, "", {0.01, 0}, {}}, {
              1.6094379124341, "", {0.01, 0}, {}}, {
              1.7917594692280547`, "", {0.01, 0}, {}}, {
              1.945910149055313, "", {0.01, 0}, {}}, {
              2.0794415416798353`, "", {0.01, 0}, {}}, {
              2.197224577336219, "", {0.01, 0}, {}}}}, {{{0., 
               DisplayForm[
                SuperscriptBox[10, 0]], {0.02, 0}, {}}, {2.302585092994046, 
               DisplayForm[
                SuperscriptBox[10, 1]], {0.02, 0}, {}}, {4.605170185988092, 
               DisplayForm[
                SuperscriptBox[10, 2]], {0.02, 0}, {}}, {6.907755278982137, 
               DisplayForm[
                SuperscriptBox[10, 3]], {0.02, 0}, {}}, {9.210340371976184, 
               DisplayForm[
                SuperscriptBox[10, 4]], {0.02, 0}, {}}, {
              0.6931471805599452, "", {0.01, 0}, {}}, {
              1.0986122886681096`, "", {0.01, 0}, {}}, {
              1.3862943611198904`, "", {0.01, 0}, {}}, {
              1.6094379124341, "", {0.01, 0}, {}}, {
              1.7917594692280547`, "", {0.01, 0}, {}}, {
              1.945910149055313, "", {0.01, 0}, {}}, {
              2.0794415416798353`, "", {0.01, 0}, {}}, {
              2.197224577336219, "", {0.01, 0}, {}}, {
              2.9957322735539913`, "", {0.01, 0}, {}}, {
              3.4011973816621555`, "", {0.01, 0}, {}}, {
              3.6888794541139363`, "", {0.01, 0}, {}}, {
              3.912023005428146, "", {0.01, 0}, {}}, {
              4.0943445622221, "", {0.01, 0}, {}}, {
              4.2484952420493585`, "", {0.01, 0}, {}}, {
              4.382026634673881, "", {0.01, 0}, {}}, {
              4.499809670330265, "", {0.01, 0}, {}}, {
              5.298317366548037, "", {0.01, 0}, {}}, {
              5.703782474656202, "", {0.01, 0}, {}}, {
              5.991464547107983, "", {0.01, 0}, {}}, {
              6.214608098422191, "", {0.01, 0}, {}}, {
              6.396929655216145, "", {0.01, 0}, {}}, {
              6.551080335043405, "", {0.01, 0}, {}}, {
              6.684611727667927, "", {0.01, 0}, {}}, {
              6.802394763324311, "", {0.01, 0}, {}}, {
              7.600902459542082, "", {0.01, 0}, {}}, {
              8.006367567650248, "", {0.01, 0}, {}}, {
              8.294049640102028, "", {0.01, 0}, {}}, {
              8.517193191416236, "", {0.01, 0}, {}}, {
              8.699514748210191, "", {0.01, 0}, {}}, {
              8.85366542803745, "", {0.01, 0}, {}}, {
              8.987196820661973, "", {0.01, 0}, {}}, {
              9.104979856318357, "", {0.01, 0}, {}}}, {{0., 
               DisplayForm[
                SuperscriptBox[10, 0]], {0.02, 0}, {}}, {2.302585092994046, 
               DisplayForm[
                SuperscriptBox[10, 1]], {0.02, 0}, {}}, {4.605170185988092, 
               DisplayForm[
                SuperscriptBox[10, 2]], {0.02, 0}, {}}, {6.907755278982137, 
               DisplayForm[
                SuperscriptBox[10, 3]], {0.02, 0}, {}}, {9.210340371976184, 
               DisplayForm[
                SuperscriptBox[10, 4]], {0.02, 0}, {}}, {
              0.6931471805599452, "", {0.01, 0}, {}}, {
              1.0986122886681096`, "", {0.01, 0}, {}}, {
              1.3862943611198904`, "", {0.01, 0}, {}}, {
              1.6094379124341, "", {0.01, 0}, {}}, {
              1.7917594692280547`, "", {0.01, 0}, {}}, {
              1.945910149055313, "", {0.01, 0}, {}}, {
              2.0794415416798353`, "", {0.01, 0}, {}}, {
              2.197224577336219, "", {0.01, 0}, {}}, {
              2.9957322735539913`, "", {0.01, 0}, {}}, {
              3.4011973816621555`, "", {0.01, 0}, {}}, {
              3.6888794541139363`, "", {0.01, 0}, {}}, {
              3.912023005428146, "", {0.01, 0}, {}}, {
              4.0943445622221, "", {0.01, 0}, {}}, {
              4.2484952420493585`, "", {0.01, 0}, {}}, {
              4.382026634673881, "", {0.01, 0}, {}}, {
              4.499809670330265, "", {0.01, 0}, {}}, {
              5.298317366548037, "", {0.01, 0}, {}}, {
              5.703782474656202, "", {0.01, 0}, {}}, {
              5.991464547107983, "", {0.01, 0}, {}}, {
              6.214608098422191, "", {0.01, 0}, {}}, {
              6.396929655216145, "", {0.01, 0}, {}}, {
              6.551080335043405, "", {0.01, 0}, {}}, {
              6.684611727667927, "", {0.01, 0}, {}}, {
              6.802394763324311, "", {0.01, 0}, {}}, {
              7.600902459542082, "", {0.01, 0}, {}}, {
              8.006367567650248, "", {0.01, 0}, {}}, {
              8.294049640102028, "", {0.01, 0}, {}}, {
              8.517193191416236, "", {0.01, 0}, {}}, {
              8.699514748210191, "", {0.01, 0}, {}}, {
              8.85366542803745, "", {0.01, 0}, {}}, {
              8.987196820661973, "", {0.01, 0}, {}}, {
              9.104979856318357, "", {0.01, 0}, {}}}}}, FrameTicksStyle -> 
          Directive[
            GrayLevel[1], 
            Thickness[Small], FontColor -> GrayLevel[0]], 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> {295, 295/GoldenRatio}, 
          Method -> {}, PlotLabel -> 
          "\!\(\*SubscriptBox[\(\[Beta]\[Epsilon]\), \(R\)]\)=5.", 
          PlotRange -> {{-0.1409745975302477, 
            6.907755278982137}, {-8.558290793128155, 0}}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 0}, {0, 
             Scaled[0.05]}}, Prolog -> {
            RGBColor[{
              Rational[223, 255], 
              Rational[72, 85], 
              Rational[40, 51]}], 
            Rectangle[
             Scaled[{0, 0}], 
             Scaled[{1, 1}]]}, Ticks -> {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledTicks[{Log, Exp}]}}], 
        Placed[
         Unevaluated[
          PointLegend[{
            RGBColor[0.368417, 0.506779, 0.709798], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            RGBColor[0.560181, 0.691569, 0.194885]}, {
            Style[
            "O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64", FontFamily -> 
             "Times", 12], 
            Style[
            "O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52", FontFamily -> 
             "Times", 12], 
            Style[
            "Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10", FontFamily -> 
             "Times", 12]}, Joined -> {True, True, True}, LabelStyle -> {}, 
           LegendLayout -> "Column", LegendMarkers -> {{
              Graphics[{
                EdgeForm[{
                  Thickness[Medium], 
                  GrayLevel[1]}], {
                 GrayLevel[1], 
                 Thickness[Tiny], 
                 Circle[{0, 0}, 0.1]}, 
                Disk[{0, 0}, 0.1]}], 0.03}, {
              Graphics[{
                EdgeForm[{
                  Thickness[Medium], 
                  GrayLevel[1]}], {
                 GrayLevel[1], 
                 Thickness[Tiny], 
                 Circle[{0, 0}, 0.1]}, 
                Disk[{0, 0}, 0.1]}], 0.03}, {
              Graphics[{
                EdgeForm[{
                  Thickness[Medium], 
                  GrayLevel[1]}], {
                 GrayLevel[1], 
                 Thickness[Tiny], 
                 Circle[{0, 0}, 0.1]}, 
                Disk[{0, 0}, 0.1]}], 0.03}, {
              Graphics[{
                EdgeForm[{
                  Thickness[Medium], 
                  GrayLevel[1]}], {
                 GrayLevel[1], 
                 Thickness[Tiny], 
                 Circle[{0, 0}, 0.1]}, 
                Disk[{0, 0}, 0.1]}], 0.03}}, Spacings -> {0.5, 0.4}]], {
          Scaled[{0.05, 0.3}], {0, 0.5}}, Identity]]& ],
      AutoDelete->True,
      Editable->True,
      SelectWithContents->False,
      Selectable->True], 
     TagBox[
      GraphicsBox[{{{{}, {{}, {}, 
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.011000000000000001`], AbsoluteThickness[1.6], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5UOjriZSrP2rftmfzzxpf+/RD+XfuFWUFyWkwT
9kulLXO/KvXM/g5naWcox4T9SmD5t/aCKdarChUW7BcL3bp7Y/Yn++WuGxN3
Ba7YLw1W/81+8QzzJ3m5K/bLl0+//OPkT/vyrtRHJ7M27FcG6/9rr9KmzXX9
/Y79U87s+So/hcGh+60bu1zBXqh5TA6ZKw9s6HQ4vH/G3bWNzs4sDhyiddbR
3qeg5rM59D6W+XXn1YX9c97N403/xO7wyfi+QbznNah9nA6LturNvr7h7v4F
//tndi3kduhWmiBhsu4J1H5eB7ke2WV2bG/3LxNoVF0XwO+QljDDkXXR1/2T
we4RcNC+/XaJ0TzGA1cFdt54US/ocO7g86ryJ5wHIO4TcpgwaQFHSA//gfCZ
G+dVhQs7VHa+vKVwQfAAxL0iDvq7dkj/KBE+cFNxVQqPvqhD09GPfkEPRA5A
3C/mcKrYJGu9utiB6FWLtOaxiTvcf35jDlO4+AGIf8QdCndqv+gulThw12j2
B/17Eg7OJ5VNf7dLHoD4T9JB4tGrCbUTpQ4k7J687eBWKQeldzN3+E6RPgDx
r7SDUtddZ/ZJMgcAvJPqGw==
             "]]}, 
           {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
            0.011000000000000001`], AbsoluteThickness[1.6], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5UOjriZSrP2qv+TdyyesXk/RD+XfuATOvCnC2T
90ulLXO/KvXM/mX5urQzeyfvVwLLv7Vf+eTwRd1Hi/eLhW7dvTH7k/3S9Se1
v7Os2y8NVv/Nfrt06dfX+uv2y5dPv/zj5E/7RMEJSduCt+xXBuv/a+/cumr1
/W/79k85s+er/BQGh19J10KMQg9BzWNymLfS8nqd6In9M+6ubXR2ZnGwmSUX
FNBzAWo+m0PdaXWG/+VX9895N483/RO7w5R28d69c+9A7eN0+LDeNcwr7fH+
Bf/7Z3Yt5Ha43vpArmT3a6j9vA6eIiHNq2O+7F8m0Ki6LoDfYcqai5oR0gwH
JoPdI+AgwV4qefwq+4GrAjtvvKgXdFjK7ubr0sx7AOI+IYcgnzpJnksCB8Jn
bpxXFS7sIPf2V3BStdABiHtFHDJS1HsPvRQ+cFNxVQqPvqhDgLddqJmx6AGI
+8UcjixKf8aaInYgetUirXls4g6v2v8VL2kWPwDxj7hDSXLDnofTJA7cNZr9
Qf+ehMNpL4eU/wskD0D8J+nQ9W7Rd9clUgcSdk/ednCrlAPjjaA5UYukD0D8
K+1QMOuiZvEcmQMANrTq/w==
             "]]}, 
           {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
            0.011000000000000001`], AbsoluteThickness[1.6], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5UOjriZSrP2m9rqGwImLFrP4R/15435mrP19W7
9kulLXO/KvXMvki5innp7l37lcDyb+1VPEpOWGud2S8WunX3xuxP9pJW9oYJ
wdf2S4PVf7OfvaH2h37Htf3y5dMv/zj5014lZ7KDmNiD/cpg/X/t+UuP2ecK
vdk/5cyer/JTGByUeBPXnSr8BDWPyUFCoPfZnSP/98+4u7bR2ZnFgVX6elWS
OucBiPlsDlZ+PEVBN3gPzHk3jzf9E7tD/PcbEQ67BQ5A7ON0aNv+YL+Yg9CB
Bf/7Z3Yt5HaInSjykHeG8AGI/bwOh3/Pe3n0ksiBZQKNqusC+B1CTh5qyf4p
emAy2D0CDl/9G/RPCIofuCqw88aLekGHZI+NElvlJQ5A3CfkMGve00e3VSUP
hM/cOK8qXNhhnaTufCU1qQMQ94o4TNT04H+jKH3gpuKqFB59UYfI8I1X7KVk
oO4Xc2hZv3v+E37ZA9GrFmnNYxN3uJ9veqOQWQ7qH3GH6dmR96O/yh24azT7
g/49CYefUx2O/3kqD/WfpIP1WY7gs1kKBxJ2T952cKuUQwxDloLZIwWof6Ud
ahh3u/hFKh4AAESf4Vc=
             "]]}}, {}}, {{}, {
           {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
            AbsoluteThickness[1.6], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {1.2725655957915476`, 0.044973365642731196`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {1.5583551222047844`, -0.03293650024626485},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {1.7007400708408864`, 0.02273948696948934},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {1.8787013993618633`, 0.15529288440603525`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {1.9756076379346226`, -0.16782711064350203`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.0818137258248917`, 0.035367143837291344`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.198557022569998, -0.08872193006080453},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.347558458636777, -0.07483131062300348},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.4965057856313524`, -0.02829659915511379},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.649714624089247, 0.20701416938432612`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.1888289035159043`, -0.23029405534305067`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.613886475072506, -1.0501078796084948`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.860308569741467, -1.6337306050031448`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.056469609793174, -1.1548652302189082`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.492561241605437, -2.1413169453979233`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.736198448394496, -3.9808373214285058`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.869839484130799, -4.475897850283952},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.93014804318357, -4.255922757878156},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.994505912166372, -4.723503372949956},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.085124146086995, -4.576582729136179},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.160204064418402, -5.3093783139074615`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.2786247332023, -4.958422422649321},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.423186348593906, -5.201372160491558},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.556828061699537, -5.2409922999287675`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.682899263739777, -5.125036554406231},
              Automatic, Scaled[{0.03, 0.03}]]}, 
           {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
            AbsoluteThickness[1.6], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {1.655175804107954, 0.04879016416943204},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.4553061800117097`, -0.3286429655068798},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.844327819394758, -0.4820762104800047},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.477540948249489, -1.5478725567759455`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.8128654338949275`, -2.707100652066622},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.9913885608088866`, -2.8719229878277046`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.152613470346076, -2.3849889192488614`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.294560608892605, -3.4517541052793077`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.412313327278754, -3.5533001598721135`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.54052499249456, -3.973366635669198},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.634728988229636, -4.211777659114197},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.74406218485471, -4.458475806837288},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.844187086458591, -4.521748577849019}, \
Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.9473404437239425`, -4.554477071672573},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.050496827521386, -4.241221758082861},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.152713392689245, -4.6646017697575175`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.281679725395013, -4.676344005442616},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.41610040220442, -5.215079767977981},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.5443958891447425`, -5.201916872261721},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.66608060747219, -4.786212561283666},
              Automatic, Scaled[{0.03, 0.03}]]}, 
           {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
            AbsoluteThickness[1.6], InsetBox[
             GraphicsBox[
              {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.273053290388008, -1.9477117710019414`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {2.9428587839469227`, -3.2281688717797934`},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {3.5700959181239695`, -4.403046001897957},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.235120483100881, -5.246104495101102},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {4.674696248636701, -5.82189056313653},
              Automatic, Scaled[{0.03, 0.03}]], InsetBox[
             GraphicsBox[
              {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
               AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[
               Tiny]}], DiskBox[{0, 0}, 0.1]}], {5.345677937907874, -6.815176097689044},
              Automatic, Scaled[{0.03, 0.03}]]}, {}}, {}}}, InsetBox[
         TemplateBox[{
          StyleBox[
           "\"O1, \\!\\(\\*SubscriptBox[\\(N\\), \\(s\\)]\\)=64\"", 
            FontFamily -> "Times", 12, StripOnInput -> False],StyleBox[
           "\"O1, \\!\\(\\*SubscriptBox[\\(N\\), \\(s\\)]\\)=52\"", 
            FontFamily -> "Times", 12, StripOnInput -> False],StyleBox[
           "\"Oid, \\!\\(\\*SubscriptBox[\\(N\\), \\(s\\)]\\)=10\"", 
            FontFamily -> "Times", 12, StripOnInput -> False]},
          "PointLegend",
          DisplayFunction->(FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    
                    LineBox[{{0, 6.6747670784988635`}, {
                    20, 6.6747670784988635`}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.6747670784988635`}, PlotRangePadding -> 
                    None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.054435681955988385`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    
                    LineBox[{{0, 6.6747670784988635`}, {
                    20, 6.6747670784988635`}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.6747670784988635`}, PlotRangePadding -> 
                    None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.054435681955988385`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    
                    LineBox[{{0, 6.6747670784988635`}, {
                    20, 6.6747670784988635`}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.6747670784988635`}, PlotRangePadding -> 
                    None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.054435681955988385`] -> 
                    Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.4}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}], ",", "0.03`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}], ",", "0.03`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}], ",", "0.03`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}], ",", "0.03`"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Spacings", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.4`"}], "}"}]}]}], "]"}]& )], 
         Scaled[{0.05, 0.3}], ImageScaled[{0, 0.5}],
         BaseStyle->{FontSize -> Larger},
         FormatType->StandardForm]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{-0.248863320129927, -8.628770396280112},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )},
       DisplayFunction->Identity,
       Frame->{{True, False}, {True, False}},
       FrameLabel->{{
          FormBox[
           StyleBox[
           "\"Fold-Change\"", FontFamily -> "Times", 10, StripOnInput -> 
            False], TraditionalForm], None}, {
          FormBox[
           StyleBox[
           "\"Repressor Copy Number\"", FontFamily -> "Times", 10, 
            StripOnInput -> False], TraditionalForm], None}},
       FrameStyle->Directive[
         GrayLevel[1], 
         Thickness[Large], FontColor -> GrayLevel[0]],
       FrameTicks->{{{{-11.512925464970229`, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "5"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-9.210340371976182, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "4"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-6.907755278982137, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-4.605170185988091, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "2"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-2.3025850929940455`, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "1"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {0., 
            FormBox[
             TagBox[
              SuperscriptBox["10", "0"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {2.302585092994046, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "1"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-10.819778284410283`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-10.414313176302118`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-10.126631103850338`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.903487552536129, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.721165995742172, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.567015315914915, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.433483923290392, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.315700887634009, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-8.517193191416236, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-8.111728083308073, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.824046010856292, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.600902459542082, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.418580902748128, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.264430222920869, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.130898830296347, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.013115794639964, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-6.214608098422191, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.809142990314027, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.521460917862246, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.298317366548037, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.115995809754082, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-4.961845129926823, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-4.8283137373023015`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-4.710530701645918, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-3.912023005428146, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-3.506557897319982, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-3.218875824868201, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.9957322735539913`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.813410716760037, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.6592600369327783`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.525728644308256, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.4079456086518722`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-1.6094379124341005`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-1.2039728043259361`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.9162907318741553, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.6931471805599457, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.5108256237659909, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.3566749439387326, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.2231435513142104, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.10536051565782652`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           0.6931471805599452, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.0986122886681096`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.3862943611198904`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.6094379124341, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.7917594692280547`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.945910149055313, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.0794415416798353`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.197224577336219, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}}, {{-11.512925464970229`, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "5"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-9.210340371976182, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "4"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-6.907755278982137, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-4.605170185988091, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "2"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-2.3025850929940455`, 
            FormBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "1"}]], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {0., 
            FormBox[
             TagBox[
              SuperscriptBox["10", "0"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {2.302585092994046, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "1"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {-10.819778284410283`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-10.414313176302118`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-10.126631103850338`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.903487552536129, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.721165995742172, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.567015315914915, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.433483923290392, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-9.315700887634009, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-8.517193191416236, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-8.111728083308073, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.824046010856292, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.600902459542082, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.418580902748128, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.264430222920869, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.130898830296347, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-7.013115794639964, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-6.214608098422191, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.809142990314027, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.521460917862246, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.298317366548037, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-5.115995809754082, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-4.961845129926823, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-4.8283137373023015`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-4.710530701645918, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-3.912023005428146, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-3.506557897319982, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-3.218875824868201, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.9957322735539913`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.813410716760037, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.6592600369327783`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.525728644308256, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-2.4079456086518722`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-1.6094379124341005`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-1.2039728043259361`, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.9162907318741553, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.6931471805599457, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.5108256237659909, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.3566749439387326, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.2231435513142104, 
            FormBox["\"\"", TraditionalForm], {
            0.01, 0}, {}}, {-0.10536051565782652`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           0.6931471805599452, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.0986122886681096`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.3862943611198904`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.6094379124341, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.7917594692280547`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.945910149055313, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.0794415416798353`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.197224577336219, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}}}, {{{0., 
            FormBox[
             TagBox[
              SuperscriptBox["10", "0"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {2.302585092994046, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "1"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {4.605170185988092, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "2"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {6.907755278982137, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "3"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {9.210340371976184, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "4"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {0.6931471805599452, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.0986122886681096`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.3862943611198904`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.6094379124341, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.7917594692280547`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.945910149055313, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.0794415416798353`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.197224577336219, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.9957322735539913`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           3.912023005428146, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.2484952420493585`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           5.298317366548037, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           5.703782474656202, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           5.991464547107983, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.214608098422191, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.396929655216145, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.551080335043405, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           7.600902459542082, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.006367567650248, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.517193191416236, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.699514748210191, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.85366542803745, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.987196820661973, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           9.104979856318357, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}}, {{0., 
            FormBox[
             TagBox[
              SuperscriptBox["10", "0"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {2.302585092994046, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "1"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {4.605170185988092, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "2"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {6.907755278982137, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "3"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {9.210340371976184, 
            FormBox[
             TagBox[
              SuperscriptBox["10", "4"], DisplayForm], TraditionalForm], {
            0.02, 0}, {}}, {0.6931471805599452, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.0986122886681096`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.3862943611198904`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.6094379124341, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.7917594692280547`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           1.945910149055313, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.0794415416798353`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.197224577336219, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           2.9957322735539913`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           3.912023005428146, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.2484952420493585`, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           5.298317366548037, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           5.703782474656202, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           5.991464547107983, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.214608098422191, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.396929655216145, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.551080335043405, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           7.600902459542082, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.006367567650248, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.517193191416236, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.699514748210191, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.85366542803745, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           8.987196820661973, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
           9.104979856318357, 
            FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}}}},
       FrameTicksStyle->Directive[
         GrayLevel[1], 
         Thickness[Small], FontColor -> GrayLevel[0]],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->NCache[{295, 295/GoldenRatio}, {295, 182.32002668121896`}],
       Method->{},
       PlotLabel->FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\[Epsilon]\\), \\(R\\)]\\)=0.\"", 
         TraditionalForm],
       PlotRange->{{-0.1409745975302477, 
         6.907755278982137}, {-8.6744252661017, 0}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 0}, {0, 
          Scaled[0.05]}},
       Prolog->{
         RGBColor[
          NCache[{
            Rational[223, 255], 
            Rational[72, 85], 
            Rational[40, 51]}, {0.8745098039215686, 0.8470588235294118, 
           0.7843137254901961}]], 
         RectangleBox[
          Scaled[{0, 0}], 
          Scaled[{1, 1}]]},
       Ticks->{
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledTicks[{Log, Exp}]}],
      InterpretTemplate[Legended[
        Graphics[{{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5UOjriZSrP2rftmfzzxpf+/RD+XfuFWUFyWkwT
9kulLXO/KvXM/g5naWcox4T9SmD5t/aCKdarChUW7BcL3bp7Y/Yn++WuGxN3
Ba7YLw1W/81+8QzzJ3m5K/bLl0+//OPkT/vyrtRHJ7M27FcG6/9rr9KmzXX9
/Y79U87s+So/hcGh+60bu1zBXqh5TA6ZKw9s6HQ4vH/G3bWNzs4sDhyiddbR
3qeg5rM59D6W+XXn1YX9c97N403/xO7wyfi+QbznNah9nA6LturNvr7h7v4F
//tndi3kduhWmiBhsu4J1H5eB7ke2WV2bG/3LxNoVF0XwO+QljDDkXXR1/2T
we4RcNC+/XaJ0TzGA1cFdt54US/ocO7g86ryJ5wHIO4TcpgwaQFHSA//gfCZ
G+dVhQs7VHa+vKVwQfAAxL0iDvq7dkj/KBE+cFNxVQqPvqhD09GPfkEPRA5A
3C/mcKrYJGu9utiB6FWLtOaxiTvcf35jDlO4+AGIf8QdCndqv+gulThw12j2
B/17Eg7OJ5VNf7dLHoD4T9JB4tGrCbUTpQ4k7J687eBWKQeldzN3+E6RPgDx
r7SDUtddZ/ZJMgcAvJPqGw==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5UOjriZSrP2qv+TdyyesXk/RD+XfuATOvCnC2T
90ulLXO/KvXM/mX5urQzeyfvVwLLv7Vf+eTwRd1Hi/eLhW7dvTH7k/3S9Se1
v7Os2y8NVv/Nfrt06dfX+uv2y5dPv/zj5E/7RMEJSduCt+xXBuv/a+/cumr1
/W/79k85s+er/BQGh19J10KMQg9BzWNymLfS8nqd6In9M+6ubXR2ZnGwmSUX
FNBzAWo+m0PdaXWG/+VX9895N483/RO7w5R28d69c+9A7eN0+LDeNcwr7fH+
Bf/7Z3Yt5Ha43vpArmT3a6j9vA6eIiHNq2O+7F8m0Ki6LoDfYcqai5oR0gwH
JoPdI+AgwV4qefwq+4GrAjtvvKgXdFjK7ubr0sx7AOI+IYcgnzpJnksCB8Jn
bpxXFS7sIPf2V3BStdABiHtFHDJS1HsPvRQ+cFNxVQqPvqhDgLddqJmx6AGI
+8UcjixKf8aaInYgetUirXls4g6v2v8VL2kWPwDxj7hDSXLDnofTJA7cNZr9
Qf+ehMNpL4eU/wskD0D8J+nQ9W7Rd9clUgcSdk/ednCrlAPjjaA5UYukD0D8
K+1QMOuiZvEcmQMANrTq/w==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5UOjriZSrP2m9rqGwImLFrP4R/15435mrP19W7
9kulLXO/KvXMvki5innp7l37lcDyb+1VPEpOWGud2S8WunX3xuxP9pJW9oYJ
wdf2S4PVf7OfvaH2h37Htf3y5dMv/zj5014lZ7KDmNiD/cpg/X/t+UuP2ecK
vdk/5cyer/JTGByUeBPXnSr8BDWPyUFCoPfZnSP/98+4u7bR2ZnFgVX6elWS
OucBiPlsDlZ+PEVBN3gPzHk3jzf9E7tD/PcbEQ67BQ5A7ON0aNv+YL+Yg9CB
Bf/7Z3Yt5HaInSjykHeG8AGI/bwOh3/Pe3n0ksiBZQKNqusC+B1CTh5qyf4p
emAy2D0CDl/9G/RPCIofuCqw88aLekGHZI+NElvlJQ5A3CfkMGve00e3VSUP
hM/cOK8qXNhhnaTufCU1qQMQ94o4TNT04H+jKH3gpuKqFB59UYfI8I1X7KVk
oO4Xc2hZv3v+E37ZA9GrFmnNYxN3uJ9veqOQWQ7qH3GH6dmR96O/yh24azT7
g/49CYefUx2O/3kqD/WfpIP1WY7gs1kKBxJ2T952cKuUQwxDloLZIwWof6Ud
ahh3u/hFKh4AAESf4Vc=
               "]]}}}, {}}, {{{}, {{{
               Directive[
                PointSize[0.011000000000000001`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6], 
                AbsolutePointSize[6]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {1.2725655957915476`, 
                0.044973365642731196`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                1.5583551222047844`, -0.03293650024626485}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {1.7007400708408864`, 
                0.02273948696948934}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {1.8787013993618633`, 
                0.15529288440603525`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                1.9756076379346226`, -0.16782711064350203`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {2.0818137258248917`, 
                0.035367143837291344`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.198557022569998, -0.08872193006080453}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.347558458636777, -0.07483131062300348}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.4965057856313524`, -0.02829659915511379}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {2.649714624089247, 
                0.20701416938432612`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.1888289035159043`, -0.23029405534305067`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.613886475072506, -1.0501078796084948`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.860308569741467, -1.6337306050031448`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.056469609793174, -1.1548652302189082`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.492561241605437, -2.1413169453979233`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.736198448394496, -3.9808373214285058`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.869839484130799, -4.475897850283952}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {4.93014804318357, -4.255922757878156},
                 Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.994505912166372, -4.723503372949956}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.085124146086995, -4.576582729136179}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.160204064418402, -5.3093783139074615`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {5.2786247332023, -4.958422422649321}, 
                Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.423186348593906, -5.201372160491558}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.556828061699537, -5.2409922999287675`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.682899263739777, -5.125036554406231}, Automatic, 
                Scaled[{0.03, 0.03}]]}, {
               Directive[
                PointSize[0.011000000000000001`], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6], 
                AbsolutePointSize[6]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {1.655175804107954, 
                0.04879016416943204}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.4553061800117097`, -0.3286429655068798}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.844327819394758, -0.4820762104800047}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.477540948249489, -1.5478725567759455`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.8128654338949275`, -2.707100652066622}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.9913885608088866`, -2.8719229878277046`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.152613470346076, -2.3849889192488614`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.294560608892605, -3.4517541052793077`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.412313327278754, -3.5533001598721135`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {4.54052499249456, -3.973366635669198},
                 Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.634728988229636, -4.211777659114197}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {4.74406218485471, -4.458475806837288},
                 Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.844187086458591, -4.521748577849019}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.9473404437239425`, -4.554477071672573}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.050496827521386, -4.241221758082861}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.152713392689245, -4.6646017697575175`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.281679725395013, -4.676344005442616}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {5.41610040220442, -5.215079767977981},
                 Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.5443958891447425`, -5.201916872261721}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {5.66608060747219, -4.786212561283666},
                 Automatic, 
                Scaled[{0.03, 0.03}]]}, {
               Directive[
                PointSize[0.011000000000000001`], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6], 
                AbsolutePointSize[6]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.273053290388008, -1.9477117710019414`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                2.9428587839469227`, -3.2281688717797934`}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                3.5700959181239695`, -4.403046001897957}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                4.235120483100881, -5.246104495101102}, Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {4.674696248636701, -5.82189056313653},
                 Automatic, 
                Scaled[{0.03, 0.03}]], 
               Inset[
                Graphics[{
                  Directive[
                   PointSize[0.011000000000000001`], 
                   RGBColor[0.560181, 0.691569, 0.194885], 
                   AbsoluteThickness[1.6], 
                   AbsolutePointSize[6]], 
                  EdgeForm[{
                    Thickness[Tiny], 
                    GrayLevel[1]}], 
                  Disk[{0, 0}, 0.1]}], {
                5.345677937907874, -6.815176097689044}, Automatic, 
                Scaled[{0.03, 0.03}]]}, {}}}, {}}}}, {
         DisplayFunction -> Identity, GridLines -> {None, None}, 
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, PlotRangePadding -> {{
             Scaled[0.02], 0}, {0, 
             Scaled[0.05]}}, 
          AxesOrigin -> {-0.248863320129927, -8.628770396280112}, 
          PlotRange -> {{-0.1409745975302477, 
            6.907755278982137}, {-8.6744252661017, 0}}, DisplayFunction -> 
          Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, 
          AxesOrigin -> {-0.248863320129927, -8.628770396280112}, 
          CoordinatesToolOptions -> {"DisplayFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& )}, DisplayFunction :> Identity, 
          Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
             Style["Fold-Change", FontFamily -> "Times", 10], None}, {
             Style["Repressor Copy Number", FontFamily -> "Times", 10], 
             None}}, FrameStyle -> Directive[
            GrayLevel[1], 
            Thickness[Large], FontColor -> GrayLevel[0]], 
          FrameTicks -> {{{{-11.512925464970229`, 
               DisplayForm[
                SuperscriptBox[10, -5]], {0.02, 0}, {}}, {-9.210340371976182, 
               DisplayForm[
                SuperscriptBox[10, -4]], {0.02, 0}, {}}, {-6.907755278982137, 
               DisplayForm[
                SuperscriptBox[10, -3]], {0.02, 0}, {}}, {-4.605170185988091, 
               DisplayForm[
                SuperscriptBox[10, -2]], {
               0.02, 0}, {}}, {-2.3025850929940455`, 
               DisplayForm[
                SuperscriptBox[10, -1]], {0.02, 0}, {}}, {0., 
               DisplayForm[
                SuperscriptBox[10, 0]], {0.02, 0}, {}}, {2.302585092994046, 
               DisplayForm[
                SuperscriptBox[10, 1]], {0.02, 0}, {}}, {-10.819778284410283`,
                "", {0.01, 0}, {}}, {-10.414313176302118`, "", {
               0.01, 0}, {}}, {-10.126631103850338`, "", {
               0.01, 0}, {}}, {-9.903487552536129, "", {
               0.01, 0}, {}}, {-9.721165995742172, "", {
               0.01, 0}, {}}, {-9.567015315914915, "", {
               0.01, 0}, {}}, {-9.433483923290392, "", {
               0.01, 0}, {}}, {-9.315700887634009, "", {
               0.01, 0}, {}}, {-8.517193191416236, "", {
               0.01, 0}, {}}, {-8.111728083308073, "", {
               0.01, 0}, {}}, {-7.824046010856292, "", {
               0.01, 0}, {}}, {-7.600902459542082, "", {
               0.01, 0}, {}}, {-7.418580902748128, "", {
               0.01, 0}, {}}, {-7.264430222920869, "", {
               0.01, 0}, {}}, {-7.130898830296347, "", {
               0.01, 0}, {}}, {-7.013115794639964, "", {
               0.01, 0}, {}}, {-6.214608098422191, "", {
               0.01, 0}, {}}, {-5.809142990314027, "", {
               0.01, 0}, {}}, {-5.521460917862246, "", {
               0.01, 0}, {}}, {-5.298317366548037, "", {
               0.01, 0}, {}}, {-5.115995809754082, "", {
               0.01, 0}, {}}, {-4.961845129926823, "", {
               0.01, 0}, {}}, {-4.8283137373023015`, "", {
               0.01, 0}, {}}, {-4.710530701645918, "", {
               0.01, 0}, {}}, {-3.912023005428146, "", {
               0.01, 0}, {}}, {-3.506557897319982, "", {
               0.01, 0}, {}}, {-3.218875824868201, "", {
               0.01, 0}, {}}, {-2.9957322735539913`, "", {
               0.01, 0}, {}}, {-2.813410716760037, "", {
               0.01, 0}, {}}, {-2.6592600369327783`, "", {
               0.01, 0}, {}}, {-2.525728644308256, "", {
               0.01, 0}, {}}, {-2.4079456086518722`, "", {
               0.01, 0}, {}}, {-1.6094379124341005`, "", {
               0.01, 0}, {}}, {-1.2039728043259361`, "", {
               0.01, 0}, {}}, {-0.9162907318741553, "", {
               0.01, 0}, {}}, {-0.6931471805599457, "", {
               0.01, 0}, {}}, {-0.5108256237659909, "", {
               0.01, 0}, {}}, {-0.3566749439387326, "", {
               0.01, 0}, {}}, {-0.2231435513142104, "", {
               0.01, 0}, {}}, {-0.10536051565782652`, "", {0.01, 0}, {}}, {
              0.6931471805599452, "", {0.01, 0}, {}}, {
              1.0986122886681096`, "", {0.01, 0}, {}}, {
              1.3862943611198904`, "", {0.01, 0}, {}}, {
              1.6094379124341, "", {0.01, 0}, {}}, {
              1.7917594692280547`, "", {0.01, 0}, {}}, {
              1.945910149055313, "", {0.01, 0}, {}}, {
              2.0794415416798353`, "", {0.01, 0}, {}}, {
              2.197224577336219, "", {0.01, 0}, {}}}, {{-11.512925464970229`, 
               DisplayForm[
                SuperscriptBox[10, -5]], {0.02, 0}, {}}, {-9.210340371976182, 
               DisplayForm[
                SuperscriptBox[10, -4]], {0.02, 0}, {}}, {-6.907755278982137, 
               DisplayForm[
                SuperscriptBox[10, -3]], {0.02, 0}, {}}, {-4.605170185988091, 
               DisplayForm[
                SuperscriptBox[10, -2]], {
               0.02, 0}, {}}, {-2.3025850929940455`, 
               DisplayForm[
                SuperscriptBox[10, -1]], {0.02, 0}, {}}, {0., 
               DisplayForm[
                SuperscriptBox[10, 0]], {0.02, 0}, {}}, {2.302585092994046, 
               DisplayForm[
                SuperscriptBox[10, 1]], {0.02, 0}, {}}, {-10.819778284410283`,
                "", {0.01, 0}, {}}, {-10.414313176302118`, "", {
               0.01, 0}, {}}, {-10.126631103850338`, "", {
               0.01, 0}, {}}, {-9.903487552536129, "", {
               0.01, 0}, {}}, {-9.721165995742172, "", {
               0.01, 0}, {}}, {-9.567015315914915, "", {
               0.01, 0}, {}}, {-9.433483923290392, "", {
               0.01, 0}, {}}, {-9.315700887634009, "", {
               0.01, 0}, {}}, {-8.517193191416236, "", {
               0.01, 0}, {}}, {-8.111728083308073, "", {
               0.01, 0}, {}}, {-7.824046010856292, "", {
               0.01, 0}, {}}, {-7.600902459542082, "", {
               0.01, 0}, {}}, {-7.418580902748128, "", {
               0.01, 0}, {}}, {-7.264430222920869, "", {
               0.01, 0}, {}}, {-7.130898830296347, "", {
               0.01, 0}, {}}, {-7.013115794639964, "", {
               0.01, 0}, {}}, {-6.214608098422191, "", {
               0.01, 0}, {}}, {-5.809142990314027, "", {
               0.01, 0}, {}}, {-5.521460917862246, "", {
               0.01, 0}, {}}, {-5.298317366548037, "", {
               0.01, 0}, {}}, {-5.115995809754082, "", {
               0.01, 0}, {}}, {-4.961845129926823, "", {
               0.01, 0}, {}}, {-4.8283137373023015`, "", {
               0.01, 0}, {}}, {-4.710530701645918, "", {
               0.01, 0}, {}}, {-3.912023005428146, "", {
               0.01, 0}, {}}, {-3.506557897319982, "", {
               0.01, 0}, {}}, {-3.218875824868201, "", {
               0.01, 0}, {}}, {-2.9957322735539913`, "", {
               0.01, 0}, {}}, {-2.813410716760037, "", {
               0.01, 0}, {}}, {-2.6592600369327783`, "", {
               0.01, 0}, {}}, {-2.525728644308256, "", {
               0.01, 0}, {}}, {-2.4079456086518722`, "", {
               0.01, 0}, {}}, {-1.6094379124341005`, "", {
               0.01, 0}, {}}, {-1.2039728043259361`, "", {
               0.01, 0}, {}}, {-0.9162907318741553, "", {
               0.01, 0}, {}}, {-0.6931471805599457, "", {
               0.01, 0}, {}}, {-0.5108256237659909, "", {
               0.01, 0}, {}}, {-0.3566749439387326, "", {
               0.01, 0}, {}}, {-0.2231435513142104, "", {
               0.01, 0}, {}}, {-0.10536051565782652`, "", {0.01, 0}, {}}, {
              0.6931471805599452, "", {0.01, 0}, {}}, {
              1.0986122886681096`, "", {0.01, 0}, {}}, {
              1.3862943611198904`, "", {0.01, 0}, {}}, {
              1.6094379124341, "", {0.01, 0}, {}}, {
              1.7917594692280547`, "", {0.01, 0}, {}}, {
              1.945910149055313, "", {0.01, 0}, {}}, {
              2.0794415416798353`, "", {0.01, 0}, {}}, {
              2.197224577336219, "", {0.01, 0}, {}}}}, {{{0., 
               DisplayForm[
                SuperscriptBox[10, 0]], {0.02, 0}, {}}, {2.302585092994046, 
               DisplayForm[
                SuperscriptBox[10, 1]], {0.02, 0}, {}}, {4.605170185988092, 
               DisplayForm[
                SuperscriptBox[10, 2]], {0.02, 0}, {}}, {6.907755278982137, 
               DisplayForm[
                SuperscriptBox[10, 3]], {0.02, 0}, {}}, {9.210340371976184, 
               DisplayForm[
                SuperscriptBox[10, 4]], {0.02, 0}, {}}, {
              0.6931471805599452, "", {0.01, 0}, {}}, {
              1.0986122886681096`, "", {0.01, 0}, {}}, {
              1.3862943611198904`, "", {0.01, 0}, {}}, {
              1.6094379124341, "", {0.01, 0}, {}}, {
              1.7917594692280547`, "", {0.01, 0}, {}}, {
              1.945910149055313, "", {0.01, 0}, {}}, {
              2.0794415416798353`, "", {0.01, 0}, {}}, {
              2.197224577336219, "", {0.01, 0}, {}}, {
              2.9957322735539913`, "", {0.01, 0}, {}}, {
              3.4011973816621555`, "", {0.01, 0}, {}}, {
              3.6888794541139363`, "", {0.01, 0}, {}}, {
              3.912023005428146, "", {0.01, 0}, {}}, {
              4.0943445622221, "", {0.01, 0}, {}}, {
              4.2484952420493585`, "", {0.01, 0}, {}}, {
              4.382026634673881, "", {0.01, 0}, {}}, {
              4.499809670330265, "", {0.01, 0}, {}}, {
              5.298317366548037, "", {0.01, 0}, {}}, {
              5.703782474656202, "", {0.01, 0}, {}}, {
              5.991464547107983, "", {0.01, 0}, {}}, {
              6.214608098422191, "", {0.01, 0}, {}}, {
              6.396929655216145, "", {0.01, 0}, {}}, {
              6.551080335043405, "", {0.01, 0}, {}}, {
              6.684611727667927, "", {0.01, 0}, {}}, {
              6.802394763324311, "", {0.01, 0}, {}}, {
              7.600902459542082, "", {0.01, 0}, {}}, {
              8.006367567650248, "", {0.01, 0}, {}}, {
              8.294049640102028, "", {0.01, 0}, {}}, {
              8.517193191416236, "", {0.01, 0}, {}}, {
              8.699514748210191, "", {0.01, 0}, {}}, {
              8.85366542803745, "", {0.01, 0}, {}}, {
              8.987196820661973, "", {0.01, 0}, {}}, {
              9.104979856318357, "", {0.01, 0}, {}}}, {{0., 
               DisplayForm[
                SuperscriptBox[10, 0]], {0.02, 0}, {}}, {2.302585092994046, 
               DisplayForm[
                SuperscriptBox[10, 1]], {0.02, 0}, {}}, {4.605170185988092, 
               DisplayForm[
                SuperscriptBox[10, 2]], {0.02, 0}, {}}, {6.907755278982137, 
               DisplayForm[
                SuperscriptBox[10, 3]], {0.02, 0}, {}}, {9.210340371976184, 
               DisplayForm[
                SuperscriptBox[10, 4]], {0.02, 0}, {}}, {
              0.6931471805599452, "", {0.01, 0}, {}}, {
              1.0986122886681096`, "", {0.01, 0}, {}}, {
              1.3862943611198904`, "", {0.01, 0}, {}}, {
              1.6094379124341, "", {0.01, 0}, {}}, {
              1.7917594692280547`, "", {0.01, 0}, {}}, {
              1.945910149055313, "", {0.01, 0}, {}}, {
              2.0794415416798353`, "", {0.01, 0}, {}}, {
              2.197224577336219, "", {0.01, 0}, {}}, {
              2.9957322735539913`, "", {0.01, 0}, {}}, {
              3.4011973816621555`, "", {0.01, 0}, {}}, {
              3.6888794541139363`, "", {0.01, 0}, {}}, {
              3.912023005428146, "", {0.01, 0}, {}}, {
              4.0943445622221, "", {0.01, 0}, {}}, {
              4.2484952420493585`, "", {0.01, 0}, {}}, {
              4.382026634673881, "", {0.01, 0}, {}}, {
              4.499809670330265, "", {0.01, 0}, {}}, {
              5.298317366548037, "", {0.01, 0}, {}}, {
              5.703782474656202, "", {0.01, 0}, {}}, {
              5.991464547107983, "", {0.01, 0}, {}}, {
              6.214608098422191, "", {0.01, 0}, {}}, {
              6.396929655216145, "", {0.01, 0}, {}}, {
              6.551080335043405, "", {0.01, 0}, {}}, {
              6.684611727667927, "", {0.01, 0}, {}}, {
              6.802394763324311, "", {0.01, 0}, {}}, {
              7.600902459542082, "", {0.01, 0}, {}}, {
              8.006367567650248, "", {0.01, 0}, {}}, {
              8.294049640102028, "", {0.01, 0}, {}}, {
              8.517193191416236, "", {0.01, 0}, {}}, {
              8.699514748210191, "", {0.01, 0}, {}}, {
              8.85366542803745, "", {0.01, 0}, {}}, {
              8.987196820661973, "", {0.01, 0}, {}}, {
              9.104979856318357, "", {0.01, 0}, {}}}}}, FrameTicksStyle -> 
          Directive[
            GrayLevel[1], 
            Thickness[Small], FontColor -> GrayLevel[0]], 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> {295, 295/GoldenRatio}, 
          Method -> {}, PlotLabel -> 
          "\!\(\*SubscriptBox[\(\[Beta]\[Epsilon]\), \(R\)]\)=0.", 
          PlotRange -> {{-0.1409745975302477, 
            6.907755278982137}, {-8.6744252661017, 0}}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 0}, {0, 
             Scaled[0.05]}}, Prolog -> {
            RGBColor[{
              Rational[223, 255], 
              Rational[72, 85], 
              Rational[40, 51]}], 
            Rectangle[
             Scaled[{0, 0}], 
             Scaled[{1, 1}]]}, Ticks -> {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledTicks[{Log, Exp}]}}], 
        Placed[
         Unevaluated[
          PointLegend[{
            RGBColor[0.368417, 0.506779, 0.709798], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            RGBColor[0.560181, 0.691569, 0.194885]}, {
            Style[
            "O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64", FontFamily -> 
             "Times", 12], 
            Style[
            "O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52", FontFamily -> 
             "Times", 12], 
            Style[
            "Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10", FontFamily -> 
             "Times", 12]}, Joined -> {True, True, True}, LabelStyle -> {}, 
           LegendLayout -> "Column", LegendMarkers -> {{
              Graphics[{
                EdgeForm[{
                  Thickness[Medium], 
                  GrayLevel[1]}], {
                 GrayLevel[1], 
                 Thickness[Tiny], 
                 Circle[{0, 0}, 0.1]}, 
                Disk[{0, 0}, 0.1]}], 0.03}, {
              Graphics[{
                EdgeForm[{
                  Thickness[Medium], 
                  GrayLevel[1]}], {
                 GrayLevel[1], 
                 Thickness[Tiny], 
                 Circle[{0, 0}, 0.1]}, 
                Disk[{0, 0}, 0.1]}], 0.03}, {
              Graphics[{
                EdgeForm[{
                  Thickness[Medium], 
                  GrayLevel[1]}], {
                 GrayLevel[1], 
                 Thickness[Tiny], 
                 Circle[{0, 0}, 0.1]}, 
                Disk[{0, 0}, 0.1]}], 0.03}, {
              Graphics[{
                EdgeForm[{
                  Thickness[Medium], 
                  GrayLevel[1]}], {
                 GrayLevel[1], 
                 Thickness[Tiny], 
                 Circle[{0, 0}, 0.1]}, 
                Disk[{0, 0}, 0.1]}], 0.03}}, Spacings -> {0.5, 0.4}]], {
          Scaled[{0.05, 0.3}], {0, 0.5}}, Identity]]& ],
      AutoDelete->True,
      Editable->True,
      SelectWithContents->False,
      Selectable->True]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.6796970459692965`*^9}],

Cell[TextData[{
 "Stephanie idea version 1: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]\[Epsilon]", "R"], "=", "4.5"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n(This did not consider the effect of the operator itself pulling more of \
the repressors into the active state)"
}], "Text",
 CellChangeTimes->{{3.67969687365144*^9, 3.67969688187191*^9}, {
  3.679697064201339*^9, 3.679697077065075*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvWtQW2eW99t1zlup86U/9ac+Vady3qpJpjNJ5+LE0+24epyZpJP0OMm8
8Zmk88bTmXESk8RtJ8ET045Jgo3tMMbYYIzBxtyMMPeLuQkQIBACXQBxlVBs
iDG+JHacvt97ujvnEc9ma2trC3TZW2sL/r/6V0pgob20ST16/qxnrfU/X31n
S9L/8bWvfe0//y/2ny3bfvKPu3dve///+x/si396/73tr/6f7MEM+/d/YN/x
Pf4KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYS8x/4oAgCFrLol6GAQAAgDWJ
MelrAo/mzIb1E+R7BgiCIFppvC4DAAAAIAifbVkyLNLHy0K+Z4AgCKKVxksz
AAAAAGTM5jwa4FV83iXJuOKPke8ZIAiCaKXlygwAAACAIHzGJcCpBH1DGfI9
AwRBEK20XJoBAAAAEIQ85RJu0oV8zwBBEEQrDVdmAAAAAAQTXNgSXqkL+Z4B
giCIVlouzQAAAAAIAs4FgiAoKmm5NAMAAABrghCnvfyNjwP+GafFIAiCopIq
KzYAAACwZlmsrw9yHsJ3pSw9AxX6EARBUUnVxRsAAABYW/jTKoHOg39fzKwE
fomuyBAEQdFIxdUbAAAAWEsIriXJuPggwHosfifgRNhiXiXAyWASJQRBUGRS
bwEHAAAA1hTGJMGtBDmXQJsi+Z7/SZLTZGHZlq/Cdi6GoxvPHv9/IQJlM/1P
/atoUcX6VlHO3xTl/O3ZE/ecPfF3ulXxqfvOFd9fYXiosmodFB+psXQDAAAA
axll56JU+BKuSQmfYOdSeuzbuflfgyAIWn1SeQEFAAAA1hxBziX4+JgaziXM
nAucCwRBq1XRL6AAAAAA8BGnnEuYzqWj5O2GnH+ty/6X+uPPNBz7QeOxJ0Op
4djT9cc21x5/pjp7c1XODypzng6lquwf1GRvrs1+Jiyx62Y9cyFzc+vhH4TU
xz+4kPlM4/F/uXB8S3P2C805K6jx+A9rj718/ui/nTvy76FUkfmjmqyt9ce3
1ue+Upe3TUU1nXm1reQ1Y+nry6u9+D9a8/+1JfvpCx8/GlKZj7WeeKa14EXV
1V70o46KHR3VySuqtjy5pCg5t2B39qlkRZ3ITy4q8j1NdTWUJ3fXJA81rixn
3Utj1Y9Nnv/WtOH/CaXxyr8fqfmX4boXVBcLwNJ8fEWZDP/VnJNe9cG+c2+n
hBL7V/Yc49mPVVdf3VHnQN6oI39NKfoFFAAAAAA+oqlziZpIC1o/Ge8ZbM/v
r0h2nv3nT8/es1D0N6F0seRue/m3jFX3nqu/P7v5IVVUVr6u/cTDw/sfXtj5
yJevro9dt17bMP3GC6Zd71Xszsn8SVPG3ta46fTRjkZDr9VkuThlW/m2m4un
KlNcOc879t479Pb/HTc5Uh8cz9/quZAxN9axYpA2l6O23368zZFc5fhRSfy0
vdyZ2eq79Mj4yv8DX/M0fTF+8JfDL/1h8L6v+r4WT/3O9t2fje74bLpoxSBn
J4bGjD0DRa1tH1VXvV5y/j+K46YLP6m0nGlmV//UbVelBF7ninkFBQAAANY4
kfcWiwpVPvdH+yr7aw9YS1+ZKNy4jIthcp37W1Pl39XUfbug6QFVXMzpmofq
Tz/cn/GwJ0UdF8N08Y1nrT9+s+HdQwXvlerWxcyNtMy0Zk0WvzFy+LF4uhhn
2vqJM9vYpcNxMV63w2R3lHQ7PmpwbCuLn4t5y+AI38UwfT6Vz9zEb+2b/mz5
RtwszF/77wjfxTC5LX32KmNXZn39O+XxdDEt+6qYi5kw9ZL7C+0UwwoKAAAA
gK8Uy1qWnecSJarvAT4Z77F3ng1H/R3Hu4z7w1Rb47tGw5aBsvXM+yiK/RN7
Qn/xa9aKf++qeKa29DuVJesU1XzuH/srXxyv3THdcnC69ePlNXbhiLU4a/xo
+mRK0vQbLyhq6t1/n/g41VWUP9LS4uy3hqPORrOhwHQsrV0VFzO/mI5RXZ4L
GeP5Wx2pDy7jYph18hpPfDoZ1rbW5nKYh1WWcciR3+lMqXGGcjG7zjuOtzka
Bxzjk2H9D3zN08SMjOr6+ejrvx9aF8rF/MXydeabfup698Z0eThBXnQNMiuh
uqylbcb0mmXyO20fVQ8Uta4+FxPLEgoAAACAZQryA4n1qBj5niFSTdpb+hs+
7i99dXyl/M5U2d29FffU1H0778KDMWZ2clvWV5u3DZjT5+qPfJ6b/MWeZ0Ll
a27vevzm8Z3Xmk5dmTCH83bGbIMrupgwlZnayl6nu7nPPTqk7j2fG2lZ0cWE
r5HDj01VplwarFI3SK97ZRcTvpKrfC9lsqv/P/CKLiZ8/ffAN3/l3HJr4sgV
74C6QU6ZzSu6mDBV82ZZV2a9s66TuS3Vb6Zaim0RBQAAAICScxG/r5JtESHf
OUSnSaexrzEzzi6mqOPpFut7I9a8habc5V3MrQ9euFGcdtVcHebbUdHFnMow
1pX2WE2WOY/K91xFF+PYey97nZnWrDBTNuFLRRezrczxcbOztt8eZsomIqno
Yn5n++5PXe9ed9eoHqSKLoaXz7AXVD3IGKXSOgoAAAAAbSHfM6gl0cUMnf6B
5dTTwRos+IGr5J89hs3jtU/3NjxWc+FRQ8NDhvr7FdT0HUPb44bO5wzdP+QK
5WIqe7b22A677eevNZ1axsXc3rHp5tE3r9efuOIyhfl2RBdTnNMZpkK5mLKT
XeylJp0qJ2LmJS5m9MiTYcq+5654JmLmJS7mowZHmNp1Pt6JmHmJiwlTfxy8
W9HC/NnyjV87Nn8xfnBhplv1IEUX0/ZRdThq2VeVEIkY6mUYAAAAAGFBvmfQ
QiPDQ5XNfRnF3a8ean/lgIJScrvO1plNfVZbV9lU4zuzFf+kmKmZL7l/pmbr
SNt/TY60OFwlLdb3ijqeVrQwZ4xPXLC8Yx3O+9TWwBwK8ynMrSi6mC/ef/7z
/JSrHaVXuw3haMFSH+a7nvM4rCZLXWlP7iGjooXJPtBeXdTdbwy3dkYjXbSU
T5XtHE7fGOdETGT/C407Ks2O9CaCREz4ujrTfnv8w984vv8Xy9cVXcwfBu/7
2eiOMGtnNNLsxNBIY1f3sYa6H5/TbSKGehkGAAAAQFgQ7hbio74BKzMpzKoo
WhhROw5VHc08eOHkVs+ZdYouZqb8yfne/fOTbZ7pdrMjs9q8LbdlvaKLYf9k
cWZf8pivmqtvFKfd+uCFGHudMacz747sT9OTzqHORnPZya5QiRhDgcnc1k9r
YebGOjwXMsZOvhgqEePKeZ49gdbCzM74Uja5RmeoRExKjZN5HFoLw3RzMueX
wy/9yXpnqIoY9q+0FmZ+sT2atbQtVCKGWZveE00k5f/UyzAAAAAAIoB2PxMf
eadsLV2W7PKet7M6lncxKR8Xnj2WPJT/hHLVTOX3rphS5kd9BQWuiar2wb0l
Xc+FOkvGPI7XY7oyYebHyW4nPxWdeflizzPh18tItWIiRg8WZn6lRAyzMO6G
A+H0YdZUyydimIUp73GE2YdZO13zNH05lvJb+6a/9t+hWwvDEzFdmfU1b5bp
wcJQL8AAAAAACAvaDQyV+HGykoYVVNZgaqk+3l34o4uF31awMBUbFtrfmHeW
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
aRem5spe/TRJ5posfoM7l7GTL5IHE0otViHtklLjJA8mlK55mrhz+bPlG1e8
unCmoUS9DK82lArzl0rtkXkBAAAQA+R7Bmh5tXRZuHNhFkbokzxjXaj8nmBe
6p4Vn9ljO8ydyxnjE1GX6ksl1uxrl3aZ8zhOH+3g5sVQYCK/276Qxjp42oX9
V5+l+vOLrcbEM2MDo/TxhNJv7ZsSokky9TIMAAAAgLAg3zNAKyolVxhVebZu
qYfwWJM4nvKKSdgTMrdS0vUcNy9dQwdiv2580i6TTn+T5O7mPvK7zTR28kWe
dpksfoM8mFAq7xGcy8fN+k273JzM4c7lj4N3kwezjKiXYQAAAACEBfmeAVpR
dvsgdy6vHmrnHZJ9Gsrzj6d0lvJvjoyVi6X6Xo8KKYw4pF2YmGERmyQzI0N+
wy8NVonjXS67reTxKGp62jfYhY93YY/J4wklsdrl86l88mBCiXoZBgAAAEBY
kO8ZoHCUUdwd0CF5UQsdOwXzUvbA/GQb/2a1eZuapfpxSbvMS5okFx7r1EOT
5NEjT3LzMl2TSh5MKB1vE9Iu+Z36Tbv81PUudy6/tW8iDyaUqJdhAAAAAIQF
+Z4BCkfTEzaxQ7LdvlTDMmP1j6eseZqPp/R6TOJ4l5ExFUZpxCft4h33N0lu
rqRvkuw1nhAHU5IHE0o2l+Bc3jLotD3y/GKH5L9Yvs7Ni27bI1MvwwAAAAAI
C/I9AxSmztaZ5R2SmaY7F849IpiXjp38m11DB7hzKel6Lvbrxi3tYusdEJsk
O/vpz2gNp2/k5oW5GPJgQumjBsG81PbbyYMJpV8Ov6Tz9sjUyzAAAAAAwoJ8
zwCFKWmH5JYui/+fnKWygpc57+AZ4xPcvPTYDsd+6fikXZgaDf4myReniJsk
T9ekcucycvgx2kiWkXEI7ZFVEPUyDAAAAICwIN8zQOGrsSOoQzJXd6pgXpp/
xL9jGznNnUte28bYS/XjlnaZ8zhOZRi5eaksJG6SfNltdey9V+dTKZl2nRfM
i8lOH0wo6bw9MvUyDAAAAICwIN8zQBFJ7JBc0iBpIOzuXSi5x+dcSu4RZ1OK
pfoXLO/Eft24pV2kTZKtJoum11pRU4Zk7lxcOc/TRrKMKs1ojxyrqJdhAAAA
AIQF+Z4Bikh9A1aFDsmfOBaafyQcGOsTjodNTTWLpfoTE3UxXjduaRem9loz
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
eW8aPRySllWdBlgrAABYyyxlWFbdn3PItyUQpJ1GhofSC9rLju/89Ow9suRL
bsv6jqEPb5zZ6y/bT9pwo+xgqJdyjw6J5iUztdXWOxB7eDo5M5ZSI7QXm56m
/5UF6/dD67QeRkm9DCcEcuOi2GSTGj24KQAA0ANsPVydyyH5tgSCtFZjh+WD
rDLLqacXiv6mr+KePEnypajj6enWj2/vetxftr//5VBl+95x2+mjHaJ5sZos
scc2cWYb+ZmxzFbhwJh5mP6XFaw4DKOkXob93HLUuE/+axzELhRZZDKj4rMI
0j/kSY9PE/6Bb9V+UgMAQIQYk8TFWFoOmPhrJPm2BILiIO+UraDafDTzoOfM
uosld9fX3ieaF6ZmU9JnH/+HtGz/akep4utcnLIVHusUuyWb2/pjDIy5FUfq
g7RnxgpNgnNpHKD/TQUrDsMoqZdhP1eNWWIaTlOxC0UU2JJxUTh+wD8SI/ww
lH6Oyon+c5VFt+rORQAAQFTIZ7jM5iQlvGlZhHxbAkFxk90+ePj0hYqcNxeK
/sZZ/q2CpgekbZOnSn/8ZdIGadn+lQlz8IvMeRxlJ7tE89LZqPCciPSJuZj2
zFhtv507l5Ju+t9RsJhh0XoYJfUy7Ee3zkWWzPBnYJYtLZG34dTWVigMLAAA
gLXKys4FkyghKCFk7Bngh8cuF99lrLo3IPnS+MLNvf6BL7d3Pa6YfGHmpbLQ
JJoX9jjGUS+0Z8ZMdiHnktlK/9sJVhyGUVIvw/pHfjhM7CwWnDuRmYdF87L4
Pf+jMFkuLxP8OsakxD8DAQAAqrGyc5GcJ0s8yDcnEBRPzXocJQ19x7J8h8em
ZG2Tm9a7T/xvf9l+6ORLXWmPaF5OZRgnndGPeqE9MzY+KTiXfbX0v5pg3Zgu
13oYJfUCrHt8HiLwA27JhqzYG1nieTQsn0e6BQAAAlGaPbnyH4ESAPJtCQRR
aXrCdqy4mR8eM1X+nbRyv+n8D26kPidNvigOrDS39WemtordkmOp2ZeeGfOa
CuJ8K7hzectA/0sJljiM8k/WOzW6BPUyrHeC24iJ+ZOV+hBLjEvwNBiV6lyk
M12+WkVnuQEAIAbgXCBodapvwPrxyXLLqacvltxdVfdt6eGxkbznpZUvtw6+
Etx2TDrqhanR0Bt1JOKZMdvuO+NsXnadF8zL7Az9byRYf+2/Q9NhlNTLsM6R
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
Mv7mSwXvlUr9S11pj3fcxqzK6JEnRfPCNFW287LbuvzrM6vCDItoXj5qUL/h
2JdjKVF0SKZehiV8XvrV+GPxELtQRMiMii/hEjSKjKr8ZdG3xH1oMwAAADLI
t0wQBOlEE8M9jYb/qJYMf+nbuVNavH8srb212jzncXguZNj33CWaF2fa+nAq
98t7/OYluUr9hmN/HLybm5dfDr8U5o9QL8AS5tN48JqLXSgSlozLkkORuJOo
6ksU6jlFIn8pHg2cCwAArH7It0kQBOlQzL/UV7xSZRCGv9x4/Xsdb++VFe93
N/d9Otk7nr9VmnxhX65Yud9i1bDh2GfTRWKH5OvumnB+hHoZlqBX58Ici/JR
sWXtgjQTo1E2RvQtcC4AALAWIN8gQRCkWzH/Umv4t/oSYfjL/PYnqnZnyYr3
rSbLJ+ZiZ9p6aeW+50LG8q/M3ArzLBo1HPuN4/t8f/77oXXhnBmjXob1j/xw
mNhZLDh3InMn/jY0oRrShGS5vIzwOrM5SX6nAucCAACrH/KtEQRBOpfT2l5X
8a+NZx/yvvcIn1wZXLw/2m+WVe6PHnly+cr9kXHfeEotGo5dnWkXOySHM96F
ehnWPT5PoDB4bMm5LGdHJJ5H/WZk8pwOWaUNAACA/5+9N/1r6zr3vvsP3K+e
V8+r8+I5Pb1zp23aNGkb5+Tk5ElOb+e0Tlv39El6u5mchiQ+ThwnLkkzeY7H
GIKJsbHNZIyxMWYwSEgMAsQsg5kxYCzELAMGD8E2tpNniSW2tvbekrbGtYff
9/P75APS1tYWK75+uvZa17ViBPMvRRAEqUIkfzmTvfr8oUeHNriKXy6881dB
8f6JFPNF8xl+5T5JZDpz4v1U7vd1N31yxpO8fFnUHKmafWf7Hm5l1LztFf8H
sw7DSkfcRoybPwk0z8FLXMS7wUSmzsXrMjHnAgAAeoD5lyIIglQhkr/kZv/W
mPRzunmloHifNh9rP7OTX7nf9OnP/FTuD/Y27T3vSV7ePdkUqbKX2db3ueRl
pi3ez5GsA7DCEZbg09/5+YjPWQ5P4hKDtAKZCwAAaB/mX4QgCFKdaqrOns5+
nuQvo+tcxfvmdzfxi/f3fnq+JLukNdmrcr91/28v24p9nTCnylOzT34gv0bk
Orm9KYmmOhJ9HcY6DCscWp3PnyWRqmWRetJrZiXqS7iQuQAAgPZh/hUIgiCV
iuQveVnPV3zlyl9G//ZM4YYt/MkXV/OxtG/4lfuuxWMnNvpaPFZ7wavsJVIr
x75tfJprNTbelSV5DOswrGwEbcWCgN9KGaUnAAAAIgDzLz8QBKla/Pzlctzz
guZjSTsMtYc+8lo89vHDfYavJU9FUhWSsER25dhwX+2duh9z21OO9hSIj2Ed
hhWNuDo/mFfSnAepCwAAgMjA/GsPBEEaEMlf8jP+d83uRyfeerzrrT8f33SY
n78c253bsP8vgsVjvjqPRXzlmKO3/F7t/02Tl0XrP5FfBQewDsNKJvSGYPy6
fqQuAAAAIgjzrz0QBGlAlWVZZzOfqd7zC5K/XHjnr8l/z+bnLzm7DzVufdpr
8VjGesnFYw2tTRtPeVaObStoCnPl2GhPwYOa/+FrkxfWAVixCGvzg8E75Yl8
R2QAAAB6hPlXHQiCNKZyw/Fzac807PiF802J5mNFX/6jYdM/8xeP9Z7fLz4J
SVX4PcfeORHuyrGJrmO+NnlhHYa1hlRh/nIVP2ZeAAAAhAHzLzkQBGlSXP4y
EfdExfr3D3yUxyUv+z46Y96xlr94zNe2lWeqG7mVY+HvVjnVkSi5yQvrMAwA
AAAAWTD/egNBkIZF8peiY8/YNv9i/G9PGd/7mN88+Zt/HKr55N/4+UvH8bcu
txkFZ7BdjOTKsZm2ePEmL6zDMAAAAABkwfyLDQRBmpfJkJqf9jTJX0b/9kzJ
hs/4i8cy/rG5btP/4pKXxr//sDMnXlD8MtjbdKDEk7y8mdV8rjb0i5m3vSLY
5IV1GAYAAACALJh/pYEgSCcqL/m6JPXJ9k9+YX/zuTMbd/EXj5396I36jf/k
KX759GfizskkW+GvHNtW0NTVFeKV3Gr6D/4mL6zDMAAAAABkwfzLDARBuhLJ
X86nrrj46S/631rF3/wl4aMMQ/xvBcUvA3Wn+K+1XWz65IzX5IuhPpRrGO6r
vV3/KE1eXD3HAAAAAKAemH+ZgSBIVzKf/8pw+Nc98Y91vfXnjA8PcvnLofiv
Kj/8FT9/uXhojaD4JavCa/LlQEkolS+O3vJF6z+5l40BAAAAQA0w/wIDQZBu
xeUvF975a+qmo57il01/t77/z147v5zYyC9+EUy+vHOiydwY9LuP9hTcr/m/
kLkAAAAAaoH5VxcIgnQukr+Ykn85uPEx/uaV+z46c+bDV/iTL+KdX1LNnuQl
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
Zv2h52q+Wdl89D85GVPjCo9siJLMGe9XZ28kOnf6MF/VJanVNVW02pGTraVe
zkcLoVBdfKvq7T3mB/duCwxlztGy72SL5Nn8T3P4uaRg0xO0PoaggIpA5NYC
MXUfwRAUn3uPWsyRgp+dPfNjc87/as38EYmirYdXEItpOPI8ZzHVqS9Fz2L4
LlOYe5DvMpXFqbWWEoHLyK+vl7l8iy8SvXdmNPJfQoxm8c638o2GKKvYvSWl
uOjel9Ek5dT6ylxIruErPfF4zTYJr5F81SvLa9sgSLeKUPRWCNLeIbX0WG6S
Ih/x3zYz/z+prfCVVPizE2d/Wnbq4eas/3n5+A8lywYZqjnlaWJ5fJ1NejU3
+V2xVV3ua80s7eBi6ZeZTVOTY/wDThzZlpF+iJhXTt5ZErqtTRdHpoS3qmam
r842bOXe3Vm6Zmx84pVgyt75MymSi8pCSE/Q+hiCAirCAVT1MHMfsctknv3p
+dM/rjvxUF+a4iyGqOfIowKXqUxelXFgvdhljh3c4uvbO3dMxpEvT2S4jCb7
bCExmgZbYKMZzXqUGs0HX1v4RnOxtcHX2+1OK998pOKLFHNSdmXf0ERmqcdo
iImQk1TWdxwpuMi1UybKLm2jq8XS86slz7nhqzKP12yT8BpkLhAkqUgGUPaI
vEM8gR8J75D5tz177o3MvCe+KfiF2Fk4CaZjVKSR9Idnr9TZHaOuFVz99vmp
S8QO/BxPnr1z57YgAvcMTV2dGLo5cXG+LenbsYbbt+ZK6i63D0xNXJ3PLrbS
mXE6qy6+ayeeSREvKhsZbA0hPUHrYwgKqNADqDaJhfsIhqCo5MOTp588kv+4
H4tJLvzZqbyflJ16uDXzR1eUd6/Mv0hS4+vbe1BG01+dNFGzxVmxwX1MzlMn
kzaQXOnkycyDJ13LsVLPVBGjOXSqytfb8fX6dsM3Zy9yK8re2m3KKqq9fcfn
NH1d8wV+pkN1MK8132zzeA0vc+G8htofuSpaOLM3vSLiq8WQHEFqVOhxWonE
6K5XsH/knq5Sa0tysXVTpmm1H4uJhlKLn80r+n1FwSvNhe+2F3xYl7OxNvvd
jozfChSyszhL15Ck42r5O3IOnrlUmlXa7jUnsrT8mDsJ/2x0TR2n7MS3idFw
Mhvz2y5NcE5RWjdobhr6JNnVlSW9yGaxDZ0xt5MIf97SOjwxF0J6ooTWx9Hb
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
kU6CWH9GDYh1GNYjzAcdUqk6O4uOGVfya/Z13d+yo4R4h0uFf6UVKI6yjQ8W
bwlM58b0lc+OWMWzKiRb4ZKX48UdnYNTr21z7/lyruoS8R1qOo60h9xTOcbX
YTqRFetIzByvG3Iy78YxHzVIGyLekWd5k3MTlL1Q+eyTPDnkOqDX6ih62fPU
+bVNDZYNX5m+vb0o2PBlavbGxHCXzySI9cdUu6IdmnVA0O7DfNAh9Wqgpyq3
6nV+i5iertKInNlUv/VE+YtEySVPEh0q/Tf6K3mc+aeWKUnTudZfcrSwQ5y5
EAO60Fz93n4jcRzqO6/ynnVeu/Hg3m1iOsMwnagpBtFZwVDjcDuG20VkLIBm
PmqQlsRfh0zCflNrWgRPrsbiDv99kt3HmDZ6ns1bNdBrGxqbE/hLU/fY3MyY
vyQICkNRD88aJxT3YT7okNrFr9kndmNrywr/nPwOzHypqKGZpOnMOVr2nWwR
Zy6bd3+9eV/qpgTjjrSGy0vdxviZS/fQ1bvXBminZZhOlBSLCO2FkrroL7kF
/2pED0jDfNQgjUlQ9kJymfDP6ZwYePDg3o1vJ8n/sdNXVRYzA/RJprLs5A4Y
Pfv8nbuLAn/pd0w7xwcCJkFQaIpiZI4Wqncf5oMOaUBNrWl8uwl/ZkQDmYtd
ZDpTxX8eO/WUZKF9xoH11GLe3mP+9vaiIHMZHJ15cG9BkLncHLM12LostVai
rnZ0wgxXUY7OYpTkHWJc/TIDT9ozHzVIe+rpKs00reZifp7lzXDWIZO0xeFs
PHj+V/RsbZdPzs6oaZ1t4D7JVI2pjoxH3PWV/cYsQyd/wxfH5FxfZ4OsJAgK
XjGJyJFF9e7DfNAhbSiyVZYCu0kx/ru67IaKms5k4R+oU3zr7PA0hFnWyHHX
fzuO/LI/9SdEvak/Hzj9Xx1Zfzj61UbqO1uPN8zOXaemw2Uu47lPj41PcN50
zljD/MOqXbEKyhyK9o6lRv+Yc4HYiKQq/L3DQl6HTCLw4r3bnI9Qzd10qG6d
bYA+yfSwC6epv0wW/M614cvoVEH1wIW+qcHRubf3mOOTTN0dTb6SICgcxSAg
RxrVuw/zQYc0o0hVWWrEbprTac3+yMkV7vYvhvWOnGfG8lZOFf3JnbZk/sy1
raR3LkPTk0vHftF++FcklxnO+FnLkWcHTq9eGG9yNie6lwRU7yRmhMwlgopR
UPagYO/wtXGZCOajBmlYVU17+bu9hLAOecLRPT0/KJi47x8zqXqdrZ8WYTOT
l+/fvzc7O0P+bc71n5/vzrx4wdMt+b39xsbGOkESBIWv6EfkiKN692E+6JDG
JLAba0tysGfQht2QnEW6T7KjgjOd8TPPjhf+STJzEetK2k+7cv9Cf675ZmXG
gfVnU97LyTublm8hfsT886pdsYnKPJTqHXRfZXmXxnzUIG2rtf1USsnTIZe9
OAZsi/cWBFYyNt2m3uIOX32S567al2ZhXLU8pbVdrmbI9b3TnaccGY/01KZx
jSvJD2aLlfmn0JiiHJGjgerdh/mgQ9qTwG6KrZuCerk27EacuRC7eXD3usB0
bg1XTvcWLozX01+HMh47kfi2ZOYiKexEGSnFICp7EwHvcIV5iXPQ6C/aIdnH
Nsped7dkz7ZQmI8apHn19Zj5ZS85FWuCWod87dpIVccuT9VM/Zs3b11l/qFC
lmTLyjvO1oWxes5Zpi+mW5r7SJ5yfX72u/t3F+eGyD9VS5On8uVMSbVdnc3W
lKnwojgTVO8+zAcd0qTEdkMekf9ygd0klfxafXazvFpsuOBFusPLZFPCnelu
/6YzcuIxajrHi9pmqv9OH6wrTUHmEm2FF8VDIFzvkO4eKWEQct/FqzelPJiP
GqQHCcpeUkqelt8webi/ZW5+dOpaT+Olww5nI/ERVRd3iFtWEu/4TjQLc2P6
SoGl99aox1mudxzp6HQnL0cLO+7dfzA7f4v8E3ZOjTL/UGqX/ICpGFTvPswH
HdKqiN0UWzfxGybXNCfIfC1nN/S1R80rVW03VLJM5/gPqelcu2IdSfsRfXCq
5vPGqjNf7P56194vTad2XqpO3rtv+4nEt+syXhs2/DdNi0h+RBMlR97vXY/k
/oergoYoewU9wN6YyvwvoGQFF7gjQFje4bmx5X0O+jgX/wW/+oEaR7AXxHzU
IP2I2Ae3DpmotO5j+T3HtFTcIWgRdq1+8+LcoOCO1tyA4d7d24J0ZnG2r6w4
i6QtF/qmuK0qTY1DV50TmH8JR8EFTUWgevdhPuiQtmVtSeY3TM6vXid/rp/Y
DX3VEcNzzD9IRCTsS2l4VWg6x3/Imc7I8R/y76F9dsRKTWftDgNxnJpvVkpP
xCz3xhTOztTuY/7xlaxgIndECNk73L4RZxC3YBFPty95QkDzkHeUGOajFkul
v+h9N/FFf/dh6MGPfnI2pPc6+8XPubf5Y7rg2dQ/8q8i1LeQVvUnP3Gf9+cb
q30e8JMvTGyGoLOziD+VH3ITGFVL2Cf51lXaM5+vm1O9304PCB68NZA/a/30
zp07XNpCJ/e/e3D/nqBN2bKQ0chRsGFTAajefZgPOqR59fWYT5S/GNRcvzb2
cxGLms4tR6U7czG+JjSd4z8kpnNryXT4mcu1/pK0853f3l7kTAeZS2QVVNiM
MIOJiUG4iCHO7Rci75CyADm7eslZgywJ81GLkWiy4PVlPuEvS3+jv6T6ODgC
aYU7f5E6ydJTPpKLEGXa+Gjga6afmlnmYl+ayi+t+9izkLj48YjsVqk68WeR
xBu13P527rt7twUWcHu05lrTDn47fZK2uCb3pdqUSTdehqQkP3YrEXW6D/NB
h3QiU/1W/lx/sXWTn7l+rWYu9sotw+b4sfIP3G5y4tc3Rxtn6zd71o9lPDwx
OXV/aVEZP3OZc7ScNPWMjk9ypmM4fWCq8sOR4+4VZaMnfuG0biUntzenu9pm
Lpf8T5pV/heLleTH7iDhVyz6JpQbYNLeIbX0OITplNBhPpQRFs1EpGZY/E2s
LL0qzAmR5Vke0bTLUuYikTSF+RkDpULL18Myc6GytWXxm8AEW0epMXnPwtTf
W5i9OjEoTmce3L0+fTH97p0F6iBv7DSSn8VtysbtnX4aL0NixS62Bo2+3If5
/wmQJtXZWcTfrfKYcWVr+ynJI7WauUjsRJn+8MKw+fZUq/vXnKfe3mO+Yr9C
TIfLXCYLVo2NT5DH79xdlGk6jrSH3DUyRX8KxXQaU2l1jOPEL931Mmeed/1a
9DLzv2GUFL1wGjXzEHmH1A5eUfUO5qMWdblnIsS5A/9ZqW/yEchcSHryx78s
JQvCJMX1vj4uKeKfkf+JXty4NA3EPnMhGuipyq16PbSyfU1KUMtD05k7090k
nblmt1IHMTUOzl0dziptX9rjuP761CXhirKhkpmpK5KNl0PeT03zS86iElsj
hFbdh/mgQ7qSYK6fyFS/lflVxUzizIWq7vxB+kPHkV+9urV0U6J5yG6fMsW5
51O6Sum+k5dHZrMMXX5M5+rElfuLXqZD0p/bc3Zba9tgTzCXWrtPeila9hPM
/4ZRUuRjK4ch0Xvtr2hy3vsA+edlfteL+ajZl76hOQYvDA+0ROPk7lkG3yUt
Pg8IP3MhCcXPN1bTtEIwG+JKIuR2Owmks/KSkYS/uFIbmQfHTjXNCfw6ysKa
DfLL9jUv8k/j3r37RbWDX5++wE3WO2evXxvvtTtGS+ouCzrGuApkxm2zToe4
8TIxlxD2U9PJkrOoxNZIoVH3YT7okA7V2n7qiOE5zm4yTav1Umi5tFpsuOx9
riGYr1ym8OCamow36M+bd3/NTbXMXV+wNPeTRGbxzreCl8yPtgwNXRFkNCRz
udZfcrSw42JrQxDXicwlWkj6RGj1khFbaRwmrIbMMeD6lmUfm77YP0X+Ozs9
PjLYGtG38F3MsqzlknbpOvpwMhdy5qWXSyQLJF2K2FIx32vh+Fp+R8VlLnap
sv329jzmV6UETTi6x5zzXM5C1dQ9RnKQyQvH5i8mL4xZZ+s+568oGxufSMqp
Fmc0tydtwe6npp8lZ9EMrpFFO+7DfNAhfWqgp4q/JCyp+HH5PZO1JFcK4+0R
w5Ipw9J0DPWdCxeayQ8tHYMzdZ4CmdGsR4npbDhQIchoSOYy52jZd7IluMyl
q2yq6+x85zHH/9/emXhHcd353v/MvHPy5ngydpLJDH55fi9xZpjJ2BOcMyE+
nJzEzrPisR07OAlkiDdsMGGxEUggJIPEIktgYZCEkNRCC6JprYC171J3S0Jo
QYBZjA22ebd1u1u1dldXV/WvbtX3cz7Hx7RaVdW6pd9Pv7pbbMTaQvOfFgdP
BjuLyX9iNmlDcNUkEsu11pK0IneYXt3FLJS/OCOdc3PzH/l63y1sWb+neeP+
QOGp7vDlhemJLsvOEpu0nqhMiM7HV/0xn3blslyeKIsLVj5YVTtEFwF4pkC6
mpnq4OznED27EysXLqbtq2W/I1/cu6+oXIbDC9EapLN48tiPImOVZ9puXNp9
J1Q/OxPmnftdA2OLAdkcmS9uzaV06tBwh7VDzpysPcHVDtyTfcgbHXrZtouF
0r7+VPdHdoHhmpejM0r4dJJDj4ZK/neCyoXlnZaOT3n/y+RY9+3xKv7Vyyef
fnnbaV7RLJxfTjqXS/5pbnbmrby63q4UKpdI3rmnzDt3r0VGnfkD7hyMYUNw
1UFr5LGp6K4xsNj0ivrmIGyvq3NTh6t7fvd+ffxPsv/aWrf3k4vz83Ps7rXm
LJSVCx+dxf9fXi/wUWQJv315cWM9opVItFNJdnDlR5YWSs6tXIJLXfmKafv9
vafJr4rWhYU5PsCY+96hthuf3Vx+w4A/7FvLChNWucyf+S8W5Et2vfDcO+Us
uQyMTNyejS28fGsu1f3UZsJ9Vg05c742RVdbcEv2IW906HEH++tYipFOtPRm
58uy8dnxxSsmD/39ROG3W/N+2LxnZVXOz/97b/OF/snSiqYEqyIf2b22f3ji
am8J/+eVM6/wpPPpxZbCT5qYHxyufzOvjrm7uIH9c29po+KhnN48Gj7q7JUd
NfQ/Ihu0I7rqI1sJ0mxs150SKcfGoWJ2NER1/Tl+oybwSMW5vvG5jfsDivv2
TzlNnQMzH9e0Jj0Cs7U1WQ1OWLksd3NE5JUIP1psFJkVP229STSSF+Wnc3Tl
Elzqyi9rel7a+eKpeZRqWRV/dfFq8PK1k2dH2K8MK1s0apDO4nDJD+Jxvqvg
sXXvFbDfpvzy7kDXxHQotUFiXPW2y+aGnAmhbfHVJtyQfcgbHcKgan9kj69y
GZfnnbcKzquLC73KZbDg78/t/ZeuAz/i/xwt/A6vg9pq9qoPoqfmPBo+6gyV
i2PQyh3x1+0vW+JY2xA7D9cnvT9f+aChrXdm/Z5mxesvbT9z6vz49uJ2Izf5
iZrmZBcT7ZJIUCnYNM9FVZ7wK4mcxcpJLpqVi+Rcqv4dp1cuXMW0fQ/No9RR
seyYhgP+8Knn4qF+tvmN+/e/mlm4xX67a1vHzPWzq5dlTnXImSjaH2IdCHH2
IW90CLksuUg3rGSpx+OPy+JuLNDoFtHdiVKyC4zUzqq/6v0J91ZeHfMPO2t/
tfE089UdtZHRZYNjVyWjzmYr/3Nh/krhJ00lFU3kPxA7tC3Euhk7GsJI5fJf
W+suDM2+nu9XvP77nQ3nPp1av+esRZUL1dpiGjNZiqLLI0tHkaXvUpGirFx4
eRI5S8JRZxZehvUO9teh8yVlWwvCh74737yhbzgY3/L41Pmx2raJD8tSHsUt
32XGzJAzUaQOw16EvNEhlIrHZWpZHcGTyF9yIyXGf+f4frulhvn792t50VHX
5A/2NfCHZpOHvq1ZuYx//NPugz9hju7/u+GChwcKHunc/2/snw0freNnYX/I
8bOw8iR44Vi4bv1C4N3pkhXRmf71/91T8adgw9vkPw2bpI3Dqe1j7BjsaAgj
o8WKTpwdnLiSffTCc5tq4pXIr96pfu9Q23Bw/qNT560ZLTaUdK8T/T3l06pc
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
z2lvPCRxumTF7fGqmeP/rHh9qvgfPuvOn695NukRmMFz25NdTHSeS4JKwaZ5
LqryhF9J5CxWTnLRNHLl2uWJ7ad2oyxrKLry99esTKkrPzzSee/+54rKZXrh
0uzUEPmns8W+Bs0VLB37EIw6AHsR8kaH0LEq9ko2MXl/OemUeyPpcFsLFP3+
tTlPv7bliJMnv1BHYiGxoyGMVC5TR75zJ3Tmyknl5qrTpT+4PVI2U6asaMxW
LlRri2nMZCmKLo8sHUVmj5GeJo3Kxea+Hper3vmlpH5NT0+FwW+/dm2ysXtL
/HvLAs/fuj1P/qHstbsqfPIX6hUsHbh9GHUY9iLkjQ6hk01/8n406cQqlwNn
fuL+pMNt2hyS9Pszj+76zdqtx0oq9PeLoZM6EguJLW1hYLRY6Mz6W9Ot83W/
nSz6n8s32IH/MXd6zZ3LHZNNb1szWmwo2X4uCTY3Saty0SpP4ouAGVgP2ew8
l9iVq+e5FKxC2ZK+iq58llYq/X80MvklNNxx/cbU7LX+1qF94blWlkHCI53k
HycTqlawjHTi/7XAUZNfqMOwFyFvdAidr+bkfZaGjHwvTzqtA3n8G5t7P/BK
0hmKLnoZKvo76eT9gx+8/KfsU9X15+gvTyJ1JBYSwvaanui6PXV+rvb/TZf+
YOrId6c/+idWttwar5mdGrT2RNEqQOtP/SLNbSK56VQuOtu18NOpjhnb196i
Jb80hoRpXM/OZ5KtEgA1HRs87wtslHbls/9nrxjpyr8yOXD96vTc9DD5p8i0
gdzQEeUKln/afswhk1+ow7AXIW90CEVRPXmf/dPgcv0tn+ZZu5+LSGpN3s/Z
viGF5cvslzoSCwltk82Eem8vjNwe+eRa+9ZbQ0fvzPXPTg+FhtstP1G0eJH9
rZ5kqxedeif5xBk+R177DVozUCIn4mcpWJX6JBQ+H3+5f0e7bNECXTDpONhf
V978qjSV5FU93txu1e6ibnTAH2x4W/oQjE/efyO3inzyC3UY9iL0NySEQqme
vH+08dmki49ZvhOleKrGLXfnf3/Lti07Dzti3DJ1JBYS8lYLj3ReDvZcnZ24
HOq1ehtKpdEpLUkHXCn3dpT+kR/vH9GcAr+8nf1D2kPUjr+5WtXTETldGjNf
5IWJomzRH3WGFcYssKenQr1zZfrr8LvZvoZwzcuhA8rJ+7STX6jDsKehvych
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
    "], {{0, 726}, {1086, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{351.7666666666666, Automatic},
  ImageSizeRaw->{1086, 726},
  PlotRange->{{0, 1086}, {0, 726}}]], "Input"],

Cell[CellGroupData[{

Cell["Future Ideas", "Subsubsection",
 CellChangeTimes->{{3.6762283105107317`*^9, 3.6762283117899337`*^9}}],

Cell[TextData[{
 "To get uncertainty in the x-coordinate in play, can start by looking ",
 ButtonBox["here",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathematica.stackexchange.com/questions/13054/estimate-error-\
on-slope-of-linear-regression-given-data-with-associated-uncertai"], None},
  ButtonNote->
   "http://mathematica.stackexchange.com/questions/13054/estimate-error-on-\
slope-of-linear-regression-given-data-with-associated-uncertai"]
}], "Item",
 CellChangeTimes->{{3.6762283138297443`*^9, 3.6762283268119717`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Stephanie\[CloseCurlyQuote]s Idea - Calculating ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SubscriptBox["\[Beta]\[Epsilon]", "R"]}]], TraditionalForm]]]
}], "Section",
 CellChangeTimes->{{3.676208866196828*^9, 3.676208876446046*^9}, {
  3.676248665541836*^9, 3.676248666223444*^9}}],

Cell["See email \"LacI Data Fitting and Sloppiness\" on 2016-06-29", "Text",
 CellChangeTimes->{{3.676208878427249*^9, 3.676208879332051*^9}, {
  3.6762094260224595`*^9, 3.6762094315158763`*^9}}],

Cell[TextData[{
 "The basic idea is that when you have multiple promoters with copy number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", ">", "1"}], TraditionalForm]]],
 ", the fold-change equation allows you to actually fit the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SubscriptBox["\[Beta]\[Epsilon]", "R"]}]], TraditionalForm]]],
 " parameter, since it shifts the resulting fold-change curve to the right as \
",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "R"], TraditionalForm]]],
 " decreases."
}], "Text",
 CellChangeTimes->{{3.6762088899327765`*^9, 3.676208966627865*^9}, {
  3.676209657914105*^9, 3.6762096628147163`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"fold", "-", "change"}], "=", 
   FractionBox[
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"m", "=", "0"}], 
      RowBox[{"Min", "[", 
       RowBox[{"N", ",", 
        SubscriptBox["R", "eff"]}], "]"}]], 
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["R", "eff"], "!"}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          SubscriptBox["N", "ns"], ")"}], "m"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["R", "eff"], "-", "m"}], ")"}], "!"}]}]], 
      RowBox[{"(", GridBox[{
         {"N"},
         {"m"}
        }], ")"}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "m"}], " ", 
         SubscriptBox["\[Beta]\[Epsilon]", "DNA"]}]], "(", 
       RowBox[{"N", "-", "m"}], ")"}]}]}], 
    RowBox[{"N", 
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"m", "=", "0"}], 
       RowBox[{"Min", "[", 
        RowBox[{"N", ",", 
         SubscriptBox["R", "eff"]}], "]"}]], 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["R", "eff"], "!"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           SubscriptBox["N", "ns"], ")"}], "m"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["R", "eff"], "-", "m"}], ")"}], "!"}]}]], 
       RowBox[{"(", GridBox[{
          {"N"},
          {"m"}
         }], ")"}], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "m"}], " ", 
         SubscriptBox["\[Beta]\[Epsilon]", "DNA"]}]]}]}]}]]}], 
  TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.676209564200675*^9, 3.6762095859085164`*^9}, {
  3.6762096680595284`*^9, 3.6762097122186537`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["R", "eff"], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubscriptBox["\[Beta]\[Epsilon]", "R"]}]]}]], 
    SubscriptBox["R", "tot"]}]}], TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.676209587739936*^9, 3.6762096051973753`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Beta]\[Epsilon]", "DNA"], "=", 
   RowBox[{
    SubsuperscriptBox["\[Beta]\[Epsilon]", "DNA", "Hernan"], "+", 
    RowBox[{"Log", "[", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SubscriptBox["\[Beta]\[Epsilon]", "R"]}]]}]], "]"}]}]}], 
  TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.6762096089241824`*^9, 3.676209639482455*^9}}],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.676209726226302*^9, 3.6762097266007023`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"foldChange", "[", 
   RowBox[{
   "n_", ",", "r_", ",", "\[Beta]\[Epsilon]R_", ",", 
    "\[Beta]\[Epsilon]HernanDNA_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rEff", "=", 
       RowBox[{
        FractionBox["1.", 
         RowBox[{"1.", "+", 
          SuperscriptBox["E", 
           RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "r"}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]DNA", "=", 
       RowBox[{"\[Beta]\[Epsilon]HernanDNA", "+", 
        RowBox[{"Log", "[", 
         FractionBox["1.", 
          RowBox[{"1.", "+", 
           SuperscriptBox["E", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "]"}]}]}], ",", 
      RowBox[{"nNS", "=", 
       RowBox[{"4.6", " ", 
        SuperscriptBox["10", "6."]}]}], ",", 
      RowBox[{"e", "=", "E"}]}], 
     RowBox[{"(*", 
      RowBox[{"N", "[", "E", "]"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
    FractionBox[
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"rEff", "!"}], 
         RowBox[{
          SuperscriptBox["nNS", "m"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
        RowBox[{"Binomial", "[", 
         RowBox[{"n", ",", "m"}], "]"}], 
        SuperscriptBox["e", 
         RowBox[{
          RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "m"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0.", ",", 
         RowBox[{"Min", "[", 
          RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}], 
     RowBox[{"n", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"rEff", "!"}], 
          RowBox[{
           SuperscriptBox["nNS", "m"], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
         RowBox[{"Binomial", "[", 
          RowBox[{"n", ",", "m"}], "]"}], 
         SuperscriptBox["e", 
          RowBox[{
           RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0.", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}]}]]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762101552341695`*^9, 3.676210181231657*^9}, {
   3.676210241006076*^9, 3.6762103500653133`*^9}, {3.6762103946888657`*^9, 
   3.6762104000481725`*^9}, {3.676210480674051*^9, 3.676210483477211*^9}, {
   3.676210517238142*^9, 3.676210517266144*^9}, {3.6762105913923836`*^9, 
   3.6762106008649254`*^9}, {3.6762106430253367`*^9, 3.6762106609433613`*^9}, 
   3.676210975135332*^9, {3.676211084910611*^9, 3.6762110993264356`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Plot", " ", "has", " ", "a", " ", "hard", " ", "time", " ", "with", " ", 
     "this", " ", "function"}], ",", " ", 
    RowBox[{
    "because", " ", "the", " ", "Min", " ", "naturally", " ", "makes", " ", 
     "the", " ", "plot", " ", "bumpy"}], ",", " ", 
    RowBox[{
    "which", " ", "is", " ", "hard", " ", "to", " ", "calculate", " ", 
     "precisely"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"foldChange", "[", 
        RowBox[{"10.", ",", "r", ",", 
         RowBox[{"-", "2."}], ",", 
         RowBox[{"-", "17."}]}], "]"}], ",", 
       RowBox[{"foldChange", "[", 
        RowBox[{"10.", ",", "r", ",", "2.", ",", 
         RowBox[{"-", "17."}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       SuperscriptBox["10", "0"], ",", 
       SuperscriptBox["10", "3"]}], "}"}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.676210612360583*^9, 3.676210628525508*^9}, {
  3.676210730477339*^9, 3.676210739309844*^9}, {3.67621121671815*^9, 
  3.6762112395804577`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]Values", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2", ",", "1", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "10"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", "rLog"], ",", 
       RowBox[{"foldChange", "[", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", "17"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]\[Epsilon]R", ",", "\[Beta]\[Epsilon]Values"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"relabel", "@", 
  RowBox[{"ListLogLogPlot", "[", 
   RowBox[{"data", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Beta]\[Epsilon]\), \(R\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "#"}]}], "&"}], "/@", 
       "\[Beta]\[Epsilon]Values"}], ")"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"font", "[", 
         RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<Repressor Copy Number\>\"", ",", "\"\<Fold-Change\>\""}],
         "}"}]}], ")"}]}], ",", "opts"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.676210371720552*^9, 3.6762103828291874`*^9}, {
  3.676210424765586*^9, 3.67621050881266*^9}, {3.6762110058700905`*^9, 
  3.676211049677596*^9}, {3.6762111155853653`*^9, 3.676211193421818*^9}, {
  3.676211251262126*^9, 3.67621126094168*^9}, {3.6762112933765345`*^9, 
  3.6762112938235607`*^9}, {3.676246384467571*^9, 3.676246391206783*^9}, {
  3.6762464296452503`*^9, 3.676246429941651*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]Values", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2", ",", "1", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "10"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "\[Beta]\[Epsilon]Values"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Beta]\[Epsilon]\), \(R\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", "#"}]}], "&"}], "/@", 
        "\[Beta]\[Epsilon]Values"}], ")"}]}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.2"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", "rLog"], ",", 
       RowBox[{"foldChange", "[", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", "17"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]\[Epsilon]R", ",", "\[Beta]\[Epsilon]Values"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<Repressor Copy Number\>\"", ",", "\"\<Fold-Change\>\""}], 
       "}"}]}], ")"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LogTicks", "[", 
       RowBox[{
        SuperscriptBox["10", "0"], ",", 
        SuperscriptBox["10", "3"], ",", 
        RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
      RowBox[{"LogTicks", "[", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]], ",", 
        SuperscriptBox["10", "0"], ",", 
        RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], "}"}]}], ",", 
   "opts"}], "]"}]}], "Input",
 CellChangeTimes->{{3.676210371720552*^9, 3.6762103828291874`*^9}, {
  3.676210424765586*^9, 3.67621050881266*^9}, {3.6762110058700905`*^9, 
  3.676211049677596*^9}, {3.6762111155853653`*^9, 3.676211193421818*^9}, {
  3.676211251262126*^9, 3.67621126094168*^9}, {3.6762112933765345`*^9, 
  3.6762112938235607`*^9}, {3.676246384467571*^9, 3.676246391206783*^9}, {
  3.6762464296452503`*^9, 3.676246573376705*^9}}],

Cell[TextData[{
 "Next question: Fit the Franz data to obtain the best fit ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]\[Epsilon]", "R"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Tell Stephanie (and then ask for her input before passing it onto Rob, \
Manuel, Griffin), emphasizing that this is a 1-parameter fit only, so it \
should nail down ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]\[Epsilon]", "R"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " very well.\nThe one downside is that I don\[CloseCurlyQuote]t have the \
error bars from Franz\[CloseCurlyQuote]s data, which may slightly modify the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]\[Epsilon]", "R"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " but probably not too much"
}], "Text",
 CellChangeTimes->{{3.6762113410522614`*^9, 3.676211413277393*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0, 0]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Fitting ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SubscriptBox["\[Beta]\[Epsilon]", "R"]}]], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.6762136217168827`*^9, 3.67621362577489*^9}}],

Cell[CellGroupData[{

Cell["Visualize the Data", "Subsubsection",
 CellChangeTimes->{{3.676228395960211*^9, 3.676228405665428*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\Presentations\\\\Neat \
Stuff\\\\Great Figures\\\\Phillips group transcription\\\\Franz Brewster Fold \
Change.xlsx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673919638148342*^9, 3.6739196734524775`*^9}, {
   3.673920120940671*^9, 3.6739201228586807`*^9}, {3.673920168087837*^9, 
   3.6739201720738535`*^9}, 3.6739215229266696`*^9, {3.6739235486266627`*^9, 
   3.673923549093667*^9}, {3.6762136537161784`*^9, 3.676213682863633*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"acquire", "[", 
    RowBox[{"rawData", ",", "index", ",", "\"\<Repressor Copy number\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.673920217690055*^9, 3.6739202305141077`*^9}, 
   3.673922676370015*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{"{", 
    RowBox[{"Black", ",", "Red", ",", 
     RowBox[{"Darker", "@", "Green"}], ",", "Blue", ",", "Black", ",", "Red", 
     ",", 
     RowBox[{"Darker", "@", "Green"}], ",", "Blue", ",", "Purple", ",", 
     RowBox[{"Darker", "@", "Yellow"}], ",", 
     RowBox[{"Lighter", "[", 
      RowBox[{"Blue", ",", "0.6"}], "]"}], ",", "Black", ",", "Red", ",", 
     "Blue"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"markers", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"\"\<\[EmptyDiamond]\>\"", ",", 
         RowBox[{"{", "4", "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{"\"\<\[FilledCircle]\>\"", ",", 
         RowBox[{"{", "4", "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{"\"\<\[FilledCircle]\>\"", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}], ",", ",", 
       RowBox[{"Table", "[", 
        RowBox[{"\"\<\[EmptySquare]\>\"", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], "}"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "0"], ",", 
          SuperscriptBox["10", "3.5"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "4.5"}]], ",", 
          SuperscriptBox["10", "0.5"]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Repressor Copy Number\>\"", ",", "\"\<Fold-Change\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "colors"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "markers"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"LogTicks", "[", 
         RowBox[{
          SuperscriptBox["10", "0"], ",", 
          SuperscriptBox["10", "4"], ",", 
          RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
        RowBox[{"LogTicks", "[", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]], ",", 
          SuperscriptBox["10", "1"], ",", 
          RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], "}"}]}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"Prolog", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "opts"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6739202574922075`*^9, 3.6739202610552135`*^9}, {
  3.673920330184329*^9, 3.6739203806441994`*^9}, {3.673920467880992*^9, 
  3.6739204701429987`*^9}, {3.673920520185326*^9, 3.673920582838888*^9}, {
  3.6739206778647866`*^9, 3.6739206781187935`*^9}, {3.6739215499339886`*^9, 
  3.673921682301297*^9}, {3.67392176423013*^9, 3.673921857004532*^9}, {
  3.673921904067715*^9, 3.673921904590716*^9}, {3.673921950993915*^9, 
  3.673921988887148*^9}, {3.673922061061597*^9, 3.6739220891827683`*^9}, {
  3.673922143343197*^9, 3.67392224423384*^9}, {3.67392231371122*^9, 
  3.6739224043146467`*^9}, {3.673922439568027*^9, 3.6739224665171347`*^9}, {
  3.6739225215813704`*^9, 3.673922554831485*^9}, {3.6739225895306273`*^9, 
  3.673922655319954*^9}, {3.6762138207527213`*^9, 3.6762138278345346`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["1st try - Assuming all repressors are in active state", "Subsubsection",
 CellChangeTimes->{{3.6762139319123106`*^9, 3.6762139391471243`*^9}, {
  3.676227773388913*^9, 3.6762277747169886`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\Presentations\\\\Neat \
Stuff\\\\Great Figures\\\\Phillips group transcription\\\\Franz Brewster Fold \
Change.xlsx\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"acquire", "[", 
     RowBox[{"rawData", ",", "index", ",", "\"\<Repressor Copy number\>\""}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]R", "=", "1."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"64", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"52", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "17."}]}], "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"9", ";;", "11"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"newData", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64\>\"", ",", 
        "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52\>\"", ",", 
        "\"\<Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10\>\""}], "}"}]}]}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"foldChange2", "[", 
   RowBox[{
   "n_", ",", "r_", ",", "\[Beta]\[Epsilon]R_", ",", 
    "\[Beta]\[Epsilon]HernanDNA_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rEff", "=", 
       RowBox[{
        FractionBox["1.", 
         RowBox[{"1.", "+", 
          SuperscriptBox["E", 
           RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "r"}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]DNA", "=", 
       RowBox[{"\[Beta]\[Epsilon]HernanDNA", "+", 
        RowBox[{"Log", "[", 
         FractionBox["1.", 
          RowBox[{"1.", "+", 
           SuperscriptBox["E", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "]"}]}]}], ",", 
      RowBox[{"nNS", "=", 
       RowBox[{"4.6", " ", 
        SuperscriptBox["10", "6."]}]}], ",", 
      RowBox[{"e", "=", "E"}]}], 
     RowBox[{"(*", 
      RowBox[{"N", "[", "E", "]"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sumMin", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", "<", "rEff"}], ",", "n", ",", "rEff"}], "]"}]}], "}"}],
       ",", "\[IndentingNewLine]", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"rEff", "!"}], 
           RowBox[{
            SuperscriptBox["nNS", "m"], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
          RowBox[{"Binomial", "[", 
           RowBox[{"n", ",", "m"}], "]"}], 
          SuperscriptBox["e", 
           RowBox[{
            RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]], 
          RowBox[{"(", 
           RowBox[{"n", "-", "m"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "0.", ",", "sumMin"}], "}"}]}], "]"}], 
       RowBox[{"n", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"rEff", "!"}], 
            RowBox[{
             SuperscriptBox["nNS", "m"], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
           RowBox[{"Binomial", "[", 
            RowBox[{"n", ",", "m"}], "]"}], 
           SuperscriptBox["e", 
            RowBox[{
             RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "0.", ",", "sumMin"}], "}"}]}], "]"}]}]]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762155423758736`*^9, 3.676215588119163*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"foldChange3", "[", 
   RowBox[{
   "n_", ",", "r_", ",", "\[Beta]\[Epsilon]R_", ",", 
    "\[Beta]\[Epsilon]HernanDNA_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rEff", "=", 
       RowBox[{
        FractionBox["1.", 
         RowBox[{"1.", "+", 
          SuperscriptBox["E", 
           RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "r"}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]DNA", "=", 
       RowBox[{"\[Beta]\[Epsilon]HernanDNA", "+", 
        RowBox[{"Log", "[", 
         FractionBox["1.", 
          RowBox[{"1.", "+", 
           SuperscriptBox["E", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "]"}]}]}], ",", 
      RowBox[{"nNS", "=", 
       RowBox[{"4.6", " ", 
        SuperscriptBox["10", "6."]}]}], ",", 
      RowBox[{"e", "=", "E"}]}], 
     RowBox[{"(*", 
      RowBox[{"N", "[", "E", "]"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"n", "<", "rEff"}], ",", "\[IndentingNewLine]", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"rEff", "!"}], 
           RowBox[{
            SuperscriptBox["nNS", "m"], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
          RowBox[{"Binomial", "[", 
           RowBox[{"n", ",", "m"}], "]"}], 
          SuperscriptBox["e", 
           RowBox[{
            RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]], 
          RowBox[{"(", 
           RowBox[{"n", "-", "m"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "0.", ",", "n"}], "}"}]}], "]"}], 
       RowBox[{"n", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"rEff", "!"}], 
            RowBox[{
             SuperscriptBox["nNS", "m"], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
           RowBox[{"Binomial", "[", 
            RowBox[{"n", ",", "m"}], "]"}], 
           SuperscriptBox["e", 
            RowBox[{
             RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "0.", ",", "n"}], "}"}]}], "]"}]}]], ",", 
      "\[IndentingNewLine]", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"rEff", "!"}], 
           RowBox[{
            SuperscriptBox["nNS", "m"], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
          RowBox[{"Binomial", "[", 
           RowBox[{"n", ",", "m"}], "]"}], 
          SuperscriptBox["e", 
           RowBox[{
            RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]], 
          RowBox[{"(", 
           RowBox[{"n", "-", "m"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "0.", ",", "rEff"}], "}"}]}], "]"}], 
       RowBox[{"n", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"rEff", "!"}], 
            RowBox[{
             SuperscriptBox["nNS", "m"], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
           RowBox[{"Binomial", "[", 
            RowBox[{"n", ",", "m"}], "]"}], 
           SuperscriptBox["e", 
            RowBox[{
             RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "0.", ",", "rEff"}], "}"}]}], "]"}]}]]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762155423758736`*^9, 3.676215588119163*^9}, {
  3.676215693379984*^9, 3.676215731445055*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\Presentations\\\\Neat \
Stuff\\\\Great Figures\\\\Phillips group transcription\\\\Franz Brewster Fold \
Change.xlsx\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"acquire", "[", 
     RowBox[{"rawData", ",", "index", ",", "\"\<Repressor Copy number\>\""}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]R", "=", "10."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange3", "[", 
           RowBox[{"64", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange3", "[", 
           RowBox[{"52", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange3", "[", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "17."}]}], "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"9", ";;", "11"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"newData", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64\>\"", ",", 
        "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52\>\"", ",", 
        "\"\<Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10\>\""}], "}"}]}]}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, {3.676215598624189*^9, 
   3.6762156014029937`*^9}, {3.6762157444154797`*^9, 3.676215747593286*^9}, {
   3.676216740632468*^9, 3.6762167572129006`*^9}, {3.6762168867319946`*^9, 
   3.6762169091570406`*^9}}],

Cell[TextData[{
 StyleBox["Next steps: I think that I need to get the error measurements for \
these points (at least), and then try to implement fitting using both the \
error in x- and y-coorindates!!!\nThey plotted relative error \
(http://faculty.washington.edu/stuve/log_error.pdf), which is why their error \
bars were symmetric. Need to make sure that I have a good grip on what that \
means\nBy eye, it looks pretty apparent that ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "\[Beta]\[Epsilon]"}]], "\[LessLess]", "1"}], 
   TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox[" with ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]\[Epsilon]", ">", "10"}], TraditionalForm]],
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.6762169201121874`*^9, 3.67621694747764*^9}, {
  3.676217075676145*^9, 3.6762170963057823`*^9}, {3.6762192227211933`*^9, 
  3.676219241629259*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange3", "[", 
       RowBox[{"10", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "17."}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}}],

Cell[BoxData[{
 RowBox[{"Log", "[", 
  RowBox[{"6.464", "-", "3.57"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Log", "[", 
  RowBox[{"3.57", "-", "1.971"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6762186646689587`*^9, 3.6762186960137515`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange3", "[", 
       RowBox[{"52", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
  3.6762172700244417`*^9, 3.676217292493882*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange3", "[", 
       RowBox[{"64", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
  3.6762172700244417`*^9, 3.676217294413686*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["2nd try - Fitting separately and without error", "Subsubsection",
 CellChangeTimes->{{3.6762139319123106`*^9, 3.6762139391471243`*^9}, {
  3.676227773388913*^9, 3.6762277819003997`*^9}, {3.6762279917404013`*^9, 
  3.676227997356723*^9}, {3.6762280983324986`*^9, 3.676228100124601*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\Presentations\\\\Neat \
Stuff\\\\Great Figures\\\\Phillips group transcription\\\\Franz Brewster Fold \
Change.xlsx\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"acquire", "[", 
    RowBox[{"rawData", ",", "index", ",", "\"\<Repressor Copy number\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"foldChange", "[", 
   RowBox[{
   "n_", ",", "r_", ",", "\[Beta]\[Epsilon]R_", ",", 
    "\[Beta]\[Epsilon]HernanDNA_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rEff", "=", 
       RowBox[{
        FractionBox["1.", 
         RowBox[{"1.", "+", 
          SuperscriptBox["E", 
           RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "r"}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]DNA", "=", 
       RowBox[{"\[Beta]\[Epsilon]HernanDNA", "+", 
        RowBox[{"Log", "[", 
         FractionBox["1.", 
          RowBox[{"1.", "+", 
           SuperscriptBox["E", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "]"}]}]}], ",", 
      RowBox[{"nNS", "=", 
       RowBox[{"4.6", " ", 
        SuperscriptBox["10", "6."]}]}], ",", 
      RowBox[{"e", "=", 
       RowBox[{"N", "[", "E", "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    FractionBox[
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"rEff", "!"}], 
         RowBox[{
          SuperscriptBox["nNS", "m"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
        RowBox[{"Binomial", "[", 
         RowBox[{"n", ",", "m"}], "]"}], 
        SuperscriptBox["e", 
         RowBox[{
          RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "m"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0.", ",", 
         RowBox[{"Min", "[", 
          RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}], 
     RowBox[{"n", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"rEff", "!"}], 
          RowBox[{
           SuperscriptBox["nNS", "m"], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
         RowBox[{"Binomial", "[", 
          RowBox[{"n", ",", "m"}], "]"}], 
         SuperscriptBox["e", 
          RowBox[{
           RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0.", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}]}]]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762155423758736`*^9, 3.676215588119163*^9}, {
  3.676227857296712*^9, 3.6762278841432476`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]R", "=", "1."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"64", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"52", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "17."}]}], "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"9", ";;", "11"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"newData", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64\>\"", ",", 
        "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52\>\"", ",", 
        "\"\<Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10\>\""}], "}"}]}]}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9}],

Cell[TextData[{
 StyleBox["Next steps: I think that I need to get the error measurements for \
these points (at least), and then try to implement fitting using both the \
error in x- and y-coorindates!!!\nThey plotted relative error \
(http://faculty.washington.edu/stuve/log_error.pdf), which is why their error \
bars were symmetric. Need to make sure that I have a good grip on what that \
means\nBy eye, it looks pretty apparent that ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "\[Beta]\[Epsilon]"}]], "\[LessLess]", "1"}], 
   TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox[" with ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]\[Epsilon]", ">", "10"}], TraditionalForm]],
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.6762169201121874`*^9, 3.67621694747764*^9}, {
  3.676217075676145*^9, 3.6762170963057823`*^9}, {3.6762192227211933`*^9, 
  3.676219241629259*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"10", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "17."}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, 
   3.6762280260953665`*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"52", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
   3.6762172700244417`*^9, 3.676217292493882*^9}, 3.676228045424472*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"64", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
   3.6762172700244417`*^9, 3.676217294413686*^9}, 3.6762280504257584`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["3rd try - Fitting separately and with error", "Subsubsection",
 CellChangeTimes->{{3.6762139319123106`*^9, 3.6762139391471243`*^9}, {
  3.676227773388913*^9, 3.6762277819003997`*^9}, {3.6762279917404013`*^9, 
  3.676227997356723*^9}, {3.6762280983324986`*^9, 3.6762281069409904`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "file", "=", 
   "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\Presentations\\\\Neat \
Stuff\\\\Great Figures\\\\Phillips group transcription\\\\Franz Brewster Fold \
Change.xlsx\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Import", "[", "file", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"acquire", "[", 
    RowBox[{"rawData", ",", "index", ",", "\"\<Repressor Copy number\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9, {
   3.676228144798156*^9, 3.676228147980338*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"foldChange", "[", 
   RowBox[{
   "n_", ",", "r_", ",", "\[Beta]\[Epsilon]R_", ",", 
    "\[Beta]\[Epsilon]HernanDNA_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rEff", "=", 
       RowBox[{
        FractionBox["1.", 
         RowBox[{"1.", "+", 
          SuperscriptBox["E", 
           RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "r"}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]DNA", "=", 
       RowBox[{"\[Beta]\[Epsilon]HernanDNA", "+", 
        RowBox[{"Log", "[", 
         FractionBox["1.", 
          RowBox[{"1.", "+", 
           SuperscriptBox["E", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "]"}]}]}], ",", 
      RowBox[{"nNS", "=", 
       RowBox[{"4.6", " ", 
        SuperscriptBox["10", "6."]}]}], ",", 
      RowBox[{"e", "=", 
       RowBox[{"N", "[", "E", "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    FractionBox[
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"rEff", "!"}], 
         RowBox[{
          SuperscriptBox["nNS", "m"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
        RowBox[{"Binomial", "[", 
         RowBox[{"n", ",", "m"}], "]"}], 
        SuperscriptBox["e", 
         RowBox[{
          RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "m"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0.", ",", 
         RowBox[{"Min", "[", 
          RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}], 
     RowBox[{"n", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"rEff", "!"}], 
          RowBox[{
           SuperscriptBox["nNS", "m"], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
         RowBox[{"Binomial", "[", 
          RowBox[{"n", ",", "m"}], "]"}], 
         SuperscriptBox["e", 
          RowBox[{
           RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0.", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}]}]]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762155423758736`*^9, 3.676215588119163*^9}, {
  3.676227857296712*^9, 3.6762278841432476`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]R", "=", "1."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"64", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"52", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "17."}]}], "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"9", ";;", "11"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"newData", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64\>\"", ",", 
        "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52\>\"", ",", 
        "\"\<Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10\>\""}], "}"}]}]}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"errorData", "=", 
   RowBox[{"acquire", "[", 
    RowBox[{"rawData", ",", "index", ",", "\"\<x with Error\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.676228127789183*^9, 3.676228129148261*^9}, {
   3.676228161085088*^9, 3.6762281638662467`*^9}, 3.676228650829814*^9}],

Cell[BoxData[
 RowBox[{"weights", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", 
     RowBox[{"Transpose", "@", "#"}]}], "&"}], "/@", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"9", ";;", "11"}], "]"}], "]"}], ",", "errorData"}], 
     "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6762291640131664`*^9, 3.676229171100572*^9}, {
  3.676229203181407*^9, 3.676229217645234*^9}, {3.676229322765247*^9, 
  3.6762293272005005`*^9}, {3.6762293668617687`*^9, 3.6762293703009653`*^9}, {
  3.676229416221592*^9, 3.6762294169096317`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"10", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "17."}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "7.5"}], "}"}], "}"}], ",", "R", 
     ",", 
     RowBox[{"Weights", "\[Rule]", 
      RowBox[{"1", "/", 
       SuperscriptBox[
        RowBox[{"weights", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "2"]}]}], ",", 
     RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "&"}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, 
   3.6762280260953665`*^9, {3.6762294381578465`*^9, 3.6762294432791395`*^9}, {
   3.67622951111802*^9, 3.676229573214572*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"52", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R", ",", 
     RowBox[{"Weights", "\[Rule]", 
      RowBox[{"1", "/", 
       SuperscriptBox[
        RowBox[{"weights", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "2"]}]}], ",", 
     RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "&"}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
   3.6762172700244417`*^9, 3.676217292493882*^9}, 3.676228045424472*^9, {
   3.676229447933406*^9, 3.6762294622862267`*^9}, {3.6762295895825076`*^9, 
   3.6762295914536147`*^9}, {3.6762296226223974`*^9, 3.6762296263826127`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"64", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "2."}], "}"}], "}"}], ",", "R", ",", 
     RowBox[{"Weights", "\[Rule]", 
      RowBox[{"1", "/", 
       SuperscriptBox[
        RowBox[{"weights", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "2"]}]}], ",", 
     RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "&"}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
   3.6762172700244417`*^9, 3.676217294413686*^9}, 3.6762280504257584`*^9, {
   3.676229489213767*^9, 3.6762294900548153`*^9}, {3.676229598863038*^9, 
   3.6762296000461063`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["4th try - Fitting together and without error", "Subsubsection",
 CellChangeTimes->{{3.6762139319123106`*^9, 3.6762139391471243`*^9}, {
  3.676227773388913*^9, 3.6762277819003997`*^9}, {3.6762279917404013`*^9, 
  3.676227997356723*^9}, {3.6762280983324986`*^9, 3.6762281069409904`*^9}, {
  3.6762296484448743`*^9, 3.676229657436389*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\Presentations\\\\Neat \
Stuff\\\\Great Figures\\\\Phillips group transcription\\\\Franz Brewster Fold \
Change.xlsx\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"acquire", "[", 
    RowBox[{"rawData", ",", "index", ",", "\"\<Repressor Copy number\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"foldChange", "[", 
   RowBox[{
   "n_", ",", "r_", ",", "\[Beta]\[Epsilon]R_", ",", 
    "\[Beta]\[Epsilon]HernanDNA_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rEff", "=", 
       RowBox[{
        FractionBox["1.", 
         RowBox[{"1.", "+", 
          SuperscriptBox["E", 
           RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "r"}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]DNA", "=", 
       RowBox[{"\[Beta]\[Epsilon]HernanDNA", "+", 
        RowBox[{"Log", "[", 
         FractionBox["1.", 
          RowBox[{"1.", "+", 
           SuperscriptBox["E", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "]"}]}]}], ",", 
      RowBox[{"nNS", "=", 
       RowBox[{"4.6", " ", 
        SuperscriptBox["10", "6."]}]}], ",", 
      RowBox[{"e", "=", 
       RowBox[{"N", "[", "E", "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    FractionBox[
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"rEff", "!"}], 
         RowBox[{
          SuperscriptBox["nNS", "m"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
        RowBox[{"Binomial", "[", 
         RowBox[{"n", ",", "m"}], "]"}], 
        SuperscriptBox["e", 
         RowBox[{
          RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "m"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0.", ",", 
         RowBox[{"Min", "[", 
          RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}], 
     RowBox[{"n", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"rEff", "!"}], 
          RowBox[{
           SuperscriptBox["nNS", "m"], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
         RowBox[{"Binomial", "[", 
          RowBox[{"n", ",", "m"}], "]"}], 
         SuperscriptBox["e", 
          RowBox[{
           RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0.", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}]}]]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762155423758736`*^9, 3.676215588119163*^9}, {
  3.676227857296712*^9, 3.6762278841432476`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]R", "=", "4.525127"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"64", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"52", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "17."}]}], "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9, {
   3.6762306411666546`*^9, 3.6762306416456823`*^9}, {3.6762306917765493`*^9, 
   3.676230697174858*^9}, 3.676230736686118*^9, {3.6762308980943503`*^9, 
   3.6762309014865446`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"font", "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64\>\"", ",", 
      "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52\>\"", ",", 
      "\"\<Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"PointLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "@", "3"}]}], ",", "labels", ",", 
     RowBox[{"LegendMarkers", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "Medium", "]"}], ",", "White"}], 
                "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"White", ",", "Thin", ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}],
             "]"}], ",", "0.03"}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "@", "4"}]}], ")"}]}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.4"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"plot1", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"ListLogLogPlot", "[", 
         RowBox[{"newData", ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"Placed", "[", 
            RowBox[{"leg", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Scaled", "[", 
                RowBox[{"{", 
                 RowBox[{"0.05", ",", "0.3"}], "}"}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}], 
          ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"font", "[", 
               RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Repressor Copy Number\>\"", ",", "\"\<Fold-Change\>\""}], 
              "}"}]}], ")"}]}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"LogTicks", "[", 
              RowBox[{
               SuperscriptBox["10", "0"], ",", 
               SuperscriptBox["10", "4"], ",", 
               RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
             RowBox[{"LogTicks", "[", 
              RowBox[{
               SuperscriptBox["10", 
                RowBox[{"-", "5"}]], ",", 
               SuperscriptBox["10", "1"], ",", 
               RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], 
            "}"}]}], ",", "opts"}], "]"}], ",", 
        RowBox[{"ListLogLogPlot", "[", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"9", ";;", "11"}], "]"}], "]"}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                  "}"}], "]"}], ",", 
                RowBox[{"Disk", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
               "}"}], "]"}], ",", "0.03"}], "}"}]}]}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "aLabel", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Top", ",", "Left"}], "}"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.67623097134054*^9, 3.6762311396551666`*^9}, {
  3.67624621303887*^9, 3.676246223412888*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", "9", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullData1", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"64.", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "15.3"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "d"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", "10", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullData2", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"52.", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "15.3"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "d"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", "11", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullData3", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"10.", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "17."}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "d"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fullData", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fullData1", ",", "fullData2", ",", "fullData3"}], "}"}], ",", 
     "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6762297138526154`*^9, 3.6762298527075577`*^9}, {
  3.676230147904442*^9, 3.6762301567969503`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"fullData", ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{
       "nn", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        "\[Epsilon]\[Epsilon]"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "4.5"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"nn", ",", "\[Epsilon]\[Epsilon]", ",", "R"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, 
   3.6762280260953665`*^9, {3.676229862046092*^9, 3.676229935358285*^9}, {
   3.676230281757098*^9, 3.6762302822371254`*^9}}],

Cell[TextData[{
 StyleBox["This indicates that without error bars, ",
  FontSize->24,
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]\[Epsilon]", "R"], "=", "4.5"}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->24,
  FontWeight->"Bold"],
 ", so that most of the repressors are in the active state"
}], "Text",
 CellChangeTimes->{{3.676230536988696*^9, 3.6762305664763827`*^9}, {
  3.676230621423526*^9, 3.6762306354523277`*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox["E", 
    RowBox[{"-", "4.5"}]]}]]], "Input",
 CellChangeTimes->{{3.6762486907677407`*^9, 3.6762486980675755`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"fit", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"NonlinearModelFit", "[", 
         RowBox[{"fullData", ",", 
          RowBox[{"{", 
           RowBox[{"foldChange", "[", 
            RowBox[{"nn", ",", "R", ",", "jj", ",", "\[Epsilon]\[Epsilon]"}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"\[Beta]\[Epsilon]R", ",", "1."}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"nn", ",", "\[Epsilon]\[Epsilon]", ",", "R"}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"jj", ",", 
        RowBox[{"fit", "[", "\"\<RSquared\>\"", "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "2.", ",", "6.", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"fitData", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676229954636388*^9, 3.676230044141507*^9}, {
   3.6762300910381894`*^9, 3.6762300927892895`*^9}, {3.6762301632653203`*^9, 
   3.676230213422189*^9}, 3.6762302569256773`*^9, 3.6762303015842323`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["scratch", "Subsubsection",
 CellChangeTimes->{{3.6762303167330985`*^9, 3.6762303174531393`*^9}}],

Cell[BoxData[
 RowBox[{"fitData", "[", 
  RowBox[{"[", 
   RowBox[{"First", "@", 
    RowBox[{"First", "@", 
     RowBox[{"Position", "[", 
      RowBox[{"fitData", ",", 
       RowBox[{"Max", "@", 
        RowBox[{"fitData", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6762302160183377`*^9, 3.676230267614289*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"10", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "17."}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, 
   3.6762280260953665`*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"52", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
   3.6762172700244417`*^9, 3.676217292493882*^9}, 3.676228045424472*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"64", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
   3.6762172700244417`*^9, 3.676217294413686*^9}, 3.6762280504257584`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["5th try - Fitting together and with error", "Subsubsection",
 CellChangeTimes->{{3.6762139319123106`*^9, 3.6762139391471243`*^9}, {
  3.676227773388913*^9, 3.6762277819003997`*^9}, {3.6762279917404013`*^9, 
  3.676227997356723*^9}, {3.6762280983324986`*^9, 3.6762281069409904`*^9}, {
  3.6762296484448743`*^9, 3.676229657436389*^9}, {3.676229691533339*^9, 
  3.676229694364501*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "file", "=", 
   "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\Presentations\\\\Neat \
Stuff\\\\Great Figures\\\\Phillips group transcription\\\\Franz Brewster Fold \
Change.xlsx\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Import", "[", "file", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"acquire", "[", 
    RowBox[{"rawData", ",", "index", ",", "\"\<Repressor Copy number\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9, {
   3.676228144798156*^9, 3.676228147980338*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"foldChange", "[", 
   RowBox[{
   "n_", ",", "r_", ",", "\[Beta]\[Epsilon]R_", ",", 
    "\[Beta]\[Epsilon]HernanDNA_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rEff", "=", 
       RowBox[{
        FractionBox["1.", 
         RowBox[{"1.", "+", 
          SuperscriptBox["E", 
           RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "r"}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]DNA", "=", 
       RowBox[{"\[Beta]\[Epsilon]HernanDNA", "+", 
        RowBox[{"Log", "[", 
         FractionBox["1.", 
          RowBox[{"1.", "+", 
           SuperscriptBox["E", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "]"}]}]}], ",", 
      RowBox[{"nNS", "=", 
       RowBox[{"4.6", " ", 
        SuperscriptBox["10", "6."]}]}], ",", 
      RowBox[{"e", "=", 
       RowBox[{"N", "[", "E", "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    FractionBox[
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"rEff", "!"}], 
         RowBox[{
          SuperscriptBox["nNS", "m"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
        RowBox[{"Binomial", "[", 
         RowBox[{"n", ",", "m"}], "]"}], 
        SuperscriptBox["e", 
         RowBox[{
          RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "m"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0.", ",", 
         RowBox[{"Min", "[", 
          RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}], 
     RowBox[{"n", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"rEff", "!"}], 
          RowBox[{
           SuperscriptBox["nNS", "m"], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
         RowBox[{"Binomial", "[", 
          RowBox[{"n", ",", "m"}], "]"}], 
         SuperscriptBox["e", 
          RowBox[{
           RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0.", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}]}]]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762155423758736`*^9, 3.676215588119163*^9}, {
  3.676227857296712*^9, 3.6762278841432476`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]R", "=", "24.1364"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"64", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"52", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "17."}]}], "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9, {
   3.676230587437582*^9, 3.6762305893596916`*^9}, {3.6762312283832417`*^9, 
   3.676231232878499*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"font", "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64\>\"", ",", 
      "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52\>\"", ",", 
      "\"\<Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"PointLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "@", "3"}]}], ",", "labels", ",", 
     RowBox[{"LegendMarkers", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "Medium", "]"}], ",", "White"}], 
                "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"White", ",", "Thin", ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}],
             "]"}], ",", "0.03"}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "@", "4"}]}], ")"}]}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.4"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"ListLogLogPlot", "[", 
        RowBox[{"newData", ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"leg", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Scaled", "[", 
               RowBox[{"{", 
                RowBox[{"0.05", ",", "0.3"}], "}"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"font", "[", 
              RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Repressor Copy Number\>\"", ",", "\"\<Fold-Change\>\""}], 
             "}"}]}], ")"}]}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"LogTicks", "[", 
             RowBox[{
              SuperscriptBox["10", "0"], ",", 
              SuperscriptBox["10", "4"], ",", 
              RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
            RowBox[{"LogTicks", "[", 
             RowBox[{
              SuperscriptBox["10", 
               RowBox[{"-", "5"}]], ",", 
              SuperscriptBox["10", "1"], ",", 
              RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], "}"}]}],
          ",", "opts"}], "]"}], ",", 
       RowBox[{"ListLogLogPlot", "[", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"9", ";;", "11"}], "]"}], "]"}], ",", 
         RowBox[{"PlotMarkers", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EdgeForm", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                 "}"}], "]"}], ",", 
               RowBox[{"Disk", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
              "}"}], "]"}], ",", "0.03"}], "}"}]}]}], "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.67623097134054*^9, 3.6762311396551666`*^9}, 
   3.676245569560731*^9}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"errorData", "=", 
   RowBox[{"acquire", "[", 
    RowBox[{"rawData", ",", "index", ",", "\"\<x with Error\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"weights", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"10", ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{"10", ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}]}], ")"}], "&"}], "/@", 
      RowBox[{"Transpose", "@", "#"}]}], "&"}], "/@", 
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"9", ";;", "11"}], "]"}], "]"}], ",", "errorData"}], 
      "}"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"weights", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"ErrorBar", ",", "weights", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"weightedData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Riffle", "[", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"10", ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"Log", "[", 
              RowBox[{"10", ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@",
           "#"}], "&"}], "/@", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"9", ";;", "11"}], "]"}], "]"}]}], ",", "weights"}], 
      "}"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"weightedData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", "weightedData"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.676228127789183*^9, 3.676228129148261*^9}, {
   3.676228161085088*^9, 3.6762281638662467`*^9}, 3.676228650829814*^9, 
   3.6762449763731794`*^9, 3.6762450692731895`*^9, {3.6762451927675447`*^9, 
   3.6762451956223497`*^9}, 3.6762452836041164`*^9, 3.676246034168956*^9, {
   3.6762460972086663`*^9, 3.6762461037138777`*^9}, {3.676246153181565*^9, 
   3.6762461593123755`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"errorData", "=", 
     RowBox[{"acquire", "[", 
      RowBox[{"rawData", ",", "index", ",", "\"\<x with Error\>\""}], "]"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{"weights", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "-", 
            RowBox[{"Log", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", 
        RowBox[{"Transpose", "@", "#"}]}], "&"}], "/@", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"9", ";;", "11"}], "]"}], "]"}], ",", "errorData"}], 
        "}"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"weights", "=", 
      RowBox[{"Log", "[", "weights", "]"}]}], ";"}], "*)"}], "\n", 
   RowBox[{"weights", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"ErrorBar", ",", "weights", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"weightedData", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Riffle", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Log", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"Log", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@",
             "#"}], "&"}], "/@", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"9", ";;", "11"}], "]"}], "]"}]}], ",", "weights"}], 
        "}"}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"weightedData", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", "weightedData"}]}], 
    ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.676228127789183*^9, 3.676228129148261*^9}, {
   3.676228161085088*^9, 3.6762281638662467`*^9}, 3.676228650829814*^9, 
   3.6762449763731794`*^9, 3.6762450692731895`*^9, {3.6762451927675447`*^9, 
   3.6762451956223497`*^9}, 3.6762452836041164`*^9, 3.676246034168956*^9}],

Cell[BoxData[
 RowBox[{"plot2", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@",
              "#"}], "&"}], "/@", "newData"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{"leg", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{"0.05", ",", "0.3"}], "}"}], "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}]}],
            "*)"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"font", "[", 
               RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Repressor Copy Number\>\"", ",", "\"\<Fold-Change\>\""}], 
              "}"}]}], ")"}]}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"LinTicks", "[", 
               RowBox[{"0", ",", "4", ",", 
                RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], "/.", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"str_String", "/;", 
                 RowBox[{"str", "=!=", "\"\<\>\""}]}], ")"}], 
               "\[RuleDelayed]", 
               RowBox[{"Superscript", "[", 
                RowBox[{"\"\<10\>\"", ",", "str"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{"LinTicks", "[", 
               RowBox[{
                RowBox[{"-", "4"}], ",", "0", ",", 
                RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], "/.", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"str_String", "/;", 
                 RowBox[{"str", "=!=", "\"\<\>\""}]}], ")"}], 
               "\[RuleDelayed]", 
               RowBox[{"Superscript", "[", 
                RowBox[{"\"\<10\>\"", ",", "str"}], "]"}]}]}]}], "}"}]}], ",",
           "opts"}], "]"}], ",", 
        RowBox[{"ErrorListPlot", "[", 
         RowBox[{"weightedData", ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                  "}"}], "]"}], ",", 
                RowBox[{"Disk", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
               "}"}], "]"}], ",", "0.03"}], "}"}]}]}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "bLabel", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Top", ",", "Left"}], "}"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.676245415415653*^9, 3.676245435490289*^9}, {
  3.6762454695877504`*^9, 3.676245476888563*^9}, {3.67624550797262*^9, 
  3.676245550885498*^9}, {3.6762456600665035`*^9, 3.676245692681967*^9}, {
  3.6762462304797*^9, 3.67624625291254*^9}, {3.676246288683403*^9, 
  3.6762463017562256`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Results of fitting ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SubscriptBox["\[Beta]\[Epsilon]", "R"]}]], TraditionalForm]]],
 " altogether with and without error"
}], "Subsubsection",
 CellChangeTimes->{{3.676246335343085*^9, 3.6762463488995085`*^9}}],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"plot1", ",", "plot2"}], "}"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6762462403857183`*^9, 3.676246246266928*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["scratch", "Subsection",
 CellChangeTimes->{{3.6762466810534954`*^9, 3.676246682644698*^9}}],

Cell[CellGroupData[{

Cell["scra", "Subsubsection",
 CellChangeTimes->{{3.676245713534604*^9, 3.6762457138778048`*^9}}],

Cell[BoxData[
 RowBox[{"LinTicks", "[", 
  RowBox[{"0", ",", "4", ",", 
   RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{3.6762456849271493`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinTicks", "[", 
   RowBox[{
    RowBox[{"-", "4"}], ",", "0", ",", 
    RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], "/.", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"str_String", "/;", 
     RowBox[{"str", "=!=", "\"\<\>\""}]}], ")"}], "\[RuleDelayed]", 
   RowBox[{"Superscript", "[", 
    RowBox[{"\"\<10\>\"", ",", "str"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6762456115662165`*^9, 3.676245651704889*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     TemplateBox[{"\"10\"","\"-4\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.`"}], ",", 
     TemplateBox[{"\"10\"","\"-3\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     TemplateBox[{"\"10\"","\"-2\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", 
     TemplateBox[{"\"10\"","\"-1\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     TemplateBox[{"\"10\"","\"0\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.8`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.6`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.4`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.2`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.8`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.6`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.4`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.2`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.4`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3999999999999999`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.19999999999999996`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{3.676245653046491*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     TemplateBox[{"\"10\"","\"-4\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.`"}], ",", 
     TemplateBox[{"\"10\"","\"-3\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     TemplateBox[{"\"10\"","\"-2\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", 
     TemplateBox[{"\"10\"","\"-1\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     TemplateBox[{"\"10\"","\"0\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.8`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.6`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.4`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.2`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.8`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.6`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.4`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.2`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.4`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3999999999999999`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.19999999999999996`"}], ",", 
     TemplateBox[{"\"10\"","\"\""},
      "Superscript"], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{3.6762456352062583`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", "\"\<-4\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.`"}], ",", "\"\<-3\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", "\"\<-2\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", "\"\<-1\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "\"\<0\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.8`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.6`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.4`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.2`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.8`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.6`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.4`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.2`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.4`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3999999999999999`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.19999999999999996`"}], ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{3.6762456126894183`*^9}],

Cell[BoxData[
 RowBox[{"LinTicks", "[", 
  RowBox[{"0", ",", "3", ",", 
   RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "\"\<0.0\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "\"\<0.5\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "\"\<1.0\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", "\"\<1.5\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "\"\<2.0\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "\"\<2.5\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "\"\<3.0\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30000000000000004`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.3`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.4`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.8`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9`", ",", "\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{3.6762455917373705`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["scratch", "Subsubsection",
 CellChangeTimes->{{3.676245575415742*^9, 3.6762455777869453`*^9}}],

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{"weightedData", ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EdgeForm", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], "}"}], 
          "]"}], ",", 
         RowBox[{"Disk", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}], 
       "]"}], ",", "0.03"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6762448358325324`*^9, 3.6762448921798315`*^9}, {
   3.6762451521349287`*^9, 3.676245164170617*^9}, 3.676245333357806*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"10", ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Log", "[", 
          RowBox[{"10", ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
      "#"}], "&"}], "/@", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"9", ";;", "11"}], "]"}], "]"}]}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EdgeForm", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], "}"}], 
          "]"}], ",", 
         RowBox[{"Disk", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}], 
       "]"}], ",", "0.03"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6762448358325324`*^9, 3.6762448921798315`*^9}, {
  3.676245223958207*^9, 3.676245234004827*^9}}],

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"9", ";;", "11"}], "]"}], "]"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EdgeForm", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], "}"}], 
          "]"}], ",", 
         RowBox[{"Disk", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}], 
       "]"}], ",", "0.03"}], "}"}]}]}], "]"}]], "Input"],

Cell["\<\
1. Fix this plot to also show error bars (make sure to get the axes right)
2. Then send this plot together with the previous one to Rob and co, stating \
that Stephanie\[CloseCurlyQuote]s idea was brilliant, and using non-linear \
fitting we find that most of the repressors seem to be in the active state \
(in line with Hernan\[CloseCurlyQuote]s assumption!)\
\>", "Text",
 CellChangeTimes->{{3.6762312779810786`*^9, 3.676231318621403*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"9", ";;", "11"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"newData", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64\>\"", ",", 
        "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52\>\"", ",", 
        "\"\<Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10\>\""}], "}"}]}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9, {
   3.676230587437582*^9, 3.6762305893596916`*^9}, {3.6762312283832417`*^9, 
   3.676231232878499*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"errorData", "=", 
   RowBox[{"acquire", "[", 
    RowBox[{"rawData", ",", "index", ",", "\"\<x with Error\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.676228127789183*^9, 3.676228129148261*^9}, {
   3.676228161085088*^9, 3.6762281638662467`*^9}, 3.676228650829814*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"weights", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "-", 
          RowBox[{"Log", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", 
      RowBox[{"Transpose", "@", "#"}]}], "&"}], "/@", 
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"9", ";;", "11"}], "]"}], "]"}], ",", "errorData"}], 
      "}"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weights", "=", 
   RowBox[{"Flatten", "[", "weights", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6762291640131664`*^9, 3.676229171100572*^9}, {
  3.676229203181407*^9, 3.676229217645234*^9}, {3.676229322765247*^9, 
  3.6762293272005005`*^9}, {3.6762293668617687`*^9, 3.6762293703009653`*^9}, {
  3.676229416221592*^9, 3.6762294169096317`*^9}, {3.6762303528931665`*^9, 
  3.6762303651488676`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", "9", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullData1", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"64.", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "15.3"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "d"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", "10", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullData2", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"52.", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "15.3"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "d"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", "11", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullData3", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"10.", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "17."}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "d"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fullData", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fullData1", ",", "fullData2", ",", "fullData3"}], "}"}], ",", 
     "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6762297138526154`*^9, 3.6762298527075577`*^9}, {
  3.676230147904442*^9, 3.6762301567969503`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"fullData", ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{
       "nn", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        "\[Epsilon]\[Epsilon]"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "4.5"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"nn", ",", "\[Epsilon]\[Epsilon]", ",", "R"}], "}"}], ",", 
     RowBox[{"Weights", "\[Rule]", 
      RowBox[{"1", "/", 
       SuperscriptBox["weights", "2"]}]}], ",", 
     RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "&"}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, 
   3.6762280260953665`*^9, {3.676229862046092*^9, 3.676229935358285*^9}, {
   3.676230281757098*^9, 3.6762302822371254`*^9}, {3.6762304050091476`*^9, 
   3.676230410173443*^9}}],

Cell[TextData[{
 StyleBox["This indicates that with error bars accounted for, even more than \
the ",
  FontSize->24,
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]\[Epsilon]", "R"], "=", "4.5"}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->24,
  FontWeight->"Bold"],
 StyleBox[" (gotten without considering error bars), nearly all of the \
repressors should be in the active state.",
  FontSize->24,
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.676230536988696*^9, 3.6762305664763827`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"fit", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"NonlinearModelFit", "[", 
         RowBox[{"fullData", ",", 
          RowBox[{"{", 
           RowBox[{"foldChange", "[", 
            RowBox[{"nn", ",", "R", ",", "jj", ",", "\[Epsilon]\[Epsilon]"}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"\[Beta]\[Epsilon]R", ",", "4.5"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"nn", ",", "\[Epsilon]\[Epsilon]", ",", "R"}], "}"}], ",", 
          RowBox[{"Weights", "\[Rule]", 
           RowBox[{"1", "/", 
            SuperscriptBox["weights", "2"]}]}], ",", 
          RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"1", "&"}], ")"}]}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"jj", ",", 
        RowBox[{"fit", "[", "\"\<RSquared\>\"", "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "14.", ",", "20.", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"fitData", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676229954636388*^9, 3.676230044141507*^9}, {
   3.6762300910381894`*^9, 3.6762300927892895`*^9}, {3.6762301632653203`*^9, 
   3.676230213422189*^9}, 3.6762302569256773`*^9, 3.6762303015842323`*^9, {
   3.676230454862999*^9, 3.676230513838372*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["scratch", "Subsubsection",
 CellChangeTimes->{{3.6762304253723125`*^9, 3.676230427068409*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676230339857421*^9, 3.6762303402524433`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"10", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "17."}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "7.5"}], "}"}], "}"}], ",", "R", 
     ",", 
     RowBox[{"Weights", "\[Rule]", 
      RowBox[{"1", "/", 
       SuperscriptBox[
        RowBox[{"weights", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "2"]}]}], ",", 
     RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "&"}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, 
   3.6762280260953665`*^9, {3.6762294381578465`*^9, 3.6762294432791395`*^9}, {
   3.67622951111802*^9, 3.676229573214572*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"52", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R", ",", 
     RowBox[{"Weights", "\[Rule]", 
      RowBox[{"1", "/", 
       SuperscriptBox[
        RowBox[{"weights", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "2"]}]}], ",", 
     RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "&"}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
   3.6762172700244417`*^9, 3.676217292493882*^9}, 3.676228045424472*^9, {
   3.676229447933406*^9, 3.6762294622862267`*^9}, {3.6762295895825076`*^9, 
   3.6762295914536147`*^9}, {3.6762296226223974`*^9, 3.6762296263826127`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"64", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "2."}], "}"}], "}"}], ",", "R", ",", 
     RowBox[{"Weights", "\[Rule]", 
      RowBox[{"1", "/", 
       SuperscriptBox[
        RowBox[{"weights", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "2"]}]}], ",", 
     RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "&"}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
   3.6762172700244417`*^9, 3.676217294413686*^9}, 3.6762280504257584`*^9, {
   3.676229489213767*^9, 3.6762294900548153`*^9}, {3.676229598863038*^9, 
   3.6762296000461063`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["sc", "Subsubsection",
 CellChangeTimes->{{3.6762296818207836`*^9, 3.6762296819487906`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "file", "=", 
   "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\Presentations\\\\Neat \
Stuff\\\\Great Figures\\\\Phillips group transcription\\\\Franz Brewster Fold \
Change.xlsx\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Import", "[", "file", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"acquire", "[", 
    RowBox[{"rawData", ",", "index", ",", "\"\<Repressor Copy number\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9, {
   3.676228144798156*^9, 3.676228147980338*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"foldChange", "[", 
   RowBox[{
   "n_", ",", "r_", ",", "\[Beta]\[Epsilon]R_", ",", 
    "\[Beta]\[Epsilon]HernanDNA_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rEff", "=", 
       RowBox[{
        FractionBox["1.", 
         RowBox[{"1.", "+", 
          SuperscriptBox["E", 
           RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "r"}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]DNA", "=", 
       RowBox[{"\[Beta]\[Epsilon]HernanDNA", "+", 
        RowBox[{"Log", "[", 
         FractionBox["1.", 
          RowBox[{"1.", "+", 
           SuperscriptBox["E", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "]"}]}]}], ",", 
      RowBox[{"nNS", "=", 
       RowBox[{"4.6", " ", 
        SuperscriptBox["10", "6."]}]}], ",", 
      RowBox[{"e", "=", 
       RowBox[{"N", "[", "E", "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    FractionBox[
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"rEff", "!"}], 
         RowBox[{
          SuperscriptBox["nNS", "m"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
        RowBox[{"Binomial", "[", 
         RowBox[{"n", ",", "m"}], "]"}], 
        SuperscriptBox["e", 
         RowBox[{
          RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "m"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0.", ",", 
         RowBox[{"Min", "[", 
          RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}], 
     RowBox[{"n", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"rEff", "!"}], 
          RowBox[{
           SuperscriptBox["nNS", "m"], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
         RowBox[{"Binomial", "[", 
          RowBox[{"n", ",", "m"}], "]"}], 
         SuperscriptBox["e", 
          RowBox[{
           RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0.", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}]}]]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762155423758736`*^9, 3.676215588119163*^9}, {
  3.676227857296712*^9, 3.6762278841432476`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]R", "=", "1."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"64", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"52", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "17."}]}], "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"9", ";;", "11"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"newData", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64\>\"", ",", 
        "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52\>\"", ",", 
        "\"\<Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10\>\""}], "}"}]}]}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"10", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "17."}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "7.5"}], "}"}], "}"}], ",", "R", 
     ",", 
     RowBox[{"Weights", "\[Rule]", 
      RowBox[{"1", "/", 
       SuperscriptBox[
        RowBox[{"weights", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "2"]}]}], ",", 
     RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "&"}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, 
   3.6762280260953665`*^9, {3.6762294381578465`*^9, 3.6762294432791395`*^9}, {
   3.67622951111802*^9, 3.676229573214572*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"52", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R", ",", 
     RowBox[{"Weights", "\[Rule]", 
      RowBox[{"1", "/", 
       SuperscriptBox[
        RowBox[{"weights", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "2"]}]}], ",", 
     RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "&"}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
   3.6762172700244417`*^9, 3.676217292493882*^9}, 3.676228045424472*^9, {
   3.676229447933406*^9, 3.6762294622862267`*^9}, {3.6762295895825076`*^9, 
   3.6762295914536147`*^9}, {3.6762296226223974`*^9, 3.6762296263826127`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"64", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "2."}], "}"}], "}"}], ",", "R", ",", 
     RowBox[{"Weights", "\[Rule]", 
      RowBox[{"1", "/", 
       SuperscriptBox[
        RowBox[{"weights", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "2"]}]}], ",", 
     RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "&"}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
   3.6762172700244417`*^9, 3.676217294413686*^9}, 3.6762280504257584`*^9, {
   3.676229489213767*^9, 3.6762294900548153`*^9}, {3.676229598863038*^9, 
   3.6762296000461063`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["scratch", "Subsubsection",
 CellChangeTimes->{{3.6762294074050875`*^9, 3.6762294087961674`*^9}}],

Cell[BoxData[{"errorData", "\[IndentingNewLine]", 
 RowBox[{"data", "[", 
  RowBox[{"[", 
   RowBox[{"9", ";;", "11"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6762286518048697`*^9, 3.676228654285012*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", "11", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "=", 
   RowBox[{"errorData", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676228668187807*^9, 3.6762286755652285`*^9}, {
  3.676229386077868*^9, 3.676229388622013*^9}}],

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"Transpose", "@", 
   RowBox[{"{", 
    RowBox[{"d", ",", "e"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6762291077369475`*^9, 3.6762291221727734`*^9}}],

Cell[BoxData[
 RowBox[{"Transpose", "@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"9", ";;", "11"}], "]"}], "]"}], ",", "errorData"}], 
   "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "-", 
        RowBox[{"Log", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", 
    RowBox[{"Transpose", "@", "#"}]}], "&"}], "/@", 
  RowBox[{"Transpose", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"9", ";;", "11"}], "]"}], "]"}], ",", "errorData"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6762291640131664`*^9, 3.676229171100572*^9}, {
  3.676229203181407*^9, 3.676229217645234*^9}, {3.676229322765247*^9, 
  3.6762293272005005`*^9}, {3.6762293668617687`*^9, 3.6762293703009653`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], 
    RowBox[{"#", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", "f"}]], "Input",
 CellChangeTimes->{{3.676229128078111*^9, 3.676229132492364*^9}, {
  3.67622922351757*^9, 3.676229277293646*^9}, {3.676229308445428*^9, 
  3.6762293188930254`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ")"}], 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "&"}], "/@", "f"}]], "Input",
 CellChangeTimes->{{3.676229128078111*^9, 3.676229132492364*^9}, {
  3.67622922351757*^9, 3.676229277293646*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"e", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"d", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], 
  RowBox[{"d", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"e", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"d", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], 
  RowBox[{"d", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"e", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"d", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], 
  RowBox[{"d", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.676229018972871*^9, 3.6762290463984394`*^9}, {
  3.67622928138988*^9, 3.6762292940306034`*^9}}],

Cell[BoxData[{"d", "\[IndentingNewLine]", "e"}], "Input",
 CellChangeTimes->{{3.6762286777113514`*^9, 3.6762286786204033`*^9}}],

Cell[BoxData[{
 RowBox[{"e", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"d", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.676228923804427*^9, 3.6762289247334805`*^9}}],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"e", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"d", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], 
  RowBox[{"d", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.676229018972871*^9, 3.6762290463984394`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", 
      RowBox[{"e", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", 
      RowBox[{"d", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}]}], ")"}], 
  RowBox[{"Log", "[", "10.", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762287028827915`*^9, 3.676228713453396*^9}, {
  3.676228877502779*^9, 3.6762288865892987`*^9}, {3.676228955969267*^9, 
  3.676228998716712*^9}}],

Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{"Log", "[", "10.", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762286342068634`*^9, 3.676228636686005*^9}, {
  3.6762289733572617`*^9, 3.676228981629735*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", "10.", "]"}]], "Input",
 CellChangeTimes->{{3.676228577372613*^9, 3.6762285785086775`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"10", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "17."}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, 
   3.6762280260953665`*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"52", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
   3.6762172700244417`*^9, 3.676217292493882*^9}, 3.676228045424472*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"64", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
   3.6762172700244417`*^9, 3.676217294413686*^9}, 3.6762280504257584`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["scra", "Subsubsection",
 CellChangeTimes->{{3.676227987853179*^9, 3.6762279882202005`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6762279524151525`*^9, 3.6762279527651725`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\Presentations\\\\Neat \
Stuff\\\\Great Figures\\\\Phillips group transcription\\\\Franz Brewster Fold \
Change.xlsx\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"acquire", "[", 
     RowBox[{"rawData", ",", "index", ",", "\"\<Repressor Copy number\>\""}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]R", "=", "10."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange3", "[", 
           RowBox[{"64", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange3", "[", 
           RowBox[{"52", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange3", "[", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "17."}]}], "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"9", ";;", "11"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"newData", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64\>\"", ",", 
        "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52\>\"", ",", 
        "\"\<Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10\>\""}], "}"}]}]}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, {3.676215598624189*^9, 
   3.6762156014029937`*^9}, {3.6762157444154797`*^9, 3.676215747593286*^9}, {
   3.676216740632468*^9, 3.6762167572129006`*^9}, {3.6762168867319946`*^9, 
   3.6762169091570406`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange3", "[", 
       RowBox[{"10", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "17."}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}}],

Cell[BoxData[{
 RowBox[{"Log", "[", 
  RowBox[{"6.464", "-", "3.57"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Log", "[", 
  RowBox[{"3.57", "-", "1.971"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6762186646689587`*^9, 3.6762186960137515`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange3", "[", 
       RowBox[{"52", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
  3.6762172700244417`*^9, 3.676217292493882*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange3", "[", 
       RowBox[{"64", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "15.3"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, {
  3.6762172700244417`*^9, 3.676217294413686*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["scratch", "Subsubsection",
 CellChangeTimes->{{3.676217302249301*^9, 3.676217302998102*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RSquared", "[", 
   RowBox[{"data_", ",", "\[Beta]\[Epsilon]R_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theory", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"foldChange3", "[", 
        RowBox[{"10", ",", "#", ",", "\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", "17."}]}], "]"}], "&"}], "/@", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", "theory"}], ")"}], 
       ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", "theory"}], ")"}]}], 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ".", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]]}]}], 
   "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.6762158425336695`*^9, 3.6762158497488823`*^9}, {
  3.676216387945427*^9, 3.6762165358657017`*^9}}],

Cell[BoxData[{
 RowBox[{"(", 
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"11", ",", "All", ",", "2"}], "]"}], "]"}], "-", "theory"}], 
  ")"}], "\[IndentingNewLine]", 
 RowBox[{"(", 
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{"11", ",", "All", ",", "2"}], "]"}], "]"}], ")"}]}], "Input",
 CellChangeTimes->{{3.6762166972048235`*^9, 3.6762166973920236`*^9}}],

Cell[BoxData[{
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"-", "0.17830718159670667`"}], ")"}], "2"], "\[IndentingNewLine]", 
 SuperscriptBox["0.1426", "2"]}], "Input",
 CellChangeTimes->{{3.676216705948839*^9, 3.6762167132732525`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"11", ",", "All", ",", "2"}], "]"}], "]"}], "-", "theory"}], 
   ")"}], ".", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"11", ",", "All", ",", "2"}], "]"}], "]"}], "-", "theory"}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"11", ",", "All", ",", "2"}], "]"}], "]"}], ")"}], ".", 
  RowBox[{"(", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"11", ",", "All", ",", "2"}], "]"}], "]"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.6762166245968685`*^9, 3.676216628094077*^9}, {
  3.676216669236354*^9, 3.6762166804439926`*^9}}],

Cell[BoxData[
 RowBox[{"RSquared", "[", 
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", "11", "]"}], "]"}], ",", "1."}], "]"}]], "Input",
 CellChangeTimes->{{3.676216456940555*^9, 3.6762164662641726`*^9}}],

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", "11", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.6762165666809587`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], ".", 
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"f3", "[", "R", "]"}], ",", 
     RowBox[{"{", "\[Beta]\[Epsilon]", "}"}], ",", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<FitResiduals\>\"", ",", "\"\<RSquared\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762147763132076`*^9, 3.6762147871400275`*^9}, {
   3.676214823229309*^9, 3.676214857764817*^9}, {3.6762149406444016`*^9, 
   3.676214954141425*^9}, {3.676215074895052*^9, 3.676215098678296*^9}, 
   3.676215129700957*^9, {3.676215622257248*^9, 3.6762156613271217`*^9}, 
   3.67621578041455*^9, {3.676215849078081*^9, 3.6762158539140897`*^9}, {
   3.676216307275875*^9, 3.6762163090718784`*^9}}],

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"f3", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "2"], "&"}], "/@", 
   RowBox[{"data", "[", 
    RowBox[{"[", "11", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6762165025468407`*^9, 3.6762165036076427`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "-", 
      RowBox[{"f3", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "2"], "&"}], "/@", 
  RowBox[{"data", "[", 
   RowBox[{"[", "11", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6762163539349623`*^9, 3.6762163597163734`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"f3", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "2"], "&"}], "/@", 
     "data"}], "]"}], 
   RowBox[{"Total", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], ")"}], "2"], 
    "]"}]]}]], "Input",
 CellChangeTimes->{{3.6762154634689217`*^9, 3.6762154685233307`*^9}, {
   3.67621603475375*^9, 3.676216046843172*^9}, {3.6762162264977217`*^9, 
   3.676216234102936*^9}, 3.67621633099212*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.67621632563831*^9}],

Cell[BoxData[
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"f", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "2"], "&"}], "/@", 
     "data"}], "]"}], 
   RowBox[{"Total", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], ")"}], "2"], 
    "]"}]]}]], "Input",
 CellChangeTimes->{{3.6762154634689217`*^9, 3.6762154685233307`*^9}, {
  3.67621603475375*^9, 3.676216046843172*^9}, {3.6762162264977217`*^9, 
  3.676216234102936*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6762159664217463`*^9, 3.6762159665309467`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "4"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"6", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"nlm", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"data", ",", 
    RowBox[{"Log", "[", 
     RowBox[{"a", " ", "+", 
      RowBox[{"b", " ", 
       RowBox[{"x", "^", "2"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nlm", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<FitResiduals\>\"", ",", "\"\<StandardizedResiduals\>\"", ",", 
    "\"\<RSquared\>\""}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "-", 
      RowBox[{"f", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "&"}], "/@", "data"}],
   "}"}]}], "Input",
 CellChangeTimes->{{3.6762159894062634`*^9, 3.6762159992684813`*^9}, {
  3.676216069769018*^9, 3.676216090003456*^9}, {3.6762161293997326`*^9, 
  3.676216139485351*^9}},
 CellID->332479036],

Cell[BoxData[{
 RowBox[{"Clear", "[", "f", "]"}], "\n", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"a", " ", "+", 
     RowBox[{"b", " ", 
      RowBox[{"x", "^", "2"}]}]}], "]"}], "/.", 
   RowBox[{"nlm", "[", "\"\<BestFitParameters\>\"", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.67621601428051*^9, 3.676216023206527*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"f", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "2"], "&"}], "/@", 
     "data"}], "]"}], 
   RowBox[{"Total", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], ")"}], "2"], 
    "]"}]]}]], "Input",
 CellChangeTimes->{{3.6762154634689217`*^9, 3.6762154685233307`*^9}, {
  3.67621603475375*^9, 3.676216046843172*^9}, {3.6762162264977217`*^9, 
  3.676216234102936*^9}}],

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["scratch", "Subsubsection",
 CellChangeTimes->{{3.6762159683153496`*^9, 3.6762159692065516`*^9}}],

Cell[BoxData[{
 RowBox[{"f2", "[", "R", "]"}], "\[IndentingNewLine]", 
 RowBox[{"f3", "[", "R", "]"}]}], "Input",
 CellChangeTimes->{{3.6762158637823076`*^9, 3.67621586529651*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f2", "[", "R_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"10", "<", 
     RowBox[{"0.73", " ", "R"}]}], ",", 
    FractionBox[
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"m", "=", "0.`"}], "10"], 
      FractionBox[
       RowBox[{
        SuperscriptBox["4.6`*^6", 
         RowBox[{"-", "m"}]], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
        RowBox[{"(", 
         RowBox[{"10", "-", "m"}], ")"}], " ", 
        RowBox[{"Binomial", "[", 
         RowBox[{"10", ",", "m"}], "]"}], " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "m"}], "+", 
          RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}], 
     RowBox[{"10", " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", "0.`"}], "10"], 
       FractionBox[
        RowBox[{
         SuperscriptBox["4.6`*^6", 
          RowBox[{"-", "m"}]], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
         RowBox[{"Binomial", "[", 
          RowBox[{"10", ",", "m"}], "]"}], " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "m"}], "+", 
           RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}]}]], 
    ",", 
    FractionBox[
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"m", "=", "0.`"}], 
       RowBox[{"0.73", " ", "R"}]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["4.6`*^6", 
         RowBox[{"-", "m"}]], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
        RowBox[{"(", 
         RowBox[{"10", "-", "m"}], ")"}], " ", 
        RowBox[{"Binomial", "[", 
         RowBox[{"10", ",", "m"}], "]"}], " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "m"}], "+", 
          RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}], 
     RowBox[{"10", " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", "0.`"}], 
        RowBox[{"0.73", " ", "R"}]], 
       FractionBox[
        RowBox[{
         SuperscriptBox["4.6`*^6", 
          RowBox[{"-", "m"}]], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
         RowBox[{"Binomial", "[", 
          RowBox[{"10", ",", "m"}], "]"}], " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "m"}], "+", 
           RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}]}]]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"f2", "[", "R", "]"}], ",", 
     RowBox[{"{", "\[Beta]\[Epsilon]", "}"}], ",", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.676215183971258*^9, 3.6762152909176617`*^9}, 
   3.6762158902407556`*^9}],

Cell[BoxData[
 RowBox[{"foldChange3", "[", 
  RowBox[{"10", ",", "R", ",", "1.", ",", 
   RowBox[{"-", "17."}]}], "]"}]], "Input",
 CellChangeTimes->{3.6762157861437597`*^9}],

Cell[BoxData[
 RowBox[{"NonlinearModelFit", "[", 
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", "11", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"foldChange", "[", 
      RowBox[{"10", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
       RowBox[{"-", "17."}]}], "]"}], ",", 
     RowBox[{"\[Beta]\[Epsilon]R", "\[Equal]", "1."}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6762156100554094`*^9, 3.6762156106014104`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     FractionBox[
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", "0.`"}], 
        RowBox[{"Min", "[", 
         RowBox[{"10", ",", 
          RowBox[{"0.7310585786300049`", " ", "R"}]}], "]"}]], 
       FractionBox[
        RowBox[{
         SuperscriptBox["4.6`*^6", 
          RowBox[{"-", "m"}]], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
         RowBox[{"(", 
          RowBox[{"10", "-", "m"}], ")"}], " ", 
         RowBox[{"Binomial", "[", 
          RowBox[{"10", ",", "m"}], "]"}], " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "m"}], "+", 
           RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}], 
      RowBox[{"10", " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "0.`"}], 
         RowBox[{"Min", "[", 
          RowBox[{"10", ",", 
           RowBox[{"0.7310585786300049`", " ", "R"}]}], "]"}]], 
        FractionBox[
         RowBox[{
          SuperscriptBox["4.6`*^6", 
           RowBox[{"-", "m"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
          RowBox[{"Binomial", "[", 
           RowBox[{"10", ",", "m"}], "]"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "m"}], "+", 
            RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}]}]], 
     ",", 
     RowBox[{"{", "\[Beta]\[Epsilon]", "}"}], ",", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762147763132076`*^9, 3.6762147871400275`*^9}, {
   3.676214823229309*^9, 3.676214857764817*^9}, {3.6762149406444016`*^9, 
   3.676214954141425*^9}, {3.676215074895052*^9, 3.676215098678296*^9}, 
   3.676215129700957*^9}],

Cell[BoxData[
 RowBox[{"foldChange", "[", 
  RowBox[{"10", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
   RowBox[{"-", "17."}]}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"m", "=", "0.`"}], 
           RowBox[{"Min", "[", 
            RowBox[{"10", ",", 
             FractionBox[
              RowBox[{"1.`", " ", "R"}], 
              RowBox[{"1.`", "\[VeryThinSpace]", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]]}], "]"}]], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["4.6`*^6", 
              RowBox[{"-", "m"}]], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "m"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "17.`"}], "+", 
                 RowBox[{"Log", "[", 
                  FractionBox["1.`", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "]"}]}], 
                ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{"10", "-", "m"}], ")"}], " ", 
             RowBox[{"Binomial", "[", 
              RowBox[{"10", ",", "m"}], "]"}], " ", 
             RowBox[{
              FractionBox[
               RowBox[{"1.`", " ", "R"}], 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "!"}]}], ")"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "m"}], "+", 
              FractionBox[
               RowBox[{"1.`", " ", "R"}], 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]]}], ")"}], "!"}]}]}], 
         ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"10", " ", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"m", "=", "0.`"}], 
            RowBox[{"Min", "[", 
             RowBox[{"10", ",", 
              FractionBox[
               RowBox[{"1.`", " ", "R"}], 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]]}], "]"}]], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["4.6`*^6", 
               RowBox[{"-", "m"}]], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "m"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "17.`"}], "+", 
                  RowBox[{"Log", "[", 
                   FractionBox["1.`", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "]"}]}], 
                 ")"}]}]], " ", 
              RowBox[{"Binomial", "[", 
               RowBox[{"10", ",", "m"}], "]"}], " ", 
              RowBox[{
               FractionBox[
                RowBox[{"1.`", " ", "R"}], 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "!"}]}], ")"}], 
            "/", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "m"}], "+", 
               FractionBox[
                RowBox[{"1.`", " ", "R"}], 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]]}], ")"}], 
             "!"}]}]}]}], ")"}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]R", "\[Equal]", "1."}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762147763132076`*^9, 3.6762147871400275`*^9}, {
   3.676214823229309*^9, 3.676214857764817*^9}, {3.6762149406444016`*^9, 
   3.676214954141425*^9}, 3.6762150367929783`*^9}],

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", "11", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"foldChange", "[", 
  RowBox[{"10", ",", "R", ",", "1.", ",", 
   RowBox[{"-", "17."}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Mean", "@", 
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{"11", ",", "All", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.676215437339264*^9, 3.676215444082476*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"f2", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "2"], "&"}], "/@", 
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}]}], "]"}], 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"Mean", "@", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"11", ",", "All", ",", "2"}], "]"}], "]"}]}]}], ")"}], 
       "2"], "&"}], "/@", 
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}]}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.6762154634689217`*^9, 3.6762154685233307`*^9}}],

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"Mean", "@", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"11", ",", "All", ",", "2"}], "]"}], "]"}]}]}], ")"}], "2"],
     "&"}], "/@", 
   RowBox[{"data", "[", 
    RowBox[{"[", "11", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676215453351694*^9, 3.6762154544154963`*^9}}],

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"f2", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "2"], "&"}], "/@", 
   RowBox[{"data", "[", 
    RowBox[{"[", "11", "]"}], "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"f2", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "2"], "&"}], "/@", 
   RowBox[{"data", "[", 
    RowBox[{"[", "11", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6762153280909324`*^9, 3.6762153465123663`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f2", "[", "R_", "]"}], ":=", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"10", "<", 
      RowBox[{"0.73", " ", "R"}]}], ",", 
     FractionBox[
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", "0.`"}], "10"], 
       FractionBox[
        RowBox[{
         SuperscriptBox["4.6`*^6", 
          RowBox[{"-", "m"}]], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
         RowBox[{"(", 
          RowBox[{"10", "-", "m"}], ")"}], " ", 
         RowBox[{"Binomial", "[", 
          RowBox[{"10", ",", "m"}], "]"}], " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "m"}], "+", 
           RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}], 
      RowBox[{"10", " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "0.`"}], "10"], 
        FractionBox[
         RowBox[{
          SuperscriptBox["4.6`*^6", 
           RowBox[{"-", "m"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
          RowBox[{"Binomial", "[", 
           RowBox[{"10", ",", "m"}], "]"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "m"}], "+", 
            RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}]}]], 
     ",", 
     FractionBox[
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", "0.`"}], 
        RowBox[{"0.73", " ", "R"}]], 
       FractionBox[
        RowBox[{
         SuperscriptBox["4.6`*^6", 
          RowBox[{"-", "m"}]], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
         RowBox[{"(", 
          RowBox[{"10", "-", "m"}], ")"}], " ", 
         RowBox[{"Binomial", "[", 
          RowBox[{"10", ",", "m"}], "]"}], " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "m"}], "+", 
           RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}], 
      RowBox[{"10", " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "0.`"}], 
         RowBox[{"0.73", " ", "R"}]], 
        FractionBox[
         RowBox[{
          SuperscriptBox["4.6`*^6", 
           RowBox[{"-", "m"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
          RowBox[{"Binomial", "[", 
           RowBox[{"10", ",", "m"}], "]"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "m"}], "+", 
            RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}]}]]}],
     "]"}], 
   FractionBox[
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"m", "=", "0.`"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"0.73", " ", "R"}], "<", "10"}], ",", 
        RowBox[{"0.7310585786300049`", " ", "R"}], ",", "10"}], "]"}]], 
     FractionBox[
      RowBox[{
       SuperscriptBox["4.6`*^6", 
        RowBox[{"-", "m"}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
       RowBox[{"(", 
        RowBox[{"10", "-", "m"}], ")"}], " ", 
       RowBox[{"Binomial", "[", 
        RowBox[{"10", ",", "m"}], "]"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "m"}], "+", 
         RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}], 
    RowBox[{"10", " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"m", "=", "0.`"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"0.7310585786300049`", " ", "R"}], "<", "10"}], ",", 
         RowBox[{"0.7310585786300049`", " ", "R"}], ",", "10"}], "]"}]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["4.6`*^6", 
         RowBox[{"-", "m"}]], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
        RowBox[{"Binomial", "[", 
         RowBox[{"10", ",", "m"}], "]"}], " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "m"}], "+", 
          RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], 
        "!"}]]}]}]]}]}], "\n", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"f2", "[", "R", "]"}], ",", 
     RowBox[{"{", "\[Beta]\[Epsilon]", "}"}], ",", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.676215183971258*^9, 3.6762152909176617`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "R_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"m", "=", "0.`"}], 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0.7310585786300049`", " ", "R"}], "<", "10"}], ",", 
       RowBox[{"0.7310585786300049`", " ", "R"}], ",", "10"}], "]"}]], 
    FractionBox[
     RowBox[{
      SuperscriptBox["4.6`*^6", 
       RowBox[{"-", "m"}]], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
      RowBox[{"(", 
       RowBox[{"10", "-", "m"}], ")"}], " ", 
      RowBox[{"Binomial", "[", 
       RowBox[{"10", ",", "m"}], "]"}], " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "m"}], "+", 
        RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}], 
   RowBox[{"10", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"m", "=", "0.`"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"0.7310585786300049`", " ", "R"}], "<", "10"}], ",", 
        RowBox[{"0.7310585786300049`", " ", "R"}], ",", "10"}], "]"}]], 
     FractionBox[
      RowBox[{
       SuperscriptBox["4.6`*^6", 
        RowBox[{"-", "m"}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
       RowBox[{"Binomial", "[", 
        RowBox[{"10", ",", "m"}], "]"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "m"}], "+", 
         RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], 
       "!"}]]}]}]]}]], "Input",
 CellChangeTimes->{{3.676215183971258*^9, 3.676215213356516*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"f", "[", "R", "]"}], ",", 
     RowBox[{"{", "\[Beta]\[Epsilon]", "}"}], ",", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762147763132076`*^9, 3.6762147871400275`*^9}, {
   3.676214823229309*^9, 3.676214857764817*^9}, {3.6762149406444016`*^9, 
   3.676214954141425*^9}, {3.676215074895052*^9, 3.676215098678296*^9}, 
   3.676215129700957*^9, {3.6762152214875307`*^9, 3.676215225286338*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     FractionBox[
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", "0.`"}], 
        RowBox[{"Min", "[", 
         RowBox[{"10", ",", 
          RowBox[{"0.7310585786300049`", " ", "R"}]}], "]"}]], 
       FractionBox[
        RowBox[{
         SuperscriptBox["4.6`*^6", 
          RowBox[{"-", "m"}]], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
         RowBox[{"(", 
          RowBox[{"10", "-", "m"}], ")"}], " ", 
         RowBox[{"Binomial", "[", 
          RowBox[{"10", ",", "m"}], "]"}], " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "m"}], "+", 
           RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}], 
      RowBox[{"10", " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "0.`"}], 
         RowBox[{"Min", "[", 
          RowBox[{"10", ",", 
           RowBox[{"0.7310585786300049`", " ", "R"}]}], "]"}]], 
        FractionBox[
         RowBox[{
          SuperscriptBox["4.6`*^6", 
           RowBox[{"-", "m"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
          RowBox[{"Binomial", "[", 
           RowBox[{"10", ",", "m"}], "]"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "m"}], "+", 
            RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}]}]], 
     ",", 
     RowBox[{"{", "\[Beta]\[Epsilon]", "}"}], ",", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762147763132076`*^9, 3.6762147871400275`*^9}, {
   3.676214823229309*^9, 3.676214857764817*^9}, {3.6762149406444016`*^9, 
   3.676214954141425*^9}, {3.676215074895052*^9, 3.676215098678296*^9}, 
   3.676215129700957*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     FractionBox[
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", "0.`"}], 
        RowBox[{"Min", "[", 
         RowBox[{"10", ",", 
          RowBox[{"0.7310585786300049`", " ", "R"}]}], "]"}]], 
       FractionBox[
        RowBox[{
         SuperscriptBox["4.6`*^6", 
          RowBox[{"-", "m"}]], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
         RowBox[{"(", 
          RowBox[{"10", "-", "m"}], ")"}], " ", 
         RowBox[{"Binomial", "[", 
          RowBox[{"10", ",", "m"}], "]"}], " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "m"}], "+", 
           RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}], 
      RowBox[{"10", " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "0.`"}], 
         RowBox[{"Min", "[", 
          RowBox[{"10", ",", 
           RowBox[{"0.7310585786300049`", " ", "R"}]}], "]"}]], 
        FractionBox[
         RowBox[{
          SuperscriptBox["4.6`*^6", 
           RowBox[{"-", "m"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"17.313261687518224`", " ", "m"}]], " ", 
          RowBox[{"Binomial", "[", 
           RowBox[{"10", ",", "m"}], "]"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.7310585786300049`", " ", "R"}], ")"}], "!"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "m"}], "+", 
            RowBox[{"0.7310585786300049`", " ", "R"}]}], ")"}], "!"}]]}]}]], 
     ",", 
     RowBox[{"{", "\[Beta]\[Epsilon]", "}"}], ",", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762147763132076`*^9, 3.6762147871400275`*^9}, {
   3.676214823229309*^9, 3.676214857764817*^9}, {3.6762149406444016`*^9, 
   3.676214954141425*^9}, {3.676215074895052*^9, 3.676215098678296*^9}, 
   3.676215129700957*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{"10", ",", "R", ",", "1.", ",", 
        RowBox[{"-", "17."}]}], "]"}], "}"}], ",", 
     RowBox[{"{", "\[Beta]\[Epsilon]", "}"}], ",", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762147763132076`*^9, 3.6762147871400275`*^9}, {
  3.676214823229309*^9, 3.676214857764817*^9}, {3.6762149406444016`*^9, 
  3.676214954141425*^9}, {3.676215074895052*^9, 3.6762151250799475`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"foldChange", "[", 
        RowBox[{"10", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", "17."}]}], "]"}], ",", 
       RowBox[{"\[Beta]\[Epsilon]R", "\[Equal]", "1."}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762147763132076`*^9, 3.6762147871400275`*^9}, {
  3.676214823229309*^9, 3.676214857764817*^9}, {3.6762149406444016`*^9, 
  3.676214954141425*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"newData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", "rLog"], ",", 
         RowBox[{"foldChange", "[", 
          RowBox[{"10", ",", 
           SuperscriptBox["10", "rLog"], ",", "1.", ",", 
           RowBox[{"-", "17."}]}], "]"}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"data", "[", 
     RowBox[{"[", "11", "]"}], "]"}], "]"}], ",", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"newData", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676214980389073*^9, 3.676215000519712*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", 
     RowBox[{"foldChange", "[", 
      RowBox[{"10", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
       RowBox[{"-", "17."}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "0."}], "}"}], "}"}], ",", "R"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762147763132076`*^9, 3.6762147871400275`*^9}, {
  3.676214823229309*^9, 3.676214857764817*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["scratch", "Subsubsection",
 CellChangeTimes->{{3.6762146764821024`*^9, 3.676214677979705*^9}}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"9", ";;", "11"}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "0"], ",", 
          SuperscriptBox["10", "3.5"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "4.5"}]], ",", 
          SuperscriptBox["10", "0.5"]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Repressor Copy Number\>\"", ",", "\"\<Fold-Change\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", 
        RowBox[{"9", ";;", "11"}], "]"}], "]"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"markers", "[", 
       RowBox[{"[", 
        RowBox[{"9", ";;", "11"}], "]"}], "]"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"LogTicks", "[", 
         RowBox[{
          SuperscriptBox["10", "0"], ",", 
          SuperscriptBox["10", "4"], ",", 
          RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
        RowBox[{"LogTicks", "[", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]], ",", 
          SuperscriptBox["10", "1"], ",", 
          RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], "}"}]}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"Prolog", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "opts"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6762138371481514`*^9, 3.6762138544987874`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\Presentations\\\\Neat \
Stuff\\\\Great Figures\\\\Phillips group transcription\\\\Franz Brewster Fold \
Change.xlsx\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"acquire", "[", 
    RowBox[{"rawData", ",", "index", ",", "\"\<Repressor Copy number\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"foldChange", "[", 
         RowBox[{"10", ",", 
          SuperscriptBox["10", "rLog"], ",", "100", ",", 
          RowBox[{"-", "17."}]}], "]"}], ",", 
        RowBox[{"foldChange", "[", 
         RowBox[{"52", ",", 
          SuperscriptBox["10", "rLog"], ",", "100", ",", 
          RowBox[{"-", "15.3"}]}], "]"}], ",", 
        RowBox[{"foldChange", "[", 
         RowBox[{"64", ",", 
          SuperscriptBox["10", "rLog"], ",", "100", ",", 
          RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"9", ";;", "11"}], "]"}], "]"}], 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["10", "0"], ",", 
             SuperscriptBox["10", "3.5"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "4.5"}]], ",", 
             SuperscriptBox["10", "0.5"]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Repressor Copy Number\>\"", ",", "\"\<Fold-Change\>\""}], 
          "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LogTicks", "[", 
            RowBox[{
             SuperscriptBox["10", "0"], ",", 
             SuperscriptBox["10", "4"], ",", 
             RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
           RowBox[{"LogTicks", "[", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]], ",", 
             SuperscriptBox["10", "1"], ",", 
             RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], "}"}]}], 
        ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"FrameTicksStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"Prolog", "\[Rule]", 
         RowBox[{"{", "}"}]}], ",", "opts"}], "*)"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"newData", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10\>\"", ",", 
        "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52\>\"", ",", 
        "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64\>\""}], "}"}]}]}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}}],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"foldChange", "[", 
      RowBox[{"10", ",", 
       SuperscriptBox["10", "rLog"], ",", "100", ",", 
       RowBox[{"-", "17."}]}], "]"}], ",", 
     RowBox[{"foldChange", "[", 
      RowBox[{"52", ",", 
       SuperscriptBox["10", "rLog"], ",", "100", ",", 
       RowBox[{"-", "15.3"}]}], "]"}], ",", 
     RowBox[{"foldChange", "[", 
      RowBox[{"64", ",", 
       SuperscriptBox["10", "rLog"], ",", "100", ",", 
       RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676214012826172*^9, 3.6762140517822437`*^9}, {
  3.6762140902703176`*^9, 3.676214157515993*^9}}],

Cell[BoxData[
 RowBox[{"NonlinearModelFit", "[", 
  RowBox[{"foldChange", "[", 
   RowBox[{"10", ",", "R", ",", "100", ",", 
    RowBox[{"-", "17."}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6762140718270807`*^9, 3.6762140792424946`*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Stephanie\[CloseCurlyQuote]s New Idea - Calculating ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SubscriptBox["\[Beta]\[Epsilon]", "R"]}]], TraditionalForm]]]
}], "Section",
 CellChangeTimes->{{3.6796847961986494`*^9, 3.6796848026000156`*^9}}],

Cell[CellGroupData[{

Cell["Background", "Subsubsection",
 CellChangeTimes->{{3.679685866475866*^9, 3.6796858684669795`*^9}}],

Cell["\<\
Continuing with more brilliant ideas, Stephanie pointed out that the specific \
operator DNA sequences (especially when they are present in multiple copy \
numbers) can pull more repressors into the active state, so that it may be an \
oversimplification to assume\
\>", "Text",
 CellChangeTimes->{{3.6796848046741343`*^9, 3.6796848458484893`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["p", "active"], "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SubscriptBox["\[Beta]\[Epsilon]", "R"]}]]}]]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6796848468825483`*^9, 3.6796848526618786`*^9}}],

Cell["Instead, if we let the states of the repressor be ", "Text",
 CellChangeTimes->{{3.6796848561140766`*^9, 3.6796848675717316`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     StyleBox["State",
      FontVariations->{"Underline"->True}], 
     StyleBox["Weight",
      FontVariations->{"Underline"->True}]},
    {
     RowBox[{
      RowBox[{"nonspecifically", " ", "bound"}], ",", "active"}], "1"},
    {
     RowBox[{
      RowBox[{"nonspecifically", " ", "bound"}], ",", "inactive"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SubscriptBox["\[Beta]\[Epsilon]", "R"]}]]},
    {
     RowBox[{
      RowBox[{"specifically", " ", "bound"}], ",", "active"}], 
     RowBox[{
      FractionBox["O", 
       SubscriptBox["N", "NS"]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubscriptBox["\[Beta]\[Epsilon]", "DNA"]}]]}]},
    {
     RowBox[{
      RowBox[{"specifically", " ", "bound"}], ",", "inactive"}], "0"}
   }], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.679684868731798*^9, 3.6796849390238185`*^9}}],

Cell["\<\
where we have assumed that the inactive repressor does not bind to DNA.\
\>", "Text",
 CellChangeTimes->{{3.6796849115672483`*^9, 3.679684955201744*^9}}],

Cell[TextData[{
 "Note the fundamental issue that we are trying to tackle. Everyone agrees \
that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "bound"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is given by"
}], "Text",
 CellChangeTimes->{{3.6796849115672483`*^9, 3.679684983539365*^9}, {
  3.6796850415426826`*^9, 3.6796850419507055`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["p", "bound"], "=", 
   FractionBox[
    RowBox[{
     FractionBox["P", 
      SubscriptBox["N", "NS"]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SubscriptBox["\[Beta]\[Epsilon]", 
        RowBox[{"DNA", ",", "pol"}]]}]]}], 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox["P", 
       SubscriptBox["N", "NS"]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubscriptBox["\[Beta]\[Epsilon]", 
         RowBox[{"DNA", ",", "pol"}]]}]]}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["p", "active"], 
        SubscriptBox["R", "tot"]}], 
       SubscriptBox["N", "NS"]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubscriptBox["\[Beta]\[Epsilon]", 
         RowBox[{"DNA", ",", 
          SubscriptBox["R", "active"]}]]}]]}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SubscriptBox["p", "active"]}], ")"}], 
        SubscriptBox["R", "tot"]}], 
       SubscriptBox["N", "NS"]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubscriptBox["\[Beta]\[Epsilon]", 
         RowBox[{"DNA", ",", 
          SubscriptBox["R", "inactive"]}]]}]]}]}]]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.679684984366412*^9, 3.679685034627287*^9}}],

Cell["\<\
which leads to the fold-change expression (assuming the inactive repressor \
does not bind DNA and the weak promoter approximation)\
\>", "Text",
 CellChangeTimes->{{3.679685036887416*^9, 3.6796850588556724`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"fold", "-", "change"}], "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{
       SubscriptBox["p", "active"], 
       FractionBox[
        SubscriptBox["R", "tot"], 
        SubscriptBox["N", "NS"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SubscriptBox["\[Beta]\[Epsilon]", 
          RowBox[{"DNA", ",", 
           SubscriptBox["R", "active"]}]]}]]}]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "TextNumbered",
 CellChangeTimes->{{3.679684984366412*^9, 3.6796850782617826`*^9}, {
   3.6796851347520137`*^9, 3.6796851534730844`*^9}, 3.6796853614049773`*^9}],

Cell[TextData[{
 "But the question we are asking now is, what is the form of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "active"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "? Hernan originally postulated that "
}], "Text",
 CellChangeTimes->{{3.6796853625750446`*^9, 3.679685392373749*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "active"], "\[TildeTilde]", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ","
}], "TextNumbered",
 CellChangeTimes->{{3.6796853935538163`*^9, 3.6796853994441533`*^9}}],

Cell["\<\
assuming that all repressors were active. After that, we went to the more \
refined form of stating\
\>", "Text",
 CellChangeTimes->{{3.6796854007422276`*^9, 3.6796854152350564`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "active"], "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubscriptBox["\[Beta]\[Epsilon]", "R"]}]]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "TextNumbered",
 CellChangeTimes->{{3.679685416281116*^9, 3.679685432871065*^9}}],

Cell[TextData[{
 "According to Rob Brewster\[CloseCurlyQuote]s data, it seems that with this \
form, the best fit ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]\[Epsilon]", "R"], "\[GreaterTilde]", "4.5"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", so that Hernan\[CloseCurlyQuote]s assumption was fine. But now with \
Stephanie\[CloseCurlyQuote]s point about the copy number of the promoter \
mattering, she is bringing this bad boy into the realm of "
}], "Text",
 CellChangeTimes->{{3.679685439108422*^9, 3.6796854887392607`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "active"], "=", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["O", 
        SubscriptBox["N", "NS"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SubscriptBox["\[Beta]\[Epsilon]", 
          RowBox[{"DNA", ",", 
           SubscriptBox["R", "active"]}]]}]]}]}], 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["O", 
        SubscriptBox["N", "NS"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SubscriptBox["\[Beta]\[Epsilon]", 
          RowBox[{"DNA", ",", 
           SubscriptBox["R", "active"]}]]}]]}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubscriptBox["\[Beta]\[Epsilon]", "R"]}]]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ","
}], "TextNumbered",
 CellChangeTimes->{{3.679685416281116*^9, 3.679685432871065*^9}, {
  3.6796854959806747`*^9, 3.6796855207450914`*^9}}],

Cell["\<\
which makes everything much more complicated. This form, if correct, implies \
that Hernan actually measured\
\>", "Text",
 CellChangeTimes->{{3.6796855218731556`*^9, 3.6796855628524995`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SubsuperscriptBox["\[Beta]\[Epsilon]", 
      RowBox[{"DNA", ",", 
       SubscriptBox["R", "active"]}], "Hernan"]}]], "\[Congruent]", 
   RowBox[{
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["O", 
        SubscriptBox["N", "NS"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SubscriptBox["\[Beta]\[Epsilon]", 
          RowBox[{"DNA", ",", 
           SubscriptBox["R", "active"]}]]}]]}]}], 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["O", 
        SubscriptBox["N", "NS"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SubscriptBox["\[Beta]\[Epsilon]", 
          RowBox[{"DNA", ",", 
           SubscriptBox["R", "active"]}]]}]]}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubscriptBox["\[Beta]\[Epsilon]", "R"]}]]}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SubscriptBox["\[Beta]\[Epsilon]", 
       RowBox[{"DNA", ",", 
        SubscriptBox["R", "active"]}]]}]]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6796855650666265`*^9, 3.6796855883619585`*^9}}],

Cell[TextData[{
 "This can be solved for the new version of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SubscriptBox["\[Beta]\[Epsilon]", 
      RowBox[{"DNA", ",", 
       SubscriptBox["R", "active"]}]]}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in terms of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SubsuperscriptBox["\[Beta]\[Epsilon]", 
      RowBox[{"DNA", ",", 
       SubscriptBox["R", "active"]}], "Hernan"]}]], TraditionalForm]]],
 " as"
}], "Text",
 CellChangeTimes->{{3.6796856194427366`*^9, 3.6796856361586924`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["E", 
           RowBox[{"-", "\[Beta]\[Epsilon]DNAHernan"}]], "\[Equal]", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "+", 
             RowBox[{
              FractionBox["1", "Nns"], 
              SuperscriptBox["E", 
               RowBox[{"-", "\[Beta]\[Epsilon]DNA"}]]}]}], 
            RowBox[{"1", "+", 
             RowBox[{
              FractionBox["1", "Nns"], 
              SuperscriptBox["E", 
               RowBox[{"-", "\[Beta]\[Epsilon]DNA"}]]}], "+", 
             SuperscriptBox["E", 
              RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], 
           SuperscriptBox["E", 
            RowBox[{"-", "\[Beta]\[Epsilon]DNA"}]]}]}], ",", 
         "\[Beta]\[Epsilon]DNA"}], "]"}], "/.", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]DNA", ">", "0"}]}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Only", " ", "second", " ", "solution", " ", "is", " ", "positive"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"sol1", "=", 
  RowBox[{"Last", "@", 
   RowBox[{"FullSimplify", "[", "sol", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"sol2", "=", 
  RowBox[{"Last", "@", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     SuperscriptBox["E", 
      RowBox[{"-", "\[Beta]\[Epsilon]DNA"}]], "/.", "sol"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"sol2", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Nns", "\[Rule]", 
       RowBox[{"4.6", " ", 
        SuperscriptBox["10", "6"]}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]DNAHernan", "\[Rule]", 
       RowBox[{"-", "13.7"}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]R", "\[Rule]", "4.5"}]}], "}"}]}], 
   "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.679685159589434*^9, 3.6796851919942875`*^9}, {
   3.679685227715331*^9, 3.6796853053207693`*^9}, {3.679685639665893*^9, 
   3.6796856493734484`*^9}, {3.6796857944737473`*^9, 
   3.6796858066534443`*^9}, {3.6796953302601633`*^9, 3.679695331460232*^9}, {
   3.6796953990110955`*^9, 3.6796954040383835`*^9}, 3.679695666712407*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Data Fitting ", "Subsubsection",
 CellChangeTimes->{{3.6796858869940395`*^9, 3.6796858898952055`*^9}, 
   3.6796860843363266`*^9}],

Cell[TextData[{
 "The basic idea is that when you have multiple promoters with copy number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", ">", "1"}], TraditionalForm]]],
 ", the fold-change equation allows you to actually fit the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SubscriptBox["\[Beta]\[Epsilon]", "R"]}]], TraditionalForm]]],
 " parameter, since it shifts the resulting fold-change curve to the right as \
",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "R"], TraditionalForm]]],
 " decreases."
}], "Text",
 CellChangeTimes->{{3.6762088899327765`*^9, 3.676208966627865*^9}, {
  3.676209657914105*^9, 3.6762096628147163`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"fold", "-", "change"}], "=", 
   FractionBox[
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"m", "=", "0"}], 
      RowBox[{"Min", "[", 
       RowBox[{"N", ",", 
        SubscriptBox["R", "eff"]}], "]"}]], 
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["R", "eff"], "!"}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          SubscriptBox["N", "ns"], ")"}], "m"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["R", "eff"], "-", "m"}], ")"}], "!"}]}]], 
      RowBox[{"(", GridBox[{
         {"N"},
         {"m"}
        }], ")"}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "m"}], " ", 
         SubscriptBox["\[Beta]\[Epsilon]", "DNA"]}]], "(", 
       RowBox[{"N", "-", "m"}], ")"}]}]}], 
    RowBox[{"N", 
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"m", "=", "0"}], 
       RowBox[{"Min", "[", 
        RowBox[{"N", ",", 
         SubscriptBox["R", "eff"]}], "]"}]], 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["R", "eff"], "!"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           SubscriptBox["N", "ns"], ")"}], "m"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["R", "eff"], "-", "m"}], ")"}], "!"}]}]], 
       RowBox[{"(", GridBox[{
          {"N"},
          {"m"}
         }], ")"}], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "m"}], " ", 
         SubscriptBox["\[Beta]\[Epsilon]", "DNA"]}]]}]}]}]]}], 
  TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.676209564200675*^9, 3.6762095859085164`*^9}, {
  3.6762096680595284`*^9, 3.6762097122186537`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["R", "eff"], "=", 
   RowBox[{
    SubscriptBox["p", "active"], 
    SubscriptBox["R", "tot"]}]}], TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.676209587739936*^9, 3.6762096051973753`*^9}, {
  3.679686064968219*^9, 3.679686064968219*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "active"], "=", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["O", 
        SubscriptBox["N", "NS"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SubscriptBox["\[Beta]\[Epsilon]", 
          RowBox[{"DNA", ",", 
           SubscriptBox["R", "active"]}]]}]]}]}], 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["O", 
        SubscriptBox["N", "NS"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SubscriptBox["\[Beta]\[Epsilon]", 
          RowBox[{"DNA", ",", 
           SubscriptBox["R", "active"]}]]}]]}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubscriptBox["\[Beta]\[Epsilon]", "R"]}]]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ","
}], "TextNumbered",
 CellChangeTimes->{{3.679685416281116*^9, 3.679685432871065*^9}, {
  3.6796854959806747`*^9, 3.6796855207450914`*^9}}],

Cell[TextData[{
 "Relating this to Hernan\[CloseCurlyQuote]s data where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ","
}], "Text",
 CellChangeTimes->{{3.6796948315476384`*^9, 3.6796948387710514`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SubsuperscriptBox["\[Beta]\[Epsilon]", 
      RowBox[{"DNA", ",", 
       SubscriptBox["R", "active"]}], "Hernan"]}]], "\[Congruent]", 
   RowBox[{
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["1", 
        SubscriptBox["N", "NS"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SubscriptBox["\[Beta]\[Epsilon]", 
          RowBox[{"DNA", ",", 
           SubscriptBox["R", "active"]}]]}]]}]}], 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["1", 
        SubscriptBox["N", "NS"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SubscriptBox["\[Beta]\[Epsilon]", 
          RowBox[{"DNA", ",", 
           SubscriptBox["R", "active"]}]]}]]}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubscriptBox["\[Beta]\[Epsilon]", "R"]}]]}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SubscriptBox["\[Beta]\[Epsilon]", 
       RowBox[{"DNA", ",", 
        SubscriptBox["R", "active"]}]]}]]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6796855650666265`*^9, 3.6796855883619585`*^9}, {
  3.6796948271453867`*^9, 3.679694829370514*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Code", "Subsection",
 CellChangeTimes->{{3.676209726226302*^9, 3.6762097266007023`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Plotting the form of fold-change (same as in preivous set of notes)\
\>", "Subsubsection",
 CellChangeTimes->{{3.679694925306001*^9, 3.679694936935666*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"foldChange", "[", 
   RowBox[{
   "n_", ",", "r_", ",", "\[Beta]\[Epsilon]R_", ",", 
    "\[Beta]\[Epsilon]HernanDNA_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rEff", "=", 
       RowBox[{
        FractionBox["1.", 
         RowBox[{"1.", "+", 
          SuperscriptBox["E", 
           RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "r"}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]DNA", "=", 
       RowBox[{"\[Beta]\[Epsilon]HernanDNA", "+", 
        RowBox[{"Log", "[", 
         FractionBox["1.", 
          RowBox[{"1.", "+", 
           SuperscriptBox["E", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "]"}]}]}], ",", 
      RowBox[{"nNS", "=", 
       RowBox[{"4.6", " ", 
        SuperscriptBox["10", "6."]}]}], ",", 
      RowBox[{"e", "=", "E"}]}], 
     RowBox[{"(*", 
      RowBox[{"N", "[", "E", "]"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
    FractionBox[
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"rEff", "!"}], 
         RowBox[{
          SuperscriptBox["nNS", "m"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
        RowBox[{"Binomial", "[", 
         RowBox[{"n", ",", "m"}], "]"}], 
        SuperscriptBox["e", 
         RowBox[{
          RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "m"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0.", ",", 
         RowBox[{"Min", "[", 
          RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}], 
     RowBox[{"n", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"rEff", "!"}], 
          RowBox[{
           SuperscriptBox["nNS", "m"], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
         RowBox[{"Binomial", "[", 
          RowBox[{"n", ",", "m"}], "]"}], 
         SuperscriptBox["e", 
          RowBox[{
           RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0.", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}]}]]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762101552341695`*^9, 3.676210181231657*^9}, {
   3.676210241006076*^9, 3.6762103500653133`*^9}, {3.6762103946888657`*^9, 
   3.6762104000481725`*^9}, {3.676210480674051*^9, 3.676210483477211*^9}, {
   3.676210517238142*^9, 3.676210517266144*^9}, {3.6762105913923836`*^9, 
   3.6762106008649254`*^9}, {3.6762106430253367`*^9, 3.6762106609433613`*^9}, 
   3.676210975135332*^9, {3.676211084910611*^9, 3.6762110993264356`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Plot", " ", "has", " ", "a", " ", "hard", " ", "time", " ", "with", " ", 
     "this", " ", "function"}], ",", " ", 
    RowBox[{
    "because", " ", "the", " ", "Min", " ", "naturally", " ", "makes", " ", 
     "the", " ", "plot", " ", "bumpy"}], ",", " ", 
    RowBox[{
    "which", " ", "is", " ", "hard", " ", "to", " ", "calculate", " ", 
     "precisely"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"foldChange", "[", 
        RowBox[{"10.", ",", "r", ",", 
         RowBox[{"-", "2."}], ",", 
         RowBox[{"-", "17."}]}], "]"}], ",", 
       RowBox[{"foldChange", "[", 
        RowBox[{"10.", ",", "r", ",", "2.", ",", 
         RowBox[{"-", "17."}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       SuperscriptBox["10", "0"], ",", 
       SuperscriptBox["10", "3"]}], "}"}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.676210612360583*^9, 3.676210628525508*^9}, {
  3.676210730477339*^9, 3.676210739309844*^9}, {3.67621121671815*^9, 
  3.6762112395804577`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]Values", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2", ",", "1", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "10"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", "rLog"], ",", 
       RowBox[{"foldChange", "[", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", "17"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]\[Epsilon]R", ",", "\[Beta]\[Epsilon]Values"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"relabel", "@", 
  RowBox[{"ListLogLogPlot", "[", 
   RowBox[{"data", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Beta]\[Epsilon]\), \(R\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "#"}]}], "&"}], "/@", 
       "\[Beta]\[Epsilon]Values"}], ")"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"font", "[", 
         RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<Repressor Copy Number\>\"", ",", "\"\<Fold-Change\>\""}],
         "}"}]}], ")"}]}], ",", "opts"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.676210371720552*^9, 3.6762103828291874`*^9}, {
  3.676210424765586*^9, 3.67621050881266*^9}, {3.6762110058700905`*^9, 
  3.676211049677596*^9}, {3.6762111155853653`*^9, 3.676211193421818*^9}, {
  3.676211251262126*^9, 3.67621126094168*^9}, {3.6762112933765345`*^9, 
  3.6762112938235607`*^9}, {3.676246384467571*^9, 3.676246391206783*^9}, {
  3.6762464296452503`*^9, 3.676246429941651*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]Values", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2", ",", "1", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "10"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "\[Beta]\[Epsilon]Values"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Beta]\[Epsilon]\), \(R\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", "#"}]}], "&"}], "/@", 
        "\[Beta]\[Epsilon]Values"}], ")"}]}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.2"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", "rLog"], ",", 
       RowBox[{"foldChange", "[", 
        RowBox[{"10", ",", 
         SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", "17"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]\[Epsilon]R", ",", "\[Beta]\[Epsilon]Values"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<Repressor Copy Number\>\"", ",", "\"\<Fold-Change\>\""}], 
       "}"}]}], ")"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LogTicks", "[", 
       RowBox[{
        SuperscriptBox["10", "0"], ",", 
        SuperscriptBox["10", "3"], ",", 
        RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
      RowBox[{"LogTicks", "[", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]], ",", 
        SuperscriptBox["10", "0"], ",", 
        RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], "}"}]}], ",", 
   "opts"}], "]"}]}], "Input",
 CellChangeTimes->{{3.676210371720552*^9, 3.6762103828291874`*^9}, {
  3.676210424765586*^9, 3.67621050881266*^9}, {3.6762110058700905`*^9, 
  3.676211049677596*^9}, {3.6762111155853653`*^9, 3.676211193421818*^9}, {
  3.676211251262126*^9, 3.67621126094168*^9}, {3.6762112933765345`*^9, 
  3.6762112938235607`*^9}, {3.676246384467571*^9, 3.676246391206783*^9}, {
  3.6762464296452503`*^9, 3.676246573376705*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["1st try - Fitting together and without error", "Subsubsection",
 CellChangeTimes->{{3.6762139319123106`*^9, 3.6762139391471243`*^9}, {
  3.676227773388913*^9, 3.6762277819003997`*^9}, {3.6762279917404013`*^9, 
  3.676227997356723*^9}, {3.6762280983324986`*^9, 3.6762281069409904`*^9}, {
  3.6762296484448743`*^9, 3.676229657436389*^9}, {3.679695073567481*^9, 
  3.679695075014564*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\Presentations\\\\Neat \
Stuff\\\\Great Figures\\\\Phillips group transcription\\\\Franz Brewster Fold \
Change.xlsx\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"acquire", "[", 
    RowBox[{"rawData", ",", "index", ",", "\"\<Repressor Copy number\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"foldChange", "[", 
   RowBox[{
   "n_", ",", "r_", ",", "\[Beta]\[Epsilon]R_", ",", 
    "\[Beta]\[Epsilon]HernanDNA_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nNS", "=", 
      RowBox[{"4.6", " ", 
       SuperscriptBox["10", "6."]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]DNA", "=", 
        RowBox[{"Log", "[", 
         FractionBox["1", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", "\[Beta]\[Epsilon]R"]}], ")"}],
            " ", "nNS"}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "\[Beta]\[Epsilon]R"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{
               
               SuperscriptBox["\[ExponentialE]", 
                "\[Beta]\[Epsilon]HernanDNA"], " ", "nNS"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Beta]\[Epsilon]R", "/", "2"}]], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "\[Beta]\[Epsilon]R"], "+", 
              RowBox[{"2", " ", 
               
               SuperscriptBox["\[ExponentialE]", 
                "\[Beta]\[Epsilon]HernanDNA"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 SuperscriptBox["\[ExponentialE]", "\[Beta]\[Epsilon]R"]}], 
                ")"}], " ", "nNS"}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"2", " ", "\[Beta]\[Epsilon]HernanDNA"}], "+", 
                 "\[Beta]\[Epsilon]R"}]], " ", 
               SuperscriptBox["nNS", "2"]}]}]]}]}], ")"}], "]"}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rEff", "=", 
           RowBox[{
            FractionBox[
             RowBox[{"1.", "+", 
              RowBox[{
               FractionBox["n", "nNS"], 
               SuperscriptBox["E", 
                RowBox[{"-", "\[Beta]\[Epsilon]DNA"}]]}]}], 
             RowBox[{"1.", "+", 
              RowBox[{
               FractionBox["n", "nNS"], 
               SuperscriptBox["E", 
                RowBox[{"-", "\[Beta]\[Epsilon]DNA"}]]}], "+", 
              SuperscriptBox["E", 
               RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}]], "r"}]}], ",", 
          RowBox[{"e", "=", 
           RowBox[{"N", "[", "E", "]"}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        FractionBox[
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{"rEff", "!"}], 
             RowBox[{
              SuperscriptBox["nNS", "m"], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
            RowBox[{"Binomial", "[", 
             RowBox[{"n", ",", "m"}], "]"}], 
            SuperscriptBox["e", 
             RowBox[{
              RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]], 
            RowBox[{"(", 
             RowBox[{"n", "-", "m"}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "0.", ",", 
             RowBox[{"Min", "[", 
              RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}], 
         RowBox[{"n", " ", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"rEff", "!"}], 
              RowBox[{
               SuperscriptBox["nNS", "m"], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"rEff", "-", "m"}], ")"}], "!"}]}]], 
             RowBox[{"Binomial", "[", 
              RowBox[{"n", ",", "m"}], "]"}], 
             SuperscriptBox["e", 
              RowBox[{
               RowBox[{"-", "m"}], " ", "\[Beta]\[Epsilon]DNA"}]]}], ",", 
            RowBox[{"{", 
             RowBox[{"m", ",", "0.", ",", 
              RowBox[{"Min", "[", 
               RowBox[{"n", ",", "rEff"}], "]"}]}], "}"}]}], "]"}]}]]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762155423758736`*^9, 3.676215588119163*^9}, {
  3.676227857296712*^9, 3.6762278841432476`*^9}, {3.6796954652538843`*^9, 
  3.679695515431754*^9}, {3.679695720228468*^9, 3.6796957762706738`*^9}, {
  3.6796958147668753`*^9, 3.679695855809223*^9}, {3.6796958937933955`*^9, 
  3.679695900046753*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]R", "=", "4.525127"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"64", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"52", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "17."}]}], "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9, {
   3.6762306411666546`*^9, 3.6762306416456823`*^9}, {3.6762306917765493`*^9, 
   3.676230697174858*^9}, 3.676230736686118*^9, {3.6762308980943503`*^9, 
   3.6762309014865446`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"font", "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64\>\"", ",", 
      "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52\>\"", ",", 
      "\"\<Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"PointLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "@", "3"}]}], ",", "labels", ",", 
     RowBox[{"LegendMarkers", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "Medium", "]"}], ",", "White"}], 
                "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"White", ",", "Thin", ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}],
             "]"}], ",", "0.03"}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "@", "4"}]}], ")"}]}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.4"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"plot1", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"ListLogLogPlot", "[", 
         RowBox[{"newData", ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"Placed", "[", 
            RowBox[{"leg", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Scaled", "[", 
                RowBox[{"{", 
                 RowBox[{"0.05", ",", "0.3"}], "}"}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}], 
          ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"font", "[", 
               RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Repressor Copy Number\>\"", ",", "\"\<Fold-Change\>\""}], 
              "}"}]}], ")"}]}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"LogTicks", "[", 
              RowBox[{
               SuperscriptBox["10", "0"], ",", 
               SuperscriptBox["10", "4"], ",", 
               RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
             RowBox[{"LogTicks", "[", 
              RowBox[{
               SuperscriptBox["10", 
                RowBox[{"-", "5"}]], ",", 
               SuperscriptBox["10", "1"], ",", 
               RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], 
            "}"}]}], ",", "opts"}], "]"}], ",", 
        RowBox[{"ListLogLogPlot", "[", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"9", ";;", "11"}], "]"}], "]"}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                  "}"}], "]"}], ",", 
                RowBox[{"Disk", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
               "}"}], "]"}], ",", "0.03"}], "}"}]}]}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "aLabel", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Top", ",", "Left"}], "}"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.67623097134054*^9, 3.6762311396551666`*^9}, {
  3.67624621303887*^9, 3.676246223412888*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", "9", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullData1", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"64.", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "15.3"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "d"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", "10", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullData2", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"52.", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "15.3"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "d"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", "11", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullData3", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"10.", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "17."}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "d"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "d"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fullData", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fullData1", ",", "fullData2", ",", "fullData3"}], "}"}], ",", 
     "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6762297138526154`*^9, 3.6762298527075577`*^9}, {
  3.676230147904442*^9, 3.6762301567969503`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"fullData", ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{
       "nn", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        "\[Epsilon]\[Epsilon]"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", "4.5"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"nn", ",", "\[Epsilon]\[Epsilon]", ",", "R"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, 
   3.6762280260953665`*^9, {3.676229862046092*^9, 3.676229935358285*^9}, {
   3.676230281757098*^9, 3.6762302822371254`*^9}}],

Cell["But what if we look at other starting values of \[Beta]\[Epsilon]R?", \
"Text",
 CellChangeTimes->{{3.679696930414687*^9, 3.6796969394482036`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"fullData", ",", 
     RowBox[{"{", 
      RowBox[{"foldChange", "[", 
       RowBox[{
       "nn", ",", "R", ",", "\[Beta]\[Epsilon]R", ",", 
        "\[Epsilon]\[Epsilon]"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]\[Epsilon]R", ",", 
        RowBox[{"-", "0.1"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"nn", ",", "\[Epsilon]\[Epsilon]", ",", "R"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6762172069950676`*^9, 3.676217237609727*^9}, 
   3.6762280260953665`*^9, {3.676229862046092*^9, 3.676229935358285*^9}, {
   3.676230281757098*^9, 3.6762302822371254`*^9}, {3.679696945609556*^9, 
   3.6796969460725822`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"fit", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"NonlinearModelFit", "[", 
         RowBox[{"fullData", ",", 
          RowBox[{"{", 
           RowBox[{"foldChange", "[", 
            RowBox[{"nn", ",", "R", ",", "jj", ",", "\[Epsilon]\[Epsilon]"}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"\[Beta]\[Epsilon]R", ",", "1."}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"nn", ",", "\[Epsilon]\[Epsilon]", ",", "R"}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"jj", ",", 
        RowBox[{"fit", "[", "\"\<RSquared\>\"", "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", 
       RowBox[{"-", "5."}], ",", "5.", ",", "1.0"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"fitData", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676229954636388*^9, 3.676230044141507*^9}, {
   3.6762300910381894`*^9, 3.6762300927892895`*^9}, {3.6762301632653203`*^9, 
   3.676230213422189*^9}, 3.6762302569256773`*^9, 3.6762303015842323`*^9, {
   3.679696096408984*^9, 3.6796961001972013`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Subsubsection",
 CellChangeTimes->{{3.6762139319123106`*^9, 3.6762139391471243`*^9}, {
   3.676227773388913*^9, 3.6762277819003997`*^9}, {3.6762279917404013`*^9, 
   3.676227997356723*^9}, {3.6762280983324986`*^9, 3.6762281069409904`*^9}, {
   3.6762296484448743`*^9, 3.676229657436389*^9}, {3.676229691533339*^9, 
   3.676229694364501*^9}, {3.679694949264372*^9, 3.6796949496033907`*^9}, {
   3.679695070470304*^9, 3.6796950717183757`*^9}, 3.679696980839571*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "file", "=", 
   "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\Presentations\\\\Neat \
Stuff\\\\Great Figures\\\\Phillips group transcription\\\\Franz Brewster Fold \
Change.xlsx\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"Import", "[", "file", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"acquire", "[", 
    RowBox[{"rawData", ",", "index", ",", "\"\<Repressor Copy number\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9, {
   3.676228144798156*^9, 3.676228147980338*^9}, {3.679694954712683*^9, 
   3.67969498280229*^9}, {3.6796963901077833`*^9, 3.679696394359026*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]R", "=", "5.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"64", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"52", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "17."}]}], "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"font", "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64\>\"", ",", 
      "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52\>\"", ",", 
      "\"\<Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"PointLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "@", "3"}]}], ",", "labels", ",", 
     RowBox[{"LegendMarkers", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "Medium", "]"}], ",", "White"}], 
                "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"White", ",", "Thin", ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}],
             "]"}], ",", "0.03"}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "@", "4"}]}], ")"}]}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.4"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"plot1", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListLogLogPlot", "[", 
       RowBox[{"newData", ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{"leg", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.05", ",", "0.3"}], "}"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Beta]\[Epsilon]\), \(R\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "[", "\[Beta]\[Epsilon]R", "]"}]}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"font", "[", 
             RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Repressor Copy Number\>\"", ",", "\"\<Fold-Change\>\""}], 
            "}"}]}], ")"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LogTicks", "[", 
            RowBox[{
             SuperscriptBox["10", "0"], ",", 
             SuperscriptBox["10", "4"], ",", 
             RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
           RowBox[{"LogTicks", "[", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]], ",", 
             SuperscriptBox["10", "1"], ",", 
             RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], "}"}]}], 
        ",", "opts"}], "]"}], ",", 
      RowBox[{"ListLogLogPlot", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"9", ";;", "11"}], "]"}], "]"}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                "}"}], "]"}], ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}],
             "]"}], ",", "0.03"}], "}"}]}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9, {
   3.676230587437582*^9, 3.6762305893596916`*^9}, {3.6762312283832417`*^9, 
   3.676231232878499*^9}, {3.679696063394096*^9, 3.6796960636981134`*^9}, 
   3.679696319439741*^9, {3.679696469703336*^9, 3.6796964699233484`*^9}, {
   3.679696990023096*^9, 3.679697004401919*^9}, {3.6796970370207844`*^9, 
   3.6796970375178127`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]R", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"64", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"52", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "15.3"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "rLog"], ",", 
          RowBox[{"foldChange", "[", 
           RowBox[{"10", ",", 
            SuperscriptBox["10", "rLog"], ",", "\[Beta]\[Epsilon]R", ",", 
            RowBox[{"-", "17."}]}], "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rLog", ",", "0", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"font", "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=64\>\"", ",", 
      "\"\<O1, \!\(\*SubscriptBox[\(N\), \(s\)]\)=52\>\"", ",", 
      "\"\<Oid, \!\(\*SubscriptBox[\(N\), \(s\)]\)=10\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"PointLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "@", "3"}]}], ",", "labels", ",", 
     RowBox[{"LegendMarkers", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "Medium", "]"}], ",", "White"}], 
                "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"White", ",", "Thin", ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}],
             "]"}], ",", "0.03"}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "@", "4"}]}], ")"}]}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.4"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"plot2", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListLogLogPlot", "[", 
       RowBox[{"newData", ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{"leg", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.05", ",", "0.3"}], "}"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Beta]\[Epsilon]\), \(R\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "[", "\[Beta]\[Epsilon]R", "]"}]}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"font", "[", 
             RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Repressor Copy Number\>\"", ",", "\"\<Fold-Change\>\""}], 
            "}"}]}], ")"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LogTicks", "[", 
            RowBox[{
             SuperscriptBox["10", "0"], ",", 
             SuperscriptBox["10", "4"], ",", 
             RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
           RowBox[{"LogTicks", "[", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]], ",", 
             SuperscriptBox["10", "1"], ",", 
             RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], "}"}]}], 
        ",", "opts"}], "]"}], ",", 
      RowBox[{"ListLogLogPlot", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"9", ";;", "11"}], "]"}], "]"}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                "}"}], "]"}], ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}],
             "]"}], ",", "0.03"}], "}"}]}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.676214159762397*^9, 3.6762142475626574`*^9}, 
   3.676214293707146*^9, {3.6762143275112114`*^9, 3.676214374233307*^9}, {
   3.6762144043217635`*^9, 3.6762144064901676`*^9}, {3.6762144466145544`*^9, 
   3.6762145733852615`*^9}, {3.6762146140547757`*^9, 
   3.6762146420596313`*^9}, {3.676214806502666*^9, 3.6762148206048927`*^9}, {
   3.6762148776748533`*^9, 3.6762149206747065`*^9}, 3.6762277960452085`*^9, {
   3.676230587437582*^9, 3.6762305893596916`*^9}, {3.6762312283832417`*^9, 
   3.676231232878499*^9}, {3.679696063394096*^9, 3.6796960636981134`*^9}, 
   3.679696319439741*^9, {3.679696469703336*^9, 3.6796964699233484`*^9}, {
   3.679696990023096*^9, 3.679697010805285*^9}, {3.6796970410750165`*^9, 
   3.6796970415660443`*^9}}],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"plot1", ",", "plot2"}], "}"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6796970425951033`*^9, 3.679697045025242*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stephanie FACS Data", "Section",
 CellChangeTimes->{{3.6755216752900553`*^9, 3.675521678936863*^9}}],

Cell[CellGroupData[{

Cell["Importing Data", "Subsubsection",
 CellChangeTimes->{{3.6755224229254956`*^9, 3.6755224297027106`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\MWC Mutants - Rob \
Phillips - Started 2014-11-05, Put on Hold 2015-01-11, Resumed \
2015-02-09\\\\Discussions\\\\2016-06-18 Stephanie Data - O2 HG104 and \
1027.xlsx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6755200247684536`*^9, 3.6755200450827503`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"acquire", "[", 
    RowBox[{"rawData", ",", "index", ",", "\"\<[IPTG]\>\""}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.675520096023035*^9, 3.675520097592038*^9}, {
   3.6755201434612837`*^9, 3.6755201675913315`*^9}, 3.6755212713190837`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"convertString", ",", 
    RowBox[{"{", "Listable", "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"convertString", "[", "\"\<\>\"", "]"}], ":=", 
  "\"\<\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"convertString", "[", "str_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "unit", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{"StringTake", "[", 
        RowBox[{"str", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "\"\<nM\>\"", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "9."}]], ",", "\"\<uM\>\"", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "6."}]], ",", "\"\<mM\>\"", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "3."}]]}], "]"}], "*", 
     RowBox[{"ToExpression", "@", 
      RowBox[{"StringTrim", "@", 
       RowBox[{"StringTake", "[", 
        RowBox[{"str", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "]"}]}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"convertString", "[", "num_Real", "]"}], ":=", "num"}]}], "Input",
 CellChangeTimes->{{3.6755203235656385`*^9, 3.6755203629604025`*^9}, {
  3.675520478221647*^9, 3.6755204837818604`*^9}, {3.675520550272371*^9, 
  3.675520608820675*^9}, {3.675520639673929*^9, 3.675520653183553*^9}, {
  3.675520692567034*^9, 3.675520692990235*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"data2", "=", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"convertString", "@", "data"}], ",", 
      RowBox[{"{", 
       RowBox[{"_", ",", "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Partition", " ", "off", " ", "individuals", " ", "strains"}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"HG104", ",", "RBS1027"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"data2", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "1"}], "]"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"data2", "[", 
        RowBox[{"[", 
         RowBox[{"4", ";;", "6"}], "]"}], "]"}], ",", "1"}], "]"}]}], "}"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.6755206117066793`*^9, 3.675520657946562*^9}, {
  3.675520714124694*^9, 3.6755207561697726`*^9}, {3.675521351354643*^9, 
  3.6755214048451586`*^9}, {3.6756235601906614`*^9, 3.675623562561266*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"PointLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<HG 104\>\"", ",", "\"\<RBS 1027\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"HG104", ",", "RBS1027"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{
     RowBox[{"ColorData", "[", "97", "]"}], "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<HG 104\>\"", ",", "\"\<RBS 1027\>\""}], "}"}], ",", 
      RowBox[{"Scaled", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.25", ",", "0.65"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6755207571525745`*^9, 3.6755209214791517`*^9}, 
   3.675521081766003*^9, {3.67552141634978*^9, 3.675521423965395*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Fitting Data - Trying ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]\[Epsilon]", "R"], "=", "5"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " from Stephanie\[CloseCurlyQuote]s brilliant idea"
}], "Subsubsection",
 CellChangeTimes->{{3.675521328604938*^9, 3.675521329868946*^9}, {
  3.675522137574316*^9, 3.6755221537619457`*^9}, {3.6755228278308077`*^9, 
  3.6755228445556407`*^9}, {3.6755236558730946`*^9, 3.6755236569660964`*^9}, {
  3.676249306564581*^9, 3.6762493210644255`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"c", ",", "fitFunction2"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Fold", " ", "change", " ", "formula", " ", "with", " ", "square", " ", 
    "exponents"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitFunction2", "[", "R_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nns", "=", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]O2", "=", 
        RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox["c", "KI"]}], ")"}], "2"]}]}]], 
        FractionBox[
         RowBox[{"2", "R"}], "Nns"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.67552146134391*^9, 3.6755216269947414`*^9}, {
  3.675521822001994*^9, 3.6755218583482647`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullRData", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"11", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "HG104"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"130", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "RBS1027"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.675522168705173*^9, 3.6755222513349447`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"fullRData", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"fitFunction2", "[", "R", "]"}], "/.", 
       RowBox[{"\[Beta]\[Epsilon]R", "\[Rule]", "5."}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KA", "\[Rule]", 
         SuperscriptBox["E", "KAlog"]}], ",", 
        RowBox[{"KI", "\[Rule]", 
         SuperscriptBox["E", "KIlog"]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"KAlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "4"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KIlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"6.2", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]]}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "c"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6755222641373687`*^9, 3.675522284532609*^9}, {
  3.675522317529275*^9, 3.675522364931573*^9}, {3.6762493428464775`*^9, 
  3.676249415825261*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]\[Epsilon]R", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"fullRData", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"fitFunction2", "[", "R", "]"}], "/.", 
       RowBox[{"\[Beta]\[Epsilon]R", "\[Rule]", "4.5"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KA", "\[Rule]", 
         SuperscriptBox["E", "KAlog"]}], ",", 
        RowBox[{"KI", "\[Rule]", 
         SuperscriptBox["E", "KIlog"]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"KAlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "4"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KIlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"6.2", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]]}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "c"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6755222641373687`*^9, 3.675522284532609*^9}, {
   3.675522317529275*^9, 3.675522364931573*^9}, {3.6762493428464775`*^9, 
   3.676249420573881*^9}, 3.67624945594698*^9, {3.6762494958900805`*^9, 
   3.6762495023043003`*^9}, {3.6762495647818623`*^9, 3.676249565125063*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scientificNotation", "[", "x_", "]"}], ":=", 
  RowBox[{"ScientificForm", "[", 
   RowBox[{"x", ",", "3", ",", 
    RowBox[{"ExponentFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[LessEqual]", "#", "\[LessEqual]", "2"}], ",",
          "Null", ",", 
         RowBox[{"3", 
          RowBox[{"Quotient", "[", 
           RowBox[{"#", ",", "3"}], "]"}]}]}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"scientificNotation", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["E", "KAlog"], ",", 
         SuperscriptBox["E", "KIlog"], ",", "\[Beta]\[Epsilon]R"}], "}"}], "/.", 
       RowBox[{"\[Beta]\[Epsilon]R", "\[Rule]", "4.5"}]}], "/.", 
      RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"parameters2", "=", 
  RowBox[{"TextGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<A\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<I\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"font", "@", "\"\<\[Beta]\[Epsilon]\>\""}]}], "}"}], ",", 
      "values"}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Lighter", "[", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], "]"}], 
        "}"}], ",", "White"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6750174072110977`*^9, 3.6750174206978693`*^9}, {
   3.675017658735484*^9, 3.6750179967138157`*^9}, {3.675018030445745*^9, 
   3.675018051764964*^9}, {3.675115067745572*^9, 3.6751151125181327`*^9}, 
   3.6751908629966793`*^9, {3.6752015610949287`*^9, 3.675201578844962*^9}, {
   3.675522503625102*^9, 3.675522555153635*^9}, {3.6755226337190075`*^9, 
   3.6755226416862288`*^9}, 3.675522936783037*^9, {3.676249574064288*^9, 
   3.6762495747058897`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fitting Data with n=2 - Using only RBS 1027 from last time to predict WT - \
seems to work well\
\>", "Subsubsection",
 CellChangeTimes->{{3.675521328604938*^9, 3.675521329868946*^9}, {
  3.675522137574316*^9, 3.675522146933733*^9}, {3.675523670543125*^9, 
  3.6755236717463274`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"c", ",", "fitFunction2"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Fold", " ", "change", " ", "formula", " ", "with", " ", "square", " ", 
    "exponents"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitFunction2", "[", "R_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nns", "=", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]O2", "=", 
        RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox["c", "KI"]}], ")"}], "2"]}]}]], 
        FractionBox[
         RowBox[{"2", "R"}], "Nns"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.67552146134391*^9, 3.6755216269947414`*^9}, {
  3.675521822001994*^9, 3.6755218583482647`*^9}}],

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"KA", "=", 
       RowBox[{"1.5", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}]}], ",", 
      RowBox[{"KI", "=", 
       RowBox[{"6.2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]R", "=", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "55.", "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plots", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"fitFunction2", "[", "11", "]"}], ",", 
         RowBox[{"fitFunction2", "[", "130", "]"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{"plots", ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "9"}]], ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "2"}]]}], "}"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)=2, Using RBS 1027 to fit HG 104\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "size"}]}], "]"}], ",", 
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"HG104", ",", "RBS1027"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "/@", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}]}], ",", 
         RowBox[{"PlotMarkers", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EdgeForm", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                 "}"}], "]"}], ",", 
               RowBox[{"Disk", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
              "}"}], "]"}], ",", "0.03"}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<HG 104\>\"", ",", "\"\<RBS 1027\>\""}], "}"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.25", ",", "0.65"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
           "]"}]}]}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6755219546576834`*^9, 3.675522094369986*^9}, {
  3.6755226007593393`*^9, 3.675522612715163*^9}, {3.675522766634487*^9, 
  3.6755227668996873`*^9}, {3.67552357832594*^9, 3.6755235790903416`*^9}, {
  3.6755239942926617`*^9, 3.67552402293992*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scientificNotation", "[", "x_", "]"}], ":=", 
  RowBox[{"ScientificForm", "[", 
   RowBox[{"x", ",", "3", ",", 
    RowBox[{"ExponentFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[LessEqual]", "#", "\[LessEqual]", "2"}], ",",
          "Null", ",", 
         RowBox[{"3", 
          RowBox[{"Quotient", "[", 
           RowBox[{"#", ",", "3"}], "]"}]}]}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"scientificNotation", "/@", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KA", "=", 
         RowBox[{"1.5", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "4"}]]}]}], ",", 
        RowBox[{"KI", "=", 
         RowBox[{"6.2", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}]}], ",", 
        RowBox[{"\[Beta]\[Epsilon]R", "=", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "55.", "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"KA", ",", "KI", ",", "\[Beta]\[Epsilon]R"}], "}"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"parameters1", "=", 
  RowBox[{"TextGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<A\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<I\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"font", "@", "\"\<\[Beta]\[Epsilon]\>\""}]}], "}"}], ",", 
      "values"}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Lighter", "[", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], "]"}], 
        "}"}], ",", "White"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6750174072110977`*^9, 3.6750174206978693`*^9}, {
   3.675017658735484*^9, 3.6750179967138157`*^9}, {3.675018030445745*^9, 
   3.675018051764964*^9}, {3.675115067745572*^9, 3.6751151125181327`*^9}, 
   3.6751908629966793`*^9, {3.6752015610949287`*^9, 3.675201578844962*^9}, {
   3.675522503625102*^9, 3.675522555153635*^9}, {3.6755226337190075`*^9, 
   3.6755226416862288`*^9}, {3.6755226786545005`*^9, 3.6755227038057537`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitting Data - Fitting all data with n=2", "Subsubsection",
 CellChangeTimes->{{3.675521328604938*^9, 3.675521329868946*^9}, {
  3.675522137574316*^9, 3.6755221537619457`*^9}, {3.675523657731498*^9, 
  3.6755236590117*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"c", ",", "fitFunction2"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Fold", " ", "change", " ", "formula", " ", "with", " ", "square", " ", 
    "exponents"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitFunction2", "[", "R_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nns", "=", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]O2", "=", 
        RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox["c", "KI"]}], ")"}], "2"]}]}]], 
        FractionBox[
         RowBox[{"2", "R"}], "Nns"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.67552146134391*^9, 3.6755216269947414`*^9}, {
  3.675521822001994*^9, 3.6755218583482647`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullRData", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"11", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "HG104"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"130", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "RBS1027"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.675522168705173*^9, 3.6755222513349447`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"fullRData", ",", 
     RowBox[{
      RowBox[{"fitFunction2", "[", "R", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KA", "\[Rule]", 
         SuperscriptBox["E", "KAlog"]}], ",", 
        RowBox[{"KI", "\[Rule]", 
         SuperscriptBox["E", "KIlog"]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"KAlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "4"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KIlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"6.2", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "55.", "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "c"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6755222641373687`*^9, 3.675522284532609*^9}, {
  3.675522317529275*^9, 3.675522364931573*^9}}],

Cell[BoxData[
 RowBox[{"plot2", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"KA", "=", 
       RowBox[{"1.5", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}]}], ",", 
      RowBox[{"KI", "=", 
       RowBox[{"6.2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]R", "=", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "55.", "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plots", "=", 
      RowBox[{
       RowBox[{"Normal", "@", "fit"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"R", "\[Rule]", "11"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"R", "\[Rule]", "130"}], "}"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{"plots", ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "9"}]], ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "2"}]]}], "}"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Fitting All Data\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"HG104", ",", "RBS1027"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "/@", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}]}], ",", 
         RowBox[{"PlotMarkers", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EdgeForm", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                 "}"}], "]"}], ",", 
               RowBox[{"Disk", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
              "}"}], "]"}], ",", "0.03"}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<HG 104\>\"", ",", "\"\<RBS 1027\>\""}], "}"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.25", ",", "0.65"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
           "]"}]}]}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6755219546576834`*^9, 3.675522094369986*^9}, {
  3.6755223868008194`*^9, 3.67552240577966*^9}, {3.6755225731950736`*^9, 
  3.67552259189892*^9}, {3.6755227434406385`*^9, 3.6755227585604706`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scientificNotation", "[", "x_", "]"}], ":=", 
  RowBox[{"ScientificForm", "[", 
   RowBox[{"x", ",", "3", ",", 
    RowBox[{"ExponentFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[LessEqual]", "#", "\[LessEqual]", "2"}], ",",
          "Null", ",", 
         RowBox[{"3", 
          RowBox[{"Quotient", "[", 
           RowBox[{"#", ",", "3"}], "]"}]}]}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"scientificNotation", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["E", "KAlog"], ",", 
        SuperscriptBox["E", "KIlog"], ",", "\[Beta]\[Epsilon]R"}], "}"}], "/.", 
      RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"parameters2", "=", 
  RowBox[{"TextGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<A\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<I\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"font", "@", "\"\<\[Beta]\[Epsilon]\>\""}]}], "}"}], ",", 
      "values"}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Lighter", "[", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], "]"}], 
        "}"}], ",", "White"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6750174072110977`*^9, 3.6750174206978693`*^9}, {
   3.675017658735484*^9, 3.6750179967138157`*^9}, {3.675018030445745*^9, 
   3.675018051764964*^9}, {3.675115067745572*^9, 3.6751151125181327`*^9}, 
   3.6751908629966793`*^9, {3.6752015610949287`*^9, 3.675201578844962*^9}, {
   3.675522503625102*^9, 3.675522555153635*^9}, {3.6755226337190075`*^9, 
   3.6755226416862288`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Fitting Data - Fitting all data with n=2 - Adjusting \[Beta]\[Epsilon]R to be \
reasonable\
\>", "Subsubsection",
 CellChangeTimes->{{3.675521328604938*^9, 3.675521329868946*^9}, {
  3.675522137574316*^9, 3.6755221537619457`*^9}, {3.6755228278308077`*^9, 
  3.6755228445556407`*^9}, {3.6755236558730946`*^9, 3.6755236569660964`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"c", ",", "fitFunction2"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Fold", " ", "change", " ", "formula", " ", "with", " ", "square", " ", 
    "exponents"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitFunction2", "[", "R_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nns", "=", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]O2", "=", 
        RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox["c", "KI"]}], ")"}], "2"]}]}]], 
        FractionBox[
         RowBox[{"2", "R"}], "Nns"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.67552146134391*^9, 3.6755216269947414`*^9}, {
  3.675521822001994*^9, 3.6755218583482647`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullRData", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"11", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "HG104"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"130", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "RBS1027"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.675522168705173*^9, 3.6755222513349447`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"fullRData", ",", 
     RowBox[{
      RowBox[{"fitFunction2", "[", "R", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KA", "\[Rule]", 
         SuperscriptBox["E", "KAlog"]}], ",", 
        RowBox[{"KI", "\[Rule]", 
         SuperscriptBox["E", "KIlog"]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"KAlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "4"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KIlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"6.2", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "55.", "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "c"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6755222641373687`*^9, 3.675522284532609*^9}, {
  3.675522317529275*^9, 3.675522364931573*^9}}],

Cell[BoxData[
 RowBox[{"plot2", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"KA", "=", 
       RowBox[{"1.5", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}]}], ",", 
      RowBox[{"KI", "=", 
       RowBox[{"6.2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]R", "=", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "55.", "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plots", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"fitFunction2", "[", "R", "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"KA", "\[Rule]", 
             SuperscriptBox["E", "KAlog"]}], ",", 
            RowBox[{"KI", "\[Rule]", 
             SuperscriptBox["E", "KIlog"]}]}], "}"}]}], "/.", 
         RowBox[{"\[Beta]\[Epsilon]R", "\[Rule]", 
          RowBox[{"-", "4."}]}]}], "/.", 
        RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"R", "\[Rule]", "11"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"R", "\[Rule]", "130"}], "}"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{"plots", ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "9"}]], ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "2"}]]}], "}"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)=2, Fitting All Data\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "size"}]}], "]"}], ",", 
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"HG104", ",", "RBS1027"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "/@", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}]}], ",", 
         RowBox[{"PlotMarkers", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EdgeForm", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                 "}"}], "]"}], ",", 
               RowBox[{"Disk", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
              "}"}], "]"}], ",", "0.03"}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<HG 104\>\"", ",", "\"\<RBS 1027\>\""}], "}"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.25", ",", "0.65"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
           "]"}]}]}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6755219546576834`*^9, 3.675522094369986*^9}, {
   3.6755223868008194`*^9, 3.67552240577966*^9}, {3.6755225731950736`*^9, 
   3.67552259189892*^9}, {3.6755227434406385`*^9, 3.6755227585604706`*^9}, 
   3.6755229174329944`*^9, {3.6755236633091087`*^9, 3.6755236643623114`*^9}, 
   3.67552403342094*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scientificNotation", "[", "x_", "]"}], ":=", 
  RowBox[{"ScientificForm", "[", 
   RowBox[{"x", ",", "3", ",", 
    RowBox[{"ExponentFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[LessEqual]", "#", "\[LessEqual]", "2"}], ",",
          "Null", ",", 
         RowBox[{"3", 
          RowBox[{"Quotient", "[", 
           RowBox[{"#", ",", "3"}], "]"}]}]}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"scientificNotation", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["E", "KAlog"], ",", 
         SuperscriptBox["E", "KIlog"], ",", "\[Beta]\[Epsilon]R"}], "}"}], "/.", 
       RowBox[{"\[Beta]\[Epsilon]R", "\[Rule]", 
        RowBox[{"-", "4."}]}]}], "/.", 
      RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"parameters2", "=", 
  RowBox[{"TextGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<A\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<I\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"font", "@", "\"\<\[Beta]\[Epsilon]\>\""}]}], "}"}], ",", 
      "values"}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Lighter", "[", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], "]"}], 
        "}"}], ",", "White"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6750174072110977`*^9, 3.6750174206978693`*^9}, {
   3.675017658735484*^9, 3.6750179967138157`*^9}, {3.675018030445745*^9, 
   3.675018051764964*^9}, {3.675115067745572*^9, 3.6751151125181327`*^9}, 
   3.6751908629966793`*^9, {3.6752015610949287`*^9, 3.675201578844962*^9}, {
   3.675522503625102*^9, 3.675522555153635*^9}, {3.6755226337190075`*^9, 
   3.6755226416862288`*^9}, 3.675522936783037*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Using RBS 1027 to predict HG 104 with n=4 (adjusting the \[Beta]\[Epsilon]R \
parameter value)\
\>", "Subsubsection",
 CellChangeTimes->{{3.675523021541198*^9, 3.6755230253670063`*^9}, {
  3.675523142392045*^9, 3.675523149118058*^9}, {3.6755234564779024`*^9, 
  3.675523464328117*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"c", ",", "fitFunction4"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Fold", " ", "change", " ", "formula", " ", "with", " ", "square", " ", 
    "exponents"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitFunction4", "[", "R_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nns", "=", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]O2", "=", 
        RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "4"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "4"], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox["c", "KI"]}], ")"}], "4"]}]}]], 
        FractionBox[
         RowBox[{"2", "R"}], "Nns"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.67552146134391*^9, 3.6755216269947414`*^9}, {
   3.675521822001994*^9, 3.6755218583482647`*^9}, {3.67552309114774*^9, 
   3.6755230996175585`*^9}, 3.675523189651537*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"RBS1027", ",", 
     RowBox[{
      RowBox[{"fitFunction4", "[", "R", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R", "\[Rule]", "130"}], ",", 
        RowBox[{"KA", "\[Rule]", 
         SuperscriptBox["E", "KAlog"]}], ",", 
        RowBox[{"KI", "\[Rule]", 
         SuperscriptBox["E", "KIlog"]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"KAlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "4"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KIlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"6.2", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "55.", "]"}]}]}], "}"}]}], "}"}], ",", "c"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.675523477353545*^9, 3.675523478828349*^9}, {
  3.6755235228894343`*^9, 3.675523546949479*^9}}],

Cell[BoxData[
 RowBox[{"plot3", "=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plots", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"fitFunction4", "[", "R", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KA", "\[Rule]", 
            SuperscriptBox["E", "KAlog"]}], ",", 
           RowBox[{"KI", "\[Rule]", 
            SuperscriptBox["E", "KIlog"]}]}], "}"}]}], "/.", 
        RowBox[{"\[Beta]\[Epsilon]R", "\[Rule]", 
         RowBox[{"-", "4."}]}]}], "/.", 
       RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"R", "\[Rule]", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"R", "\[Rule]", "130"}], "}"}]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"LogLinearPlot", "[", 
       RowBox[{"plots", ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]]}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)=4, Using RBS 1027 to fit HG 104\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "size"}]}], "]"}], ",", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"HG104", ",", "RBS1027"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "/@", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}]}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                "}"}], "]"}], ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}],
             "]"}], ",", "0.03"}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<HG 104\>\"", ",", "\"\<RBS 1027\>\""}], "}"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.25", ",", "0.65"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
          "]"}]}]}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.6755219546576834`*^9, 3.675522094369986*^9}, {
   3.6755223868008194`*^9, 3.67552240577966*^9}, {3.6755225731950736`*^9, 
   3.67552259189892*^9}, {3.6755227434406385`*^9, 3.6755227585604706`*^9}, 
   3.6755229174329944`*^9, {3.6755232280240097`*^9, 3.6755232804249372`*^9}, {
   3.675523385878765*^9, 3.675523430959055*^9}, 3.6755235590679026`*^9, {
   3.6755235943507767`*^9, 3.675523595930379*^9}, 3.675524037810949*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scientificNotation", "[", "x_", "]"}], ":=", 
  RowBox[{"ScientificForm", "[", 
   RowBox[{"x", ",", "3", ",", 
    RowBox[{"ExponentFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[LessEqual]", "#", "\[LessEqual]", "2"}], ",",
          "Null", ",", 
         RowBox[{"3", 
          RowBox[{"Quotient", "[", 
           RowBox[{"#", ",", "3"}], "]"}]}]}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"scientificNotation", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["E", "KAlog"], ",", 
         SuperscriptBox["E", "KIlog"], ",", "\[Beta]\[Epsilon]R"}], "}"}], "/.", 
       RowBox[{"\[Beta]\[Epsilon]R", "\[Rule]", 
        RowBox[{"-", "4."}]}]}], "/.", 
      RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"parameters3", "=", 
  RowBox[{"TextGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<A\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<I\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"font", "@", "\"\<\[Beta]\[Epsilon]\>\""}]}], "}"}], ",", 
      "values"}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Lighter", "[", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], "]"}], 
        "}"}], ",", "White"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6750174072110977`*^9, 3.6750174206978693`*^9}, {
   3.675017658735484*^9, 3.6750179967138157`*^9}, {3.675018030445745*^9, 
   3.675018051764964*^9}, {3.675115067745572*^9, 3.6751151125181327`*^9}, 
   3.6751908629966793`*^9, {3.6752015610949287`*^9, 3.675201578844962*^9}, {
   3.675522503625102*^9, 3.675522555153635*^9}, {3.6755226337190075`*^9, 
   3.6755226416862288`*^9}, 3.675522936783037*^9, 3.675523428079649*^9, 
   3.6755236097428045`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Trying fitting all data with n=4", "Subsubsection",
 CellChangeTimes->{{3.675523021541198*^9, 3.6755230253670063`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"c", ",", "fitFunction4"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Fold", " ", "change", " ", "formula", " ", "with", " ", "square", " ", 
    "exponents"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitFunction4", "[", "R_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nns", "=", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]O2", "=", 
        RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "4"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "4"], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox["c", "KI"]}], ")"}], "4"]}]}]], 
        FractionBox[
         RowBox[{"2", "R"}], "Nns"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.67552146134391*^9, 3.6755216269947414`*^9}, {
   3.675521822001994*^9, 3.6755218583482647`*^9}, {3.67552309114774*^9, 
   3.6755230996175585`*^9}, 3.675523189651537*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullRData", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"11", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "HG104"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"130", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "RBS1027"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.675522168705173*^9, 3.6755222513349447`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"fullRData", ",", 
     RowBox[{
      RowBox[{"fitFunction4", "[", "R", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KA", "\[Rule]", 
         SuperscriptBox["E", "KAlog"]}], ",", 
        RowBox[{"KI", "\[Rule]", 
         SuperscriptBox["E", "KIlog"]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"KAlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "4"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KIlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"6.2", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "55.", "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "c"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6755222641373687`*^9, 3.675522284532609*^9}, {
   3.675522317529275*^9, 3.675522364931573*^9}, 3.675523105966973*^9}],

Cell[BoxData[
 RowBox[{"plot4", "=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plots", "=", 
     RowBox[{
      RowBox[{"Normal", "@", "fit"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"R", "\[Rule]", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"R", "\[Rule]", "130"}], "}"}]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"LogLinearPlot", "[", 
       RowBox[{"plots", ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]]}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Fitting All Data\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"HG104", ",", "RBS1027"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "/@", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}]}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                "}"}], "]"}], ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}],
             "]"}], ",", "0.03"}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<HG 104\>\"", ",", "\"\<RBS 1027\>\""}], "}"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.25", ",", "0.65"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
          "]"}]}]}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.6755219546576834`*^9, 3.675522094369986*^9}, {
   3.6755223868008194`*^9, 3.67552240577966*^9}, {3.6755225731950736`*^9, 
   3.67552259189892*^9}, {3.6755227434406385`*^9, 3.6755227585604706`*^9}, 
   3.675523118990802*^9, {3.675523319399823*^9, 3.6755233413982763`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scientificNotation", "[", "x_", "]"}], ":=", 
  RowBox[{"ScientificForm", "[", 
   RowBox[{"x", ",", "3", ",", 
    RowBox[{"ExponentFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[LessEqual]", "#", "\[LessEqual]", "2"}], ",",
          "Null", ",", 
         RowBox[{"3", 
          RowBox[{"Quotient", "[", 
           RowBox[{"#", ",", "3"}], "]"}]}]}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"scientificNotation", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["E", "KAlog"], ",", 
        SuperscriptBox["E", "KIlog"], ",", "\[Beta]\[Epsilon]R"}], "}"}], "/.", 
      RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"parameters4", "=", 
  RowBox[{"TextGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<A\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<I\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"font", "@", "\"\<\[Beta]\[Epsilon]\>\""}]}], "}"}], ",", 
      "values"}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Lighter", "[", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], "]"}], 
        "}"}], ",", "White"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6750174072110977`*^9, 3.6750174206978693`*^9}, {
   3.675017658735484*^9, 3.6750179967138157`*^9}, {3.675018030445745*^9, 
   3.675018051764964*^9}, {3.675115067745572*^9, 3.6751151125181327`*^9}, 
   3.6751908629966793`*^9, {3.6752015610949287`*^9, 3.675201578844962*^9}, {
   3.675522503625102*^9, 3.675522555153635*^9}, {3.6755226337190075`*^9, 
   3.6755226416862288`*^9}, 3.6755237938099723`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Trying fitting all data with n=4 (adjusting the \[Beta]\[Epsilon]R parameter \
value)\
\>", "Subsubsection",
 CellChangeTimes->{{3.675523021541198*^9, 3.6755230253670063`*^9}, {
  3.675523142392045*^9, 3.675523149118058*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"c", ",", "fitFunction4"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Fold", " ", "change", " ", "formula", " ", "with", " ", "square", " ", 
    "exponents"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitFunction4", "[", "R_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nns", "=", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]O2", "=", 
        RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "4"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "4"], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox["c", "KI"]}], ")"}], "4"]}]}]], 
        FractionBox[
         RowBox[{"2", "R"}], "Nns"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.67552146134391*^9, 3.6755216269947414`*^9}, {
   3.675521822001994*^9, 3.6755218583482647`*^9}, {3.67552309114774*^9, 
   3.6755230996175585`*^9}, 3.675523189651537*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullRData", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"11", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "HG104"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"130", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "RBS1027"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.675522168705173*^9, 3.6755222513349447`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"fullRData", ",", 
     RowBox[{
      RowBox[{"fitFunction4", "[", "R", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KA", "\[Rule]", 
         SuperscriptBox["E", "KAlog"]}], ",", 
        RowBox[{"KI", "\[Rule]", 
         SuperscriptBox["E", "KIlog"]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"KAlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "4"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KIlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"6.2", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "55.", "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "c"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6755222641373687`*^9, 3.675522284532609*^9}, {
   3.675522317529275*^9, 3.675522364931573*^9}, 3.675523200297756*^9}],

Cell[BoxData[
 RowBox[{"plot4", "=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plots", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"fitFunction4", "[", "R", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KA", "\[Rule]", 
            SuperscriptBox["E", "KAlog"]}], ",", 
           RowBox[{"KI", "\[Rule]", 
            SuperscriptBox["E", "KIlog"]}]}], "}"}]}], "/.", 
        RowBox[{"\[Beta]\[Epsilon]R", "\[Rule]", 
         RowBox[{"-", "4."}]}]}], "/.", 
       RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"R", "\[Rule]", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"R", "\[Rule]", "130"}], "}"}]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"LogLinearPlot", "[", 
       RowBox[{"plots", ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]]}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)=4, Fitting All Data\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "size"}]}], "]"}], ",", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"HG104", ",", "RBS1027"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "/@", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}]}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                "}"}], "]"}], ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}],
             "]"}], ",", "0.03"}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<HG 104\>\"", ",", "\"\<RBS 1027\>\""}], "}"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.25", ",", "0.65"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
          "]"}]}]}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.6755219546576834`*^9, 3.675522094369986*^9}, {
   3.6755223868008194`*^9, 3.67552240577966*^9}, {3.6755225731950736`*^9, 
   3.67552259189892*^9}, {3.6755227434406385`*^9, 3.6755227585604706`*^9}, 
   3.6755229174329944`*^9, {3.6755232280240097`*^9, 3.6755232804249372`*^9}, {
   3.675523385878765*^9, 3.675523430959055*^9}, {3.675523640821266*^9, 
   3.6755236417612686`*^9}, 3.675524041723956*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scientificNotation", "[", "x_", "]"}], ":=", 
  RowBox[{"ScientificForm", "[", 
   RowBox[{"x", ",", "3", ",", 
    RowBox[{"ExponentFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[LessEqual]", "#", "\[LessEqual]", "2"}], ",",
          "Null", ",", 
         RowBox[{"3", 
          RowBox[{"Quotient", "[", 
           RowBox[{"#", ",", "3"}], "]"}]}]}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"scientificNotation", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["E", "KAlog"], ",", 
         SuperscriptBox["E", "KIlog"], ",", "\[Beta]\[Epsilon]R"}], "}"}], "/.", 
       RowBox[{"\[Beta]\[Epsilon]R", "\[Rule]", 
        RowBox[{"-", "4."}]}]}], "/.", 
      RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"parameters4", "=", 
  RowBox[{"TextGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<A\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<I\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"font", "@", "\"\<\[Beta]\[Epsilon]\>\""}]}], "}"}], ",", 
      "values"}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Lighter", "[", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], "]"}], 
        "}"}], ",", "White"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6750174072110977`*^9, 3.6750174206978693`*^9}, {
   3.675017658735484*^9, 3.6750179967138157`*^9}, {3.675018030445745*^9, 
   3.675018051764964*^9}, {3.675115067745572*^9, 3.6751151125181327`*^9}, 
   3.6751908629966793`*^9, {3.6752015610949287`*^9, 3.675201578844962*^9}, {
   3.675522503625102*^9, 3.675522555153635*^9}, {3.6755226337190075`*^9, 
   3.6755226416862288`*^9}, 3.675522936783037*^9, 3.675523428079649*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Results of above sections", "Subsubsection",
 CellChangeTimes->{{3.675522712075975*^9, 3.6755227184855905`*^9}, 
   3.675522831098214*^9, 3.675522965649291*^9}],

Cell[BoxData[{
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"plot1", ",", "plot2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"parameters1", ",", "parameters2"}], "}"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"plot3", ",", "plot4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"parameters3", ",", "parameters4"}], "}"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.675522719346592*^9, 3.6755227294592123`*^9}, {
  3.675523624928235*^9, 3.675523630236245*^9}, {3.675523715683022*^9, 
  3.6755237193364286`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["n=2 with Mitch data", "Subsubsection",
 CellChangeTimes->{{3.6756490357268944`*^9, 3.675649038349699*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"c", ",", "fitFunction2"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Fold", " ", "change", " ", "formula", " ", "with", " ", "square", " ", 
    "exponents"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitFunction2", "[", "R_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nns", "=", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]O2", "=", 
        RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox["c", "KI"]}], ")"}], "2"]}]}]], 
        FractionBox[
         RowBox[{"2", "R"}], "Nns"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.67552146134391*^9, 3.6755216269947414`*^9}, {
  3.675521822001994*^9, 3.6755218583482647`*^9}}],

Cell[BoxData[
 RowBox[{"plot5", "=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plots", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"fitFunction2", "[", "11", "]"}], ",", 
        RowBox[{"fitFunction2", "[", "130", "]"}]}], "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KA", "\[Rule]", 
         RowBox[{"1.5", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]]}]}], ",", 
        RowBox[{"KI", "\[Rule]", 
         RowBox[{"1.2", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}]}], ",", 
        RowBox[{"\[Beta]\[Epsilon]R", "\[Rule]", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "1.1", "]"}]}]}]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"LogLinearPlot", "[", 
       RowBox[{"plots", ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]]}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)=2, Mitch Values\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "size"}]}], "]"}], ",", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"HG104", ",", "RBS1027"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "/@", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}]}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                "}"}], "]"}], ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}],
             "]"}], ",", "0.03"}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<HG 104\>\"", ",", "\"\<RBS 1027\>\""}], "}"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.25", ",", "0.65"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
          "]"}]}]}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.6755219546576834`*^9, 3.675522094369986*^9}, {
   3.6755223868008194`*^9, 3.67552240577966*^9}, {3.6755225731950736`*^9, 
   3.67552259189892*^9}, {3.6755227434406385`*^9, 3.6755227585604706`*^9}, 
   3.6755229174329944`*^9, {3.6755232280240097`*^9, 3.6755232804249372`*^9}, {
   3.675523385878765*^9, 3.675523430959055*^9}, {3.675523640821266*^9, 
   3.6755236417612686`*^9}, 3.675524041723956*^9, 3.6756490644097495`*^9, {
   3.6756494213340454`*^9, 3.675649450288701*^9}, {3.6756494985454617`*^9, 
   3.675649503994773*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scientificNotation", "[", "x_", "]"}], ":=", 
  RowBox[{"ScientificForm", "[", 
   RowBox[{"x", ",", "3", ",", 
    RowBox[{"ExponentFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[LessEqual]", "#", "\[LessEqual]", "2"}], ",",
          "Null", ",", 
         RowBox[{"3", 
          RowBox[{"Quotient", "[", 
           RowBox[{"#", ",", "3"}], "]"}]}]}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"scientificNotation", "/@", 
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.5", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], ",", 
       RowBox[{"1.2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "1.1", "]"}]}]}], "}"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"parameters5", "=", 
  RowBox[{"TextGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<A\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<I\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"font", "@", "\"\<\[Beta]\[Epsilon]\>\""}]}], "}"}], ",", 
      "values"}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Lighter", "[", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], "]"}], 
        "}"}], ",", "White"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6750174072110977`*^9, 3.6750174206978693`*^9}, {
   3.675017658735484*^9, 3.6750179967138157`*^9}, {3.675018030445745*^9, 
   3.675018051764964*^9}, {3.675115067745572*^9, 3.6751151125181327`*^9}, 
   3.6751908629966793`*^9, {3.6752015610949287`*^9, 3.675201578844962*^9}, {
   3.675522503625102*^9, 3.675522555153635*^9}, {3.6755226337190075`*^9, 
   3.6755226416862288`*^9}, 3.675522936783037*^9, 3.675523428079649*^9, 
   3.6756490681721582`*^9, {3.6756491550998173`*^9, 3.6756491938870363`*^9}, 
   3.6756493254535613`*^9, 3.675649453476884*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["n=4 with Mitch data", "Subsubsection",
 CellChangeTimes->{{3.6756490357268944`*^9, 3.6756490446333113`*^9}}],

Cell[BoxData[
 RowBox[{"plot6", "=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plots", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"fitFunction4", "[", "11", "]"}], ",", 
        RowBox[{"fitFunction4", "[", "130", "]"}]}], "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KA", "\[Rule]", 
         RowBox[{"1.5", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]]}]}], ",", 
        RowBox[{"KI", "\[Rule]", 
         RowBox[{"1.2", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}]}], ",", 
        RowBox[{"\[Beta]\[Epsilon]R", "\[Rule]", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "1.1", "]"}]}]}]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"LogLinearPlot", "[", 
       RowBox[{"plots", ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]]}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)=4, Mitch Values\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "size"}]}], "]"}], ",", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"HG104", ",", "RBS1027"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "/@", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}]}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                "}"}], "]"}], ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}],
             "]"}], ",", "0.03"}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<HG 104\>\"", ",", "\"\<RBS 1027\>\""}], "}"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.25", ",", "0.65"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
          "]"}]}]}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.6755219546576834`*^9, 3.675522094369986*^9}, {
   3.6755223868008194`*^9, 3.67552240577966*^9}, {3.6755225731950736`*^9, 
   3.67552259189892*^9}, {3.6755227434406385`*^9, 3.6755227585604706`*^9}, 
   3.6755229174329944`*^9, {3.6755232280240097`*^9, 3.6755232804249372`*^9}, {
   3.675523385878765*^9, 3.675523430959055*^9}, {3.675523640821266*^9, 
   3.6755236417612686`*^9}, 3.675524041723956*^9, 3.6756490644097495`*^9, {
   3.6756494213340454`*^9, 3.675649434496798*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scientificNotation", "[", "x_", "]"}], ":=", 
  RowBox[{"ScientificForm", "[", 
   RowBox[{"x", ",", "3", ",", 
    RowBox[{"ExponentFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[LessEqual]", "#", "\[LessEqual]", "2"}], ",",
          "Null", ",", 
         RowBox[{"3", 
          RowBox[{"Quotient", "[", 
           RowBox[{"#", ",", "3"}], "]"}]}]}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"scientificNotation", "/@", 
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.5", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], ",", 
       RowBox[{"1.2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "1.1", "]"}]}]}], "}"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"parameters6", "=", 
  RowBox[{"TextGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<A\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<I\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"font", "@", "\"\<\[Beta]\[Epsilon]\>\""}]}], "}"}], ",", 
      "values"}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Lighter", "[", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], "]"}], 
        "}"}], ",", "White"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6750174072110977`*^9, 3.6750174206978693`*^9}, {
   3.675017658735484*^9, 3.6750179967138157`*^9}, {3.675018030445745*^9, 
   3.675018051764964*^9}, {3.675115067745572*^9, 3.6751151125181327`*^9}, 
   3.6751908629966793`*^9, {3.6752015610949287`*^9, 3.675201578844962*^9}, {
   3.675522503625102*^9, 3.675522555153635*^9}, {3.6755226337190075`*^9, 
   3.6755226416862288`*^9}, 3.675522936783037*^9, 3.675523428079649*^9, 
   3.6756490681721582`*^9, {3.6756491550998173`*^9, 3.6756491938870363`*^9}, 
   3.6756493254535613`*^9}],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"plot5", ",", "plot6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"parameters5", ",", "parameters6"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6756494656965823`*^9, 3.6756494729969997`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Trying to fit n=2 with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]\[Epsilon]", "R"], "=", "10"}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.6755253188969336`*^9, 3.675525331913387*^9}, {
  3.6755253797246437`*^9, 3.6755253851178565`*^9}, {3.675623574228289*^9, 
  3.6756235750328913`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"c", ",", "fitFunction2"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Fold", " ", "change", " ", "formula", " ", "with", " ", "square", " ", 
    "exponents"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitFunction2", "[", "R_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nns", "=", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]O2", "=", 
        RowBox[{"-", "13.9"}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]R", "=", "5."}]}], "}"}], ",", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox["c", "KI"]}], ")"}], "2"]}]}]], 
        FractionBox[
         RowBox[{"2", "R"}], "Nns"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.67552146134391*^9, 3.6755216269947414`*^9}, {
   3.675521822001994*^9, 3.6755218583482647`*^9}, {3.675525400210902*^9, 
   3.6755254013371043`*^9}, 3.675525497090551*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullRData", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"11", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "HG104"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"130", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "RBS1027"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.675522168705173*^9, 3.6755222513349447`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"fullRData", ",", 
     RowBox[{
      RowBox[{"fitFunction2", "[", "R", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KA", "\[Rule]", 
         SuperscriptBox["E", "KAlog"]}], ",", 
        RowBox[{"KI", "\[Rule]", 
         SuperscriptBox["E", "KIlog"]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"KAlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "4"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KIlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"6.2", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]]}], "]"}]}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]\[Epsilon]R", ",", 
          RowBox[{"-", 
           RowBox[{"Log", "[", "55.", "]"}]}]}], "}"}]}], "*)"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "c"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6755222641373687`*^9, 3.675522284532609*^9}, {
   3.675522317529275*^9, 3.675522364931573*^9}, 3.67552540865672*^9}],

Cell[BoxData[
 RowBox[{"plot2", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"KA", "=", 
       RowBox[{"1.5", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}]}], ",", 
      RowBox[{"KI", "=", 
       RowBox[{"6.2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]R", "=", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "55.", "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plots", "=", 
      RowBox[{
       RowBox[{"Normal", "@", "fit"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"R", "\[Rule]", "11"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"R", "\[Rule]", "130"}], "}"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{"plots", ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "9"}]], ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "2"}]]}], "}"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<n=2, \!\(\*SubscriptBox[\(\[Beta]\[Epsilon]\), \(R\)]\)=10, \
Fitting All Data\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"HG104", ",", "RBS1027"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "/@", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}]}], ",", 
         RowBox[{"PlotMarkers", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EdgeForm", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                 "}"}], "]"}], ",", 
               RowBox[{"Disk", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
              "}"}], "]"}], ",", "0.03"}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<HG 104\>\"", ",", "\"\<RBS 1027\>\""}], "}"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.25", ",", "0.65"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
           "]"}]}]}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6755219546576834`*^9, 3.675522094369986*^9}, {
  3.6755223868008194`*^9, 3.67552240577966*^9}, {3.6755225731950736`*^9, 
  3.67552259189892*^9}, {3.6755227434406385`*^9, 3.6755227585604706`*^9}, {
  3.675525420088353*^9, 3.6755254269859705`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scientificNotation", "[", "x_", "]"}], ":=", 
  RowBox[{"ScientificForm", "[", 
   RowBox[{"x", ",", "3", ",", 
    RowBox[{"ExponentFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[LessEqual]", "#", "\[LessEqual]", "2"}], ",",
          "Null", ",", 
         RowBox[{"3", 
          RowBox[{"Quotient", "[", 
           RowBox[{"#", ",", "3"}], "]"}]}]}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]\[Epsilon]R", "=", "5."}], "}"}], ",", 
     RowBox[{"scientificNotation", "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["E", "KAlog"], ",", 
          SuperscriptBox["E", "KIlog"], ",", "\[Beta]\[Epsilon]R"}], "}"}], "/.", 
        RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ")"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"parameters2", "=", 
  RowBox[{"TextGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<A\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<I\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"font", "@", "\"\<\[Beta]\[Epsilon]\>\""}]}], "}"}], ",", 
      "values"}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Lighter", "[", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], "]"}], 
        "}"}], ",", "White"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6750174072110977`*^9, 3.6750174206978693`*^9}, {
   3.675017658735484*^9, 3.6750179967138157`*^9}, {3.675018030445745*^9, 
   3.675018051764964*^9}, {3.675115067745572*^9, 3.6751151125181327`*^9}, 
   3.6751908629966793`*^9, {3.6752015610949287`*^9, 3.675201578844962*^9}, {
   3.675522503625102*^9, 3.675522555153635*^9}, {3.6755226337190075`*^9, 
   3.6755226416862288`*^9}, {3.6755254558714495`*^9, 3.6755254596188574`*^9}, 
   3.67552550554877*^9, {3.675525612346631*^9, 3.6755256153720455`*^9}}],

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"plot2", ",", "parameters2"}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675525526663474*^9, 3.675525536239895*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Moving along ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]\[Epsilon]", "R"], TraditionalForm]]],
 " space"
}], "Subsubsection",
 CellChangeTimes->{{3.6756234660698547`*^9, 3.675623470012062*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"c", ",", "fitFunction3"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Fold", " ", "change", " ", "formula", " ", "with", " ", "square", " ", 
    "exponents"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitFunction3", "[", 
    RowBox[{"R_", ",", "\[Beta]\[Epsilon]R_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nns", "=", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]O2", "=", 
        RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
     FractionBox["1.", 
      RowBox[{"1.", "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1.", "+", 
             FractionBox["c", "KA"]}], ")"}], "2."], 
          RowBox[{"(", 
           RowBox[{"1.", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1.", "+", 
             FractionBox["c", "KA"]}], ")"}], "2."], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.", "+", 
              FractionBox["c", "KI"]}], ")"}], "2."]}]}]], 
        FractionBox[
         RowBox[{"2.", "R"}], "Nns"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.67552146134391*^9, 3.6755216269947414`*^9}, {
   3.675521822001994*^9, 3.6755218583482647`*^9}, {3.675525400210902*^9, 
   3.6755254013371043`*^9}, 3.675525497090551*^9, {3.6756235979875402`*^9, 
   3.6756236518346453`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullRData", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"11", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "HG104"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"130", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "RBS1027"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.675522168705173*^9, 3.6755222513349447`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]\[Epsilon]Min", "=", 
   RowBox[{"-", "20."}]}], ";", 
  RowBox[{"\[Beta]\[Epsilon]Max", "=", "20."}], ";", 
  RowBox[{"\[Beta]\[Epsilon]Inc", "=", "1."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parameters", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"fit", "=", 
       RowBox[{"NonlinearModelFit", "[", 
        RowBox[{"fullRData", ",", 
         RowBox[{
          RowBox[{"fitFunction3", "[", 
           RowBox[{"R", ",", "\[Beta]\[Epsilon]"}], "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"KA", "\[Rule]", 
             SuperscriptBox["E", "KAlog"]}], ",", 
            RowBox[{"KI", "\[Rule]", 
             SuperscriptBox["E", "KIlog"]}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"KAlog", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"1.5", " ", 
               SuperscriptBox["10", 
                RowBox[{"-", "4"}]]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"KIlog", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"6.2", " ", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"R", ",", "c"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Beta]\[Epsilon]", ",", 
         SuperscriptBox["E", "KAlog"], ",", 
         SuperscriptBox["E", "KIlog"]}], "}"}], "/.", 
       RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
      "\[Beta]\[Epsilon]", ",", "\[Beta]\[Epsilon]Min", ",", 
       "\[Beta]\[Epsilon]Max", ",", "\[Beta]\[Epsilon]Inc"}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6755222641373687`*^9, 3.675522284532609*^9}, {
   3.675522317529275*^9, 3.675522364931573*^9}, 3.67552540865672*^9, {
   3.6756236253099904`*^9, 3.675623658332675*^9}, {3.675623689546584*^9, 
   3.675623770956761*^9}, {3.6756238135430684`*^9, 3.675623840188924*^9}, {
   3.6756241995979424`*^9, 3.675624222075203*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"fitFunction3", "[", 
        RowBox[{"R", ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"KA", "\[Rule]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"KI", "\[Rule]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"R", "\[Rule]", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"R", "\[Rule]", "130"}], "}"}]}], "}"}]}], "&"}], "/@", 
    RowBox[{"parameters", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", 
       RowBox[{"-", "1"}], ";;", "4"}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6756237957360315`*^9, 3.67562380978266*^9}, {
  3.675623849056343*^9, 3.6756239427847433`*^9}, {3.6756240939574833`*^9, 
  3.675624094832085*^9}, {3.6756242062019567`*^9, 3.6756242079687605`*^9}, {
  3.675624334792624*^9, 3.6756243530240602`*^9}}],

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"LogLinearPlot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Transpose", "@", "plots"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "9"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]]}], "}"}], 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)=2, Different \
\!\(\*SubscriptBox[\(\[Beta]\[Epsilon]\), \(R\)]\) Values\>\""}]}], "*)"}], 
          ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], "&"}],
               "/@", 
              RowBox[{"Range", "@", 
               RowBox[{"Length", "@", "plots"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}], "&"}],
               "/@", 
              RowBox[{"Range", "@", 
               RowBox[{"Length", "@", "plots"}]}]}]}], "]"}]}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<[IPTG]\>\"", ",", "\"\<fold-change\>\""}], "}"}]}], 
          ",", "opts"}], "]"}], ",", 
        RowBox[{"ListLogLinearPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"HG104", ",", "RBS1027"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "/@", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}]}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                  "}"}], "]"}], ",", 
                RowBox[{"Disk", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
               "}"}], "]"}], ",", "0.03"}], "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<HG 104\>\"", ",", "\"\<RBS 1027\>\""}], "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.25", ",", "0.65"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
            "]"}]}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", "aLabel", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Top", ",", "Left"}], "}"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6756243591180716`*^9, 3.675624369950495*^9}, {
   3.6756423143399305`*^9, 3.6756423197173405`*^9}, 3.6756423625176253`*^9, {
   3.675642400542906*^9, 3.675642495517308*^9}, {3.675642527128977*^9, 
   3.6756425498944216`*^9}, {3.6756425827481008`*^9, 
   3.6756427107965612`*^9}, {3.6756428556978664`*^9, 3.675642868279291*^9}, {
   3.6756429512988777`*^9, 3.6756429750497274`*^9}}],

Cell[BoxData[
 RowBox[{"plot2", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
    RowBox[{"ListLogPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"parameters", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"parameters", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Transpose", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"parameters", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            FractionBox[
             SuperscriptBox["E", 
              RowBox[{"-", 
               RowBox[{"parameters", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}]}]], 
             SuperscriptBox[
              RowBox[{"parameters", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], "2"]]}], "}"}]}]}], 
        "*)"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "/@", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "5"}], "}"}]}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(K\), \(A\)]\)\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(K\), \(I\)]\)\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(K\), \(I\)]\)\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(\*SubscriptBox[\(\[Beta]\[Epsilon]\), \
\(R\)]/2\)]\)\>\""}], "}"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.2", ",", "0.3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "]"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Beta]\[Epsilon]\>\"", ",", "\"\<Best-fit Parameters\>\""}], 
        "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", "opts"}], "]"}], ",", 
    "bLabel", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Top", ",", "Left"}], "}"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6756241291669607`*^9, 3.6756241768162947`*^9}, {
  3.6756427338956113`*^9, 3.675642795290741*^9}, {3.675642874348102*^9, 
  3.6756429289396286`*^9}, {3.6756432921347656`*^9, 3.675643323055231*^9}}],

Cell[BoxData[
 RowBox[{"grid", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"plot1", ",", "plot2"}], "}"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6756429204664125`*^9, 3.675642937740247*^9}, {
  3.6756429853411465`*^9, 3.675642985715547*^9}}],

Cell[BoxData[
 RowBox[{"plot3", "=", 
  RowBox[{"ListLogPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"parameters", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"parameters", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         FractionBox[
          SuperscriptBox["E", 
           RowBox[{"-", 
            RowBox[{"parameters", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}]], 
          SuperscriptBox[
           RowBox[{"parameters", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3"}], "]"}], "]"}], "2"]]}], "}"}]}]}], 
     "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4", ",", "5"}], "}"}]}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(K\), \(I\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(K\), \(I\)]\)\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(\*SubscriptBox[\(\[Beta]\[Epsilon]\), \
\(R\)]/2\)]\)\>\""}], "}"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Beta]\[Epsilon]\>\"", ",", "\"\<Best-fit Parameters\>\""}], 
      "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", "opts"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6756241291669607`*^9, 3.6756241768162947`*^9}, {
  3.6756427338956113`*^9, 3.675642795290741*^9}, {3.675642874348102*^9, 
  3.6756429289396286`*^9}, {3.6756432921347656`*^9, 3.675643323055231*^9}, {
  3.6756433566224985`*^9, 3.6756433936981726`*^9}, {3.675643973323351*^9, 
  3.6756439751645555`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\MWC Mutants - Rob \
Phillips - Started 2014-11-05, Put on Hold 2015-01-11, Resumed \
2015-02-09\\\\Discussions\\\\2016-06-06 Counting \
Plasmids\\\\fittingParameters.pdf\>\"", ",", "grid"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.675642986700349*^9, 3.6756430021033783`*^9}, {
  3.67564397778936*^9, 3.6756439959625945`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\MWC Mutants - Rob \
Phillips - Started 2014-11-05, Put on Hold 2015-01-11, Resumed \
2015-02-09\\\\Discussions\\\\2016-06-06 Counting \
Plasmids\\\\fittingParameters2.pdf\>\"", ",", "plot3"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.675642986700349*^9, 3.6756430021033783`*^9}, {
  3.67564397778936*^9, 3.6756439959625945`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Summary of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SubscriptBox["\[Beta]\[Epsilon]", "R"]}]], "\[LessLess]", "1"}], 
   TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.6756407072767944`*^9, 3.675640710989601*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"fold", "-", "change"}], "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["c", 
           SubscriptBox["K", "A"]]}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["c", 
            SubscriptBox["K", "A"]]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["c", 
           SubscriptBox[
            OverscriptBox["K", "~"], "I"]], ")"}], "2"]}]], 
      FractionBox["R", 
       SubscriptBox["N", "ns"]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubsuperscriptBox["\[Beta]\[Epsilon]", "O2", 
         RowBox[{"(", "Hernan", ")"}]]}]]}]}]]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6756385755174503`*^9, 3.6756386137687173`*^9}, {
  3.675639483049044*^9, 3.675639493688263*^9}, {3.6756395552459707`*^9, 
  3.675639558350376*^9}}],

Cell[TextData[{
 "for parameters ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "A"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["K", "~"], "I"], "\[Congruent]", 
    FractionBox[
     SubscriptBox["K", "I"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["\[Beta]\[Epsilon]", "R"]}], "/", "2"}]]]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.675640731909238*^9, 3.67564073899165*^9}}],

Cell["\<\
The parameters from fitting will satisfy these two conditions: \
\>", "Text",
 CellChangeTimes->{{3.6756407492564683`*^9, 3.675640803591364*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox["K", "~"], "I"], "\[TildeTilde]", 
   FractionBox[
    RowBox[{"[", 
     SubscriptBox["EC", "50"], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "r"}], ")"}], 
     RowBox[{"1", "/", "2"}]]]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.675639892346963*^9, 3.675639949193463*^9}, {
  3.675640002233556*^9, 3.6756400459292326`*^9}, {3.6756401737558575`*^9, 
  3.6756401737558575`*^9}, {3.6756402256259484`*^9, 3.6756402510227933`*^9}, {
  3.6756408235593987`*^9, 3.675640825025801*^9}, {3.6756441817662544`*^9, 
  3.6756441920596733`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[Cell[TextData[Cell[BoxData[
   FormBox[
    RowBox[{
     SubscriptBox["K", "A"], "\[TildeTilde]", 
     RowBox[{
      RowBox[{"[", 
       SubscriptBox["EC", "50"], "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"dynamicRange", "-", 
          FractionBox["1", 
           RowBox[{"1", "+", "r"}]]}], 
         RowBox[{"1", "-", "dynamicRange"}]], ")"}], 
       RowBox[{"1", "/", "2"}]]}]}], TraditionalForm]]]], "TextNumbered",
   CellChangeTimes->{{3.6756406168434353`*^9, 3.6756406595407104`*^9}}], 
  TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.675640785230131*^9, 3.6756407854173317`*^9}, {
  3.675640840859829*^9, 3.6756408978623295`*^9}, {3.675644194464078*^9, 
  3.675644194464078*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Limit ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SubscriptBox["\[Beta]\[Epsilon]", "R"]}]], "\[LessLess]", "1"}], 
   TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.675638567982637*^9, 3.675638573583047*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"fold", "-", "change"}], "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["c", 
           SubscriptBox["K", "A"]]}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["c", 
            SubscriptBox["K", "A"]]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SubscriptBox["\[Beta]\[Epsilon]", "R"]}]], "(", 
          RowBox[{"1", "+", 
           FractionBox["c", 
            SubscriptBox["K", "I"]]}], ")"}], "2"]}]], 
      FractionBox["R", 
       SubscriptBox["N", "ns"]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubsuperscriptBox["\[Beta]\[Epsilon]", "O2", 
         RowBox[{"(", "Hernan", ")"}]]}]]}]}]]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6756385755174503`*^9, 3.6756386046583014`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"fold", "-", "change"}], "\[TildeTilde]", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["c", 
           SubscriptBox["K", "A"]]}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["c", 
            SubscriptBox["K", "A"]]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SubscriptBox["\[Beta]\[Epsilon]", "R"]}]], "(", 
          FractionBox["c", 
           SubscriptBox["K", "I"]], ")"}], "2"]}]], 
      FractionBox["R", 
       SubscriptBox["N", "ns"]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubsuperscriptBox["\[Beta]\[Epsilon]", "O2", 
         RowBox[{"(", "Hernan", ")"}]]}]]}]}]], "\[Congruent]", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["c", 
           SubscriptBox["K", "A"]]}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["c", 
            SubscriptBox["K", "A"]]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["c", 
           SubscriptBox[
            OverscriptBox["K", "~"], "I"]], ")"}], "2"]}]], 
      FractionBox["R", 
       SubscriptBox["N", "ns"]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubsuperscriptBox["\[Beta]\[Epsilon]", "O2", 
         RowBox[{"(", "Hernan", ")"}]]}]]}]}]]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6756385755174503`*^9, 3.6756386137687173`*^9}, {
  3.675639483049044*^9, 3.675639493688263*^9}}],

Cell[TextData[{
 "Thus we are really fitting the parameters ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "A"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["K", "~"], "I"], "=", 
    FractionBox[
     SubscriptBox["K", "I"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["\[Beta]\[Epsilon]", "R"]}], "/", "2"}]]]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.675638789893027*^9, 3.675638805305854*^9}, {
  3.6756394991482725`*^9, 3.6756395132038975`*^9}}],

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"parameters", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"parameters", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       FractionBox[
        SuperscriptBox["E", 
         RowBox[{"-", 
          RowBox[{"parameters", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}]], 
        SuperscriptBox[
         RowBox[{"parameters", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "2"]]}], "}"}]}]}], "}"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.6756241291669607`*^9, 3.6756241768162947`*^9}, {
  3.675638845304324*^9, 3.6756388882668*^9}, {3.675638925098464*^9, 
  3.675638927188868*^9}}],

Cell[TextData[{
 "To quantify the exact values of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "A"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SubscriptBox["\[Beta]\[Epsilon]", "R"]}]], 
    SubsuperscriptBox["K", "I", "2"]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", let\[CloseCurlyQuote]s find ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    SubscriptBox["EC", "50"], "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ","
}], "Text",
 CellChangeTimes->{{3.6756389407764916`*^9, 3.6756389548477163`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"fold", "-", "change"}], "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["c", 
           SubscriptBox["K", "A"]]}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["c", 
            SubscriptBox["K", "A"]]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SubscriptBox["\[Beta]\[Epsilon]", "R"]}]], "(", 
          FractionBox["c", 
           SubscriptBox["K", "I"]], ")"}], "2"]}]], 
      FractionBox["R", 
       SubscriptBox["N", "ns"]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubsuperscriptBox["\[Beta]\[Epsilon]", "O2", 
         RowBox[{"(", "Hernan", ")"}]]}]]}]}]]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6756385755174503`*^9, 3.6756386137687173`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"fold", "-", "change"}], "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["c", 
           SubscriptBox["K", "A"]]}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["c", 
            SubscriptBox["K", "A"]]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["c", 
           SubscriptBox[
            OverscriptBox["K", "~"], "I"]], ")"}], "2"]}]], 
      FractionBox["R", 
       SubscriptBox["N", "ns"]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubsuperscriptBox["\[Beta]\[Epsilon]", "O2", 
         RowBox[{"(", "Hernan", ")"}]]}]]}]}]]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6756385755174503`*^9, 3.6756386137687173`*^9}, {
  3.675639483049044*^9, 3.675639493688263*^9}, {3.6756395552459707`*^9, 
  3.675639558350376*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fc", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["c", "KA"]}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["c", "KA"]}], ")"}], "2"], "+", 
        FractionBox[
         SuperscriptBox["c", "2"], 
         SuperscriptBox["KIeff", "2"]]}]], "r"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fcMin", "=", 
  RowBox[{"Limit", "[", 
   RowBox[{"fc", ",", 
    RowBox[{"c", "\[Rule]", "0"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fcMax", "=", 
  RowBox[{"Limit", "[", 
   RowBox[{"fc", ",", 
    RowBox[{"c", "\[Rule]", "\[Infinity]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6756389662045364`*^9, 3.675639005079805*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dynamicRange", "==", 
     FractionBox[
      RowBox[{
       SuperscriptBox["KA", "2"], "+", 
       SuperscriptBox["KIeff", "2"]}], 
      RowBox[{
       SuperscriptBox["KA", "2"], "+", 
       RowBox[{
        SuperscriptBox["KIeff", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}]}]}]]}], ",", "KA"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.675640520248066*^9, 3.6756405383752975`*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dynamicRange", "==", 
     FractionBox[
      RowBox[{
       SuperscriptBox["KRatio", "2"], "+", "1"}], 
      RowBox[{
       SuperscriptBox["KRatio", "2"], "+", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}]]}], ",", "KRatio"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.675640520248066*^9, 3.675640566517747*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    SubscriptBox["K", "A"], 
    SubscriptBox[
     OverscriptBox["K", "~"], "I"]], "=", 
   FractionBox[
    SqrtBox[
     RowBox[{
      RowBox[{"dynamicRange", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}], "-", "1"}]], 
    SqrtBox[
     RowBox[{"1", "-", "dynamicRange"}]]]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6756406168434353`*^9, 3.6756406595407104`*^9}}],

Cell[BoxData[
 RowBox[{"val", "[", 
  RowBox[{
   RowBox[{"KRatio", "/.", 
    RowBox[{"FullSimplify", "@", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"dynamicRange", "==", 
        FractionBox[
         RowBox[{
          SuperscriptBox["KRatio", "2"], "+", "1"}], 
         RowBox[{
          SuperscriptBox["KRatio", "2"], "+", 
          RowBox[{"(", 
           RowBox[{"1", "+", "r"}], ")"}]}]]}], ",", "KRatio"}], "]"}]}]}], "/.", 
   RowBox[{"dynamicRange", "\[Rule]", "0.7"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6756405828977757`*^9, 3.6756405957833986`*^9}}],

Cell[BoxData[
 RowBox[{"parameters", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.675639112454793*^9, 3.675639112532793*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"val", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KA", "->", 
      RowBox[{"parameters", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"KIeff", "->", 
      FractionBox[
       RowBox[{"parameters", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "]"}], "]"}], 
       SuperscriptBox["E", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"parameters", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "/", "2"}]]]}], 
     ",", 
     RowBox[{"r", "\[Rule]", 
      RowBox[{
       FractionBox["11", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]], 
       SuperscriptBox["E", "13.9"]}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6756390925647583`*^9, 3.6756391396768413`*^9}, {
  3.675639740418296*^9, 3.6756397636155367`*^9}}],

Cell[BoxData[
 RowBox[{"val", "[", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"KA", " ", 
       SuperscriptBox["KIeff", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}], "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["KA", "2"], " ", 
        SuperscriptBox["KIeff", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["KA", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["KIeff", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "r"}], ")"}]}]}], ")"}]}]]}], 
     RowBox[{
      SuperscriptBox["KA", "2"], "+", 
      RowBox[{
       SuperscriptBox["KIeff", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}]}]], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"KA", " ", 
       SuperscriptBox["KIeff", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}], "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["KA", "2"], " ", 
        SuperscriptBox["KIeff", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], " ", 
        RowBox[{"(", 
         SuperscriptBox["KA", "2"], ")"}]}]]}], 
     RowBox[{
      SuperscriptBox["KA", "2"], "+", 
      RowBox[{
       SuperscriptBox["KIeff", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}]}]], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"KA", " ", 
       SuperscriptBox["KIeff", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}], "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["KA", "2"], " ", 
        SuperscriptBox["KIeff", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], " ", 
        RowBox[{"(", 
         SuperscriptBox["KA", "2"], ")"}]}]]}], 
     SuperscriptBox["KA", "2"]], ",", 
    RowBox[{"KIeff", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["KIeff", "KA"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}]}], "+", 
       SqrtBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}]]}], ")"}]}], ",", 
    RowBox[{"KIeff", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["KIeff", "KA"], 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], 
        RowBox[{"1", "/", "2"}]]}], ")"}]}], ",", 
    RowBox[{"KIeff", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "r"}], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["KIeff", "KA"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "r"}], ")"}], 
         RowBox[{"1", "/", "2"}]]}], "+", "1"}], ")"}]}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6756397687167463`*^9, 3.6756398141908255`*^9}, {
  3.675639880303742*^9, 3.675639882253745*^9}, {3.675639972562304*^9, 
  3.675639992514739*^9}, {3.675640056428051*^9, 3.675640070561676*^9}, {
  3.6756401246937714`*^9, 3.6756401999171033`*^9}}],

Cell[BoxData[
 RowBox[{"val", "[", 
  RowBox[{"{", 
   RowBox[{"KA", ",", "KIeff", ",", "r"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6756449236267776`*^9, 3.675644929677989*^9}}],

Cell[BoxData[
 RowBox[{"val", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["KIeff", "KA"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}], 
       RowBox[{"1", "/", "2"}]]}], "+", "1"}], ",", 
    RowBox[{
     FractionBox["KIeff", "KA"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "r"}], ")"}], 
      RowBox[{"1", "/", "2"}]]}], ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.675640206001114*^9, 3.6756402102599216`*^9}}],

Cell[BoxData[
 RowBox[{"val", "[", "r", "]"}]], "Input",
 CellChangeTimes->{{3.6756402842352514`*^9, 3.6756402855456533`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"KA", " ", 
      SuperscriptBox["KIeff", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "r"}], ")"}]}], "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["KA", "2"], " ", 
       SuperscriptBox["KIeff", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["KA", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["KIeff", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "r"}], ")"}]}]}], ")"}]}]]}], 
    RowBox[{
     SuperscriptBox["KA", "2"], "+", 
     RowBox[{
      SuperscriptBox["KIeff", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "r"}], ")"}]}]}]], "\[TildeTilde]", 
   FractionBox[
    RowBox[{
     RowBox[{
      SubscriptBox["K", "A"], " ", 
      SubsuperscriptBox[
       OverscriptBox["K", "~"], "I", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "r"}], ")"}]}], "+", 
     RowBox[{
      SubsuperscriptBox["K", "A", "2"], 
      SubscriptBox[
       OverscriptBox["K", "~"], "I"], 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], " "}]]}]}], 
    SubsuperscriptBox["K", "A", "2"]]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.675639892346963*^9, 3.675639949193463*^9}, {
  3.675640002233556*^9, 3.675640002233556*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["K", "~"], "I"], "(", 
    RowBox[{
     RowBox[{
      FractionBox[
       SubscriptBox[
        OverscriptBox["K", "~"], "I"], 
       SubscriptBox["K", "A"]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "r"}], ")"}]}], "+", 
     SqrtBox[
      RowBox[{"1", "+", "r", " "}]]}], ")"}], "\[TildeTilde]", 
   RowBox[{
    SubscriptBox[
     OverscriptBox["K", "~"], "I"], 
    SqrtBox[
     RowBox[{"1", "+", "r", " "}]]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.675639892346963*^9, 3.675639949193463*^9}, {
  3.675640002233556*^9, 3.6756400459292326`*^9}, {3.6756401737558575`*^9, 
  3.6756401737558575`*^9}, {3.6756402256259484`*^9, 3.6756402510227933`*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "\[Equal]", 
     RowBox[{"Simplify", "[", 
      FractionBox[
       RowBox[{"fc", "-", "fcMin"}], 
       RowBox[{"fcMax", "-", "fcMin"}]], "]"}]}], ",", "c"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6756390079970098`*^9, 3.675639037028661*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Limit ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SubscriptBox["\[Beta]\[Epsilon]", "R"]}]], "\[GreaterGreater]", "1"}], 
   TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.675638567982637*^9, 3.675638573583047*^9}, {
  3.675645594343007*^9, 3.675645594701808*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"fold", "-", "change"}], "\[TildeTilde]", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["c", 
           SubscriptBox["K", "A"]]}], ")"}], "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["c", 
           SubscriptBox[
            OverscriptBox["K", "~"], "I"]]}], ")"}], "2"]], 
      FractionBox["R", 
       SubscriptBox["N", "ns"]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SubsuperscriptBox["\[Beta]\[Epsilon]", "O2", 
         RowBox[{"(", "Hernan", ")"}]]}]]}]}]]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6756385755174503`*^9, 3.6756386137687173`*^9}, {
  3.675639483049044*^9, 3.675639493688263*^9}, {3.675645602663029*^9, 
  3.6756456072670374`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fc", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["c", "KA"]}], ")"}], "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["c", "KI"]}], ")"}], "2"]], "r"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fcMin", "=", 
  RowBox[{"Limit", "[", 
   RowBox[{"fc", ",", 
    RowBox[{"c", "\[Rule]", "0"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fcMax", "=", 
  RowBox[{"Limit", "[", 
   RowBox[{"fc", ",", 
    RowBox[{"c", "\[Rule]", "\[Infinity]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6756389662045364`*^9, 3.675639005079805*^9}, {
  3.6756456194486628`*^9, 3.6756456209950657`*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dynamicRange", "==", 
     FractionBox[
      SuperscriptBox["KRatio", "2"], 
      RowBox[{
       SuperscriptBox["KRatio", "2"], "+", "r"}]]}], ",", "KRatio"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.675640520248066*^9, 3.675640566517747*^9}, {
  3.675645644044311*^9, 3.6756456478543215`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    SubscriptBox["K", "A"], 
    SubscriptBox["K", "I"]], "=", 
   FractionBox[
    SqrtBox[
     RowBox[{"dynamicRange", "  ", "r"}]], 
    SqrtBox[
     RowBox[{"1", "-", "dynamicRange"}]]]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6756406168434353`*^9, 3.6756406595407104`*^9}, {
  3.6756456634543533`*^9, 3.6756456634699535`*^9}, {3.6756459954444733`*^9, 
  3.675645995506873*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"val2", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KA", "->", 
      RowBox[{"parameters", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"KI", "->", 
      RowBox[{"parameters", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ",", 
     RowBox[{"r", "\[Rule]", 
      RowBox[{
       FractionBox["11", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]], 
       SuperscriptBox["E", "13.9"]}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6756390925647583`*^9, 3.6756391396768413`*^9}, {
  3.675639740418296*^9, 3.6756397636155367`*^9}, {3.6756457052548313`*^9, 
  3.675645724130472*^9}, {3.6756462255831385`*^9, 3.6756462366967597`*^9}}],

Cell[BoxData[
 RowBox[{"val2", "[", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     SuperscriptBox["10", 
      RowBox[{"-", "5"}]], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], 
       RowBox[{"1", "/", "2"}]], "-", "1"}]], ",", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["10", 
        RowBox[{"-", "5"}]], 
       SuperscriptBox["r", 
        RowBox[{"1", "/", "2"}]]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "+", "r"}], ")"}], 
        RowBox[{"1", "/", "2"}]], "-", "1"}]], 
     RowBox[{"(", 
      FractionBox["0.8", 
       RowBox[{"1", "-", "0.8"}]], ")"}]}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6756461791858425`*^9, 3.6756461929830685`*^9}, {
  3.67564624229957*^9, 3.6756462951884823`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"KA", "->", 
    RowBox[{"parameters", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
   RowBox[{"KI", "->", 
    RowBox[{"parameters", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ",", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{
     FractionBox["11", 
      RowBox[{"4.6", " ", 
       SuperscriptBox["10", "6"]}]], 
     SuperscriptBox["E", "13.9"]}]}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"val", "[", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"KA", " ", 
       SuperscriptBox["KIeff", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}], "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["KA", "2"], " ", 
        SuperscriptBox["KIeff", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["KA", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["KIeff", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "r"}], ")"}]}]}], ")"}]}]]}], 
     RowBox[{
      SuperscriptBox["KA", "2"], "+", 
      RowBox[{
       SuperscriptBox["KIeff", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}]}]], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"KA", " ", 
       SuperscriptBox["KIeff", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}], "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["KA", "2"], " ", 
        SuperscriptBox["KIeff", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], " ", 
        RowBox[{"(", 
         SuperscriptBox["KA", "2"], ")"}]}]]}], 
     RowBox[{
      SuperscriptBox["KA", "2"], "+", 
      RowBox[{
       SuperscriptBox["KIeff", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}]}]], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"KA", " ", 
       SuperscriptBox["KIeff", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}], "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["KA", "2"], " ", 
        SuperscriptBox["KIeff", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], " ", 
        RowBox[{"(", 
         SuperscriptBox["KA", "2"], ")"}]}]]}], 
     SuperscriptBox["KA", "2"]], ",", 
    RowBox[{"KIeff", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["KIeff", "KA"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}]}], "+", 
       SqrtBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}]]}], ")"}]}], ",", 
    RowBox[{"KIeff", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["KIeff", "KA"], 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], 
        RowBox[{"1", "/", "2"}]]}], ")"}]}], ",", 
    RowBox[{"KIeff", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "r"}], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["KIeff", "KA"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "r"}], ")"}], 
         RowBox[{"1", "/", "2"}]]}], "+", "1"}], ")"}]}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6756397687167463`*^9, 3.6756398141908255`*^9}, {
  3.675639880303742*^9, 3.675639882253745*^9}, {3.675639972562304*^9, 
  3.675639992514739*^9}, {3.675640056428051*^9, 3.675640070561676*^9}, {
  3.6756401246937714`*^9, 3.6756401999171033`*^9}}],

Cell[BoxData[
 RowBox[{"val", "[", 
  RowBox[{"{", 
   RowBox[{"KA", ",", "KIeff", ",", "r"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6756449236267776`*^9, 3.675644929677989*^9}}],

Cell[BoxData[
 RowBox[{"val", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["KIeff", "KA"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}], 
       RowBox[{"1", "/", "2"}]]}], "+", "1"}], ",", 
    RowBox[{
     FractionBox["KIeff", "KA"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "r"}], ")"}], 
      RowBox[{"1", "/", "2"}]]}], ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.675640206001114*^9, 3.6756402102599216`*^9}}],

Cell[BoxData[
 RowBox[{"val", "[", "r", "]"}]], "Input",
 CellChangeTimes->{{3.6756402842352514`*^9, 3.6756402855456533`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"KA", " ", 
      SuperscriptBox["KIeff", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "r"}], ")"}]}], "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["KA", "2"], " ", 
       SuperscriptBox["KIeff", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["KA", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["KIeff", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "r"}], ")"}]}]}], ")"}]}]]}], 
    RowBox[{
     SuperscriptBox["KA", "2"], "+", 
     RowBox[{
      SuperscriptBox["KIeff", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "r"}], ")"}]}]}]], "\[TildeTilde]", 
   FractionBox[
    RowBox[{
     RowBox[{
      SubscriptBox["K", "A"], " ", 
      SubsuperscriptBox[
       OverscriptBox["K", "~"], "I", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "r"}], ")"}]}], "+", 
     RowBox[{
      SubsuperscriptBox["K", "A", "2"], 
      SubscriptBox[
       OverscriptBox["K", "~"], "I"], 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], " "}]]}]}], 
    SubsuperscriptBox["K", "A", "2"]]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.675639892346963*^9, 3.675639949193463*^9}, {
  3.675640002233556*^9, 3.675640002233556*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["K", "~"], "I"], "(", 
    RowBox[{
     RowBox[{
      FractionBox[
       SubscriptBox[
        OverscriptBox["K", "~"], "I"], 
       SubscriptBox["K", "A"]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "r"}], ")"}]}], "+", 
     SqrtBox[
      RowBox[{"1", "+", "r", " "}]]}], ")"}], "\[TildeTilde]", 
   RowBox[{
    SubscriptBox[
     OverscriptBox["K", "~"], "I"], 
    SqrtBox[
     RowBox[{"1", "+", "r", " "}]]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.675639892346963*^9, 3.675639949193463*^9}, {
  3.675640002233556*^9, 3.6756400459292326`*^9}, {3.6756401737558575`*^9, 
  3.6756401737558575`*^9}, {3.6756402256259484`*^9, 3.6756402510227933`*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "\[Equal]", 
     RowBox[{"Simplify", "[", 
      FractionBox[
       RowBox[{"fc", "-", "fcMin"}], 
       RowBox[{"fcMax", "-", "fcMin"}]], "]"}]}], ",", "c"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6756390079970098`*^9, 3.675639037028661*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "KA"}], "  ", "KI"}], " ", "+", " ", 
    RowBox[{"KI", " ", "KA", 
     SqrtBox[
      RowBox[{"(", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], ")"}]]}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"KA", "+", "KI"}], ")"}], " "}]], TraditionalForm]],
 FormatType->"TraditionalForm"]], "TextNumbered",
 CellChangeTimes->{{3.6756457383649087`*^9, 3.675645814710861*^9}}],

Cell[BoxData[
 RowBox[{"val", "[", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "KA"}], " ", 
       RowBox[{"(", 
        RowBox[{"KA", "-", "KI"}], ")"}], " ", "KI", " ", 
       RowBox[{"(", 
        RowBox[{"KA", "-", 
         RowBox[{"KI", " ", "r"}]}], ")"}]}], "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["KA", "2"], " ", 
        SuperscriptBox["KI", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["KI", "2"], " ", "r"}], "+", 
          RowBox[{
           SuperscriptBox["KA", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "r"}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["KA", "2"], "+", 
          RowBox[{
           SuperscriptBox["KI", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "r"}]}], ")"}]}]}], ")"}]}]]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"KA", "+", "KI"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["KA", "2"], "+", 
        RowBox[{
         SuperscriptBox["KI", "2"], " ", "r"}]}], ")"}]}]], ",", 
    RowBox[{"KA", " ", "KI", " ", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox[
         RowBox[{"2", "+", "r"}]]}], 
       RowBox[{"KA", "+", "KI"}]], ")"}]}], ",", 
    RowBox[{"KI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox[
        RowBox[{"2", "+", "r"}]]}], ")"}]}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.675645822517677*^9, 3.6756458604773674`*^9}}],

Cell[BoxData[
 RowBox[{"val", "[", "r", "]"}]], "Input",
 CellChangeTimes->{{3.675645745570923*^9, 3.675645746354925*^9}}],

Cell[BoxData[
 RowBox[{"val", "[", 
  RowBox[{"c", "/.", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], "\[Equal]", 
       RowBox[{"Simplify", "[", 
        FractionBox[
         RowBox[{"fc", "-", "fcMin"}], 
         RowBox[{"fcMax", "-", "fcMin"}]], "]"}]}], ",", "c"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.67564569392381*^9, 3.675645697124816*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["scratch", "Subsection",
 CellChangeTimes->{{3.675523683893955*^9, 3.6755236845335565`*^9}}],

Cell[CellGroupData[{

Cell["sc", "Subsubsection",
 CellChangeTimes->{{3.675523181250722*^9, 3.6755231813911223`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"c", ",", "fitFunction2"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Fold", " ", "change", " ", "formula", " ", "with", " ", "square", " ", 
    "exponents"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitFunction4", "[", "R_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nns", "=", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]O2", "=", 
        RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "4"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", "KA"]}], ")"}], "4"], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox["c", "KI"]}], ")"}], "4"]}]}]], 
        FractionBox[
         RowBox[{"2", "R"}], "Nns"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.67552146134391*^9, 3.6755216269947414`*^9}, {
  3.675521822001994*^9, 3.6755218583482647`*^9}, {3.67552309114774*^9, 
  3.6755230996175585`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullRData", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"11", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "HG104"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"130", ",", 
            RowBox[{"{", 
             RowBox[{"Length", "@", "#"}], "}"}]}], "]"}]}], "]"}]}], "&"}], 
      "@", "RBS1027"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.675522168705173*^9, 3.6755222513349447`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"fullRData", ",", 
     RowBox[{
      RowBox[{"fitFunction4", "[", "R", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KA", "\[Rule]", 
         SuperscriptBox["E", "KAlog"]}], ",", 
        RowBox[{"KI", "\[Rule]", 
         SuperscriptBox["E", "KIlog"]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"KAlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "4"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KIlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"6.2", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "55.", "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "c"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6755222641373687`*^9, 3.675522284532609*^9}, {
   3.675522317529275*^9, 3.675522364931573*^9}, 3.675523105966973*^9}],

Cell[BoxData[
 RowBox[{"plot4", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"KA", "=", 
       RowBox[{"1.5", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]]}]}], ",", 
      RowBox[{"KI", "=", 
       RowBox[{"6.2", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}]}], ",", 
      RowBox[{"\[Beta]\[Epsilon]R", "=", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "55.", "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plots", "=", 
      RowBox[{
       RowBox[{"Normal", "@", "fit"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"R", "\[Rule]", "11"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"R", "\[Rule]", "130"}], "}"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{"plots", ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "9"}]], ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "2"}]]}], "}"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Fitting All Data\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"HG104", ",", "RBS1027"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "/@", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}]}], ",", 
         RowBox[{"PlotMarkers", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EdgeForm", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                 "}"}], "]"}], ",", 
               RowBox[{"Disk", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
              "}"}], "]"}], ",", "0.03"}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<HG 104\>\"", ",", "\"\<RBS 1027\>\""}], "}"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.25", ",", "0.65"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
           "]"}]}]}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6755219546576834`*^9, 3.675522094369986*^9}, {
   3.6755223868008194`*^9, 3.67552240577966*^9}, {3.6755225731950736`*^9, 
   3.67552259189892*^9}, {3.6755227434406385`*^9, 3.6755227585604706`*^9}, 
   3.675523118990802*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scientificNotation", "[", "x_", "]"}], ":=", 
  RowBox[{"ScientificForm", "[", 
   RowBox[{"x", ",", "3", ",", 
    RowBox[{"ExponentFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[LessEqual]", "#", "\[LessEqual]", "2"}], ",",
          "Null", ",", 
         RowBox[{"3", 
          RowBox[{"Quotient", "[", 
           RowBox[{"#", ",", "3"}], "]"}]}]}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"scientificNotation", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["E", "KAlog"], ",", 
        SuperscriptBox["E", "KIlog"], ",", "\[Beta]\[Epsilon]R"}], "}"}], "/.", 
      RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"parameters2", "=", 
  RowBox[{"TextGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<A\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Superscript", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<K\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"font", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
              "@", "\"\<I\>\""}]}], "]"}], ",", 
           RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
        RowBox[{"font", "@", "\"\<\[Beta]\[Epsilon]\>\""}]}], "}"}], ",", 
      "values"}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Lighter", "[", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], "]"}], 
        "}"}], ",", "White"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6750174072110977`*^9, 3.6750174206978693`*^9}, {
   3.675017658735484*^9, 3.6750179967138157`*^9}, {3.675018030445745*^9, 
   3.675018051764964*^9}, {3.675115067745572*^9, 3.6751151125181327`*^9}, 
   3.6751908629966793`*^9, {3.6752015610949287`*^9, 3.675201578844962*^9}, {
   3.675522503625102*^9, 3.675522555153635*^9}, {3.6755226337190075`*^9, 
   3.6755226416862288`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["sc", "Subsubsection",
 CellChangeTimes->{{3.675522013908804*^9, 3.6755220140024033`*^9}}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KA", "=", 
      RowBox[{"1.5", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "4"}]]}]}], ",", 
     RowBox[{"KI", "=", 
      RowBox[{"6.2", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}], ",", 
     RowBox[{"\[Beta]\[Epsilon]R", "=", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "55.", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fitFunction2", "[", "11", "]"}], ",", 
       RowBox[{"fitFunction2", "[", "130", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "9"}]], ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6755218612986703`*^9, 3.6755219397999487`*^9}}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KA", "=", 
      RowBox[{"1.5", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "4"}]]}]}], ",", 
     RowBox[{"KI", "=", 
      RowBox[{"6.2", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}], ",", 
     RowBox[{"\[Beta]\[Epsilon]R", "=", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "55.", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fitFunction2", "[", "11", "]"}], ",", 
      RowBox[{"fitFunction2", "[", "130", "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.675521961770697*^9, 3.6755219632607*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KA", "=", 
      RowBox[{"1.5", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "4"}]]}]}], ",", 
     RowBox[{"KI", "=", 
      RowBox[{"6.2", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}], ",", 
     RowBox[{"\[Beta]\[Epsilon]R", "=", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "55.", "]"}]}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"plots", "=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fitFunction2", "[", "11", "]"}], ",", 
       RowBox[{"fitFunction2", "[", "130", "]"}]}], "}"}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6755219546576834`*^9, 3.675521996593769*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KA", "=", 
      RowBox[{"1.5", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "4"}]]}]}], ",", 
     RowBox[{"KI", "=", 
      RowBox[{"6.2", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}], ",", 
     RowBox[{"\[Beta]\[Epsilon]R", "=", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "55.", "]"}]}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plots", "=", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"fitFunction2", "[", "11", "]"}], ",", 
        RowBox[{"fitFunction2", "[", "130", "]"}]}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{"plots", ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "9"}]], ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6755219546576834`*^9, 3.6755220045285835`*^9}}],

Cell[BoxData["plots"], "Input"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Griffin\[CloseCurlyQuote]s Microscopy Data", "Section",
 CellChangeTimes->{{3.675018368116059*^9, 3.6750183711392317`*^9}}],

Cell[CellGroupData[{

Cell["Background", "Subsubsection",
 CellChangeTimes->{{3.6746463914106236`*^9, 3.6746463921771336`*^9}}],

Cell["Raw data:", "Text",
 CellChangeTimes->{{3.67464639554917*^9, 3.67464639642122*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["RBS 1027 data",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/gchure/analysis_code/edit/master/2016/20160610_\
RBS1027_O2_IPTG_titration/output/20160610_RBS1027_O2_fold-change.csv"], None},
  ButtonNote->
   "https://github.com/gchure/analysis_code/edit/master/2016/20160610_RBS1027_\
O2_IPTG_titration/output/20160610_RBS1027_O2_fold-change.csv"],
 " from 2016-06-10"
}], "Item",
 CellChangeTimes->{{3.6746460868448725`*^9, 3.6746460944038935`*^9}}],

Cell[TextData[{
 ButtonBox["WT data",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/gchure/analysis_code/edit/master/2016/20160606_O2_\
lacI_titration/output/20160606_O2_fold-change.csv"], None},
  ButtonNote->
   "https://github.com/gchure/analysis_code/edit/master/2016/20160606_O2_lacI_\
titration/output/20160606_O2_fold-change.csv"],
 " from 2016-06-06"
}], "Item",
 CellChangeTimes->{{3.6746460868448725`*^9, 3.6746460944038935`*^9}, {
  3.6750163391860104`*^9, 3.675016364021431*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
oWnEZNSk0FyFK8bVz0elH/3WgoHI0JYfa79b+QhRhkhEhkH90AanIYpMYdKx
dbPGONn0turT395lzPQlm49czVU9uKg1el7Lw0apksgEP/3cRnfUEWjpIjM7
yVRkHhQn7x3WEv/CfGKQ6hcoJAk6fBuketg0m7hfMPtdyTQvAmp2s9HlkJ+w
tg/+bbvJJ8RDIIK8S6t6yz+7iwoKZfImSNs32Ej2tuPHr+6FLjAtTPRBcVaE
72Ciy0UrMvTlx9bvVnEEcZSSyDCuH9rgNDSREWSFL3NAc/stu/Z3crbv27kN
qlKZWUcdo+e1PGyUqvgnmDjMWS5aH7nSZ77neJeeROu/jdPys7LjmYxFBm8G
xW1wIs5h5jhz9fbfQk6E/LZ7o9eUkZ4hmQoJLIZ8v2bHoWPHgvdu9ZkxyUcc
xkV/7RiMRkM68lbtDzkRGplK856MujcbXQ7zIuYSgy0WrvPX+23wnuHaxbgF
8WpIJw//87fyitEZl1t3tnWfv/qXgCNH/NfOcUKjTB1nHJe+cJJ/YWF3dESH
IZ6LF84c0w8/vPuUHwc0ZyAyDMqPpd/NVGQY1w9tcBqYyORH/YSXu7HdynDJ
nSEoSI44uO90mkSzdbwiRo9reRBslKrKBZKtzHsOmrRk9wXFV3TVEBm8cHJi
ts2wM5c9bzMLm+/DsikSmNsvlY5pFFzb62HZXHyg86EspQuI0Phmo8mhIDty
zYiO4o9bdB+xPPSvuM3OxGwSZu+fJnjAv+U/0cpU5lgL+5l74mUDS4C3XVwl
46xG3dxWhqYm+9szackwKD+2fjdDkWFcP7TBaVgiI3qpo9Xoo2S/19BXxDRI
qWpJcV5qQnTEmfCoKzfS8lRJsSjB2YiY+OQc5achP+tmTGRUvOpD2c8hP/uv
2AuX/sqTtOb4GfEXo+LTC6Tdb0Fh5l9xF8PDo+JTclVnEf2CiIvxqXmarf+i
LT+N0cmZ6euHNjgNTGQif0At3F4rLqlsp5CvuFC9gKSIfvWK0loe+nUf2tAg
pQoA2kAbnIYlMg9yz83tSnSCeZsvZCo9OMhXXKheQMKnX72i1NilX/ehDQ1T
qgCgBbTBaWAig3c2L/iKbm6szYA5ey5lKyqN6u4S2QIS2tUrZCJDs+5DUxqo
VAFAc2iD09BEBlF4M3iJawfxOOLgRUHXZUfUqEVGcQWOAkqrV0hFhmbdh6Y0
YKkCgGbQBqchigxCkBcfOM9BtPTddLDv+Rz5F6pIREZxBU796chWr5CJDM26
D01p4FIFAPWhDU5DFRmCosyIn4ltNbBuc8+IZYZaZJTmEelWr5CKDN30n2Zw
oVQBQC1og9OgReYBetfh9PdowqntRLGqqCUy9KtXQGQAgBra4DR0kXnwIOe4
uymGGbkEid5mVL3iQqXIMFm9AiIjoijrRlKu/vcBbqTwk45t+3lr8DUdvEUu
yLkUsGn9xj3hknUvCh/wM64l57O05kYMbXAalsgU56VnKUzg5Ef7oEnpPqvF
N73qFRcqRYbR6hUQGbzBd3mLW9f+q69qO3cGiMg+Od0CM3bemaSDV+/oXtHO
DuF17vdDSBqLL6zTBqdhiUxWsKupmfW4Bet2BYdFxSdePhvgMxJNM7X/9ohk
u33VKy7I1tvTrV4BkXlQlHxgogVmOnxbImiMTihO9ndtgZlPPU6yY6B60ImM
IPvsQkusufWyi9rGJim0wWlYIpN7elavVpg8ZgO/3y/X7lS14oJkTIZ29UqT
F5mi5H2jTDGLehEHtIQf54u3n3sujdHNilsGi83yY1fbNMN6Lj7PkszQBqdh
iQyiOC/lckTokQP+u/0PHD0br9h9EqPGihja1St6pMFKlYTcs7M7Ys0G+t2A
VoyOyD09swPWfND2WzrqvzBZ0SrIOOLeBjMe9As71UgbnIYnMo0abpWqID1o
lAlm5LQnRdqM0dyGqf7IwqyoPV4TnG2sLPvau836OVR2uxmtbJ6oPJLovn0g
5xGFp3Dz9A28JLerL0XeaM8tOUVqwPBWmNmkkEy5RxiJOxWTn81s2XzemZnt
8eaTzyWyvVC1gTY4QWQ4BadKVZAR7IZ3HS1XXqkPTc1tmBSPbNbKWNxPNef5
S5afanF+ao8kGgclGY+o5u37OrnaW4n2b+jovitR+uPJ8kZ7bin8+P99g+xn
5PYhIXenUqNY6fbmyDw0rIWc34oOoQ1OEBlOwalSzTvz3VeKbwNobsMkPbKF
mYNX0NWcYvz+uXFkLnG7tpt8TDwKqvn5qT2SaByUxB5RRv0Wh2WIGi/85GBP
ZLfQzG6DZLksWd5ozi1ToOfmdMSM7P1uynxJ407FtFjpRIYf54vOY7c9Sfdj
a7TBCSLDKbhUqsXJO+zwuOz843mZ567GNkySI1sN2RInc77c0zMsiJcGTuRo
d35qjyQaByWxR1Q3L7kbMydsOspb1wXivdBJ8kbnziShOP2AW2usrfuRDJmD
adypGBcrnciIV+W1F9tr6RTa4ASR4RRcKlX+1VW9MEVTE01tmEgn+DJFbmV9
18vtyaHB+ak9kii/FXtEmU87Jb+DeFbwcPTOVb9Noi25yRbA0bgzSVIlrO+P
FOuCbFeJxp1Kk2IlKeesYFe8nFuPldlST1fQBieIDKfgUqnyEzf0xept30Ro
asNEfuSpb9GRPX1E7X/Nz0/jkUT1rdgjSpIHKXnn0HCp1NaFfCNN6iuLzhWB
9luz23xdrrVD406lSbGS5DLjAHqXXbr6RpfQBieIDKfgVKlmBqPBwvaeZ2Va
2JraMJEeKX5D28bvVhFFKiY2RSLIPJKovhWfvdPcSPkNF3NOTGgjIwE0m8pT
XVmQfmisKWbKC74j3ymicafSpFhJLFj++sVGlY7qAtrgBJHhFJwqVbHjh8Oe
1Po7Q1MbJrIjxZtlS6y4tTi/fNaVPJKovhWf3Wiwf6psV4ef+PM3eCpTXghl
h4/BlfmJm+zQ6Fak4oAIjTuVJsVK8nI70Sgzdf9D970lEBkDg1ulWhDt1V1h
qEJjGybJkaYjttXPohTf+YOYLOk4J5xmb38G56f0SKL+VnL2Pksjc2SnxLtg
aObrj0y5mS+lvNG4MyHnlPld8cbaz9eUB4Zp3KkYFyuNyBRd34h/2HL4b+ks
vGJKG5wgMpyCY6XKv7qmL4Z99d0p6f2iuQ1TvTNLi97uizb4Bx/asXJaf3SE
GS8guUjb81N7JNE6KEnO3sp2+sptB48Ebl06sRdqQ7QdvUfxHR7FvNGdW/S+
rcmog6pvcBp3KobFSi0y/MSNtvgZJoboZLmUIrTBCSLDKbhWqsXpwePNsFYj
AtPIbGxloDb7ER9ptcTfd3Q3I0mCFr0m+cXk0HbH6M9P7ZFE76Ck4uydBv8Q
EJ9Pmzeac/Nv+Nk3wzp9H046d0zjTsWoWClFJv/iom4Y1m/VFTbe9wWRMTS4
V6r8W7vdTImXQBgutiEz+5ELfjzR1QsRGq0QozITovZIondQknpERcYmpqu1
CwvpufOjFuM3uPXaeLplQ9TuVJp7KAlyz/t80wzr5RXBlpUzbXCCyHAKLpZq
cfrxH6yMTEfsT9HqZVE9G/5yA0FmyES5lqDeyb+4sDtm5uYXz16p0wYniAyn
4GipFqWf2uATeFOrNbxNUWSK035z72red945FVNceiIvco1PQLxuPJtJoA1O
EBlO0YhLtShp98iuFp2d1qh+7wwwWGiDE0SGU0CpAgYHbXCCyHAKKFXA4KAN
ThAZTgGlChgctMEJIsMpoFQBg4M2OEFkOAWUKmBw0AYniAyngFIFDA7a4NS/
yAAA0KQAkQEAgFVAZAAAYBUQGQAAWAVEBgAAVgGRAQCAVUBkAABgFRAZAABY
BUQGAABWAZEBAIBVQGQAAGAVEBkAAFgFRAYAAFYBkQEAgFU4IDLCD3dP7dvp
fyzlTa3iV7Vvbh/z37n3/7LfK35T8yY7cu8Kz3HDBtlY2zi4jOBN+m7B6h1H
Im7cey93lpq3d69fCj95JHDn1o3+cS9ryDJR/TrtjzWeY50HDHDmzV4fmvmW
NKWIqkcxB3fvCoh8+Jn5DwW0hFllMq1y7RBWvswI3718zpQxLgNtHYdPnOMb
dON5FTvXMnQ4IDK1Tw/ZYxhmueGuUh1V5f1shX9lu/+h3KePzi62Jaw7W3Qf
MHQsz83ZxrKDidhcb8SFUtm0768vHeHo0L8T+srq5zzVUVBZdHiiBZ6geQ+n
0aMGdUf2hh09jpPrh/BjxgZrwslvVLSS/AGswagyGabSkrLL44kINOnaf8jo
UYN7tyWCz2r++RcsiZohY3AiU/s6em5n/LPWQzZcflIplDnNx8ep4fs2B2ZX
KF2h5uF+W/KIq8zfZod/23XeRVGAVD87N7MDhhk5+ReplJm6kkTvHmK7UBAZ
vUNdmeqlUkH1P9fOJ/1LqxTld7av2n/1UYU4AIXlBYd4yKrWbPqf74TUhzY9
DExkhCXxc9vjn/TwvlFax/gKVBEnLIn9rh3+RJoY+Vp6wtoXJ93w59RXPySW
Kef21YWZeA76LPAdCCLTELAsMu+jRnefce2D+vmqytvYC7lYz77xUf2DGzeG
JTK1L0JHGmOY8cjQF0rjNxRQRdz7y9/iT6CW4y7KPoDqXoUNa4YHzKxEhWir
fnLMvQ1m5Ljj7vPI4SAyDQFXRab2n98H4VdsOfGy8pOpiWNQIiN8FzUO9YRd
Trxk3oz5QhlxlX/7oq6P9Y6iarkL567rSRwhl6eqe3tdWmCt3A7d//ylBESm
YeCoyAjfRH2LBmbs9t6vpk/dtOCOyHTwPHw5QYHLRzw7yohMVe56SzR64pPx
Sa0rUERcycXRzfGvhoW/lfu47nmIk8JjSVieuak/hrX79vRz1GMHkWkgOCky
wvfJq1Bnqd2M6DdqPf+aBNwRGQokIlOePO8r/M9+2++pN3FMHnF1L44NRrNU
7rEKbdy34cPQlV3PvBH1oupKry/9GsM6z7ssDiIQmQZC5yJT8befx9gxEkba
mGDtBoyU/j3u+4N8mlMIy+/6j2iNX63X0oS3IDHKcEdkOv94OvVvBVLPzOsi
IzKf0r3RxFLvLQXqPZ7II074OswFzV2PiZEXC+F/p12JCfHzJUQWX0fN7oAH
kW/ye8nIDYhMA6Fzkal9l3frmrTxHLXVzmLorhjp34kpRe+phEP4iX9ofDs8
FKx9/mTrnRxDhzsiw2BMpubBXhs0TeiZqGIAvzL3V96A/s6LE5Rve4qI+5Aw
vQ3+1eBjL+QiqeZRAJrWtph7qxz/qzzpR/QaTddxi5Ytl+A1rgN6nWb8kuUr
t56FV/L0B5e6S3gbJpBnhnernbeklEAbhgyDEpkvFalL0DtWViqSSvpSQ8+9
VXpPgSLixF91Wy4/zFOesgDNlDsGP0WzWB+uftfVpLUcrVqIenJGrVq37et9
W/ndHIAlOCMyqJfkZoo/83gBuR/h3RgKDEtkvlRkrOiOf9Dlp2SlMNBMZL5U
3d2ABpNt9shOCnzm/9IXDf5s45M1UUQpoLukfzgiMnX/xS7ohl+h57KbpaAw
1BiYyHypfR42EfVvevkojrFpKDJfqu/vc0Cv961IlfTBhB+SvbvijRSX4Cek
nWwQmYaCZZEpi/Mc5JVcTpNKWHbTCw0Pmk6++AYkhg5DExk0CHvF5xvUU+nM
W3XkSmbRkxfPn9wvzIw/vtLeWBORQSuR1vXDv/7KffulnIcPcmJ+5aERGDu/
XIqJchCZhoJlkWFGaQyP6C+3snYb5y7LhLmBBZVsXNGQMTyRwal7n33M27WT
8ly3We9R61OVB4VpI67mxSVf53b157EYtv7qK8p3ikFkGgqdi8yHqx7tjUhf
n2hhtTRNecSNmFtUifmcm7CsQAEOiIymCD+9yL15+fzp/zsdeSn+VvrdR+8+
a9NyFX56nnM9+ty5mJt3/62CJjAA6AoDFhkAAAwBEBkAAFgFRAYAAFYBkQEA
gFVAZAAAYBUQGQAAWAVEBgAAVgGRAQCAVUBkAABgFRAZAABYhQMiI3KQlLLL
/7dj55MefqyjSLVrT+DRM7F3/vmk9Pr/5xfXApZOGznIxtrW0XXMtEWbgi8L
ymVTseVCqNpSsvZ1Uoj/TtXsC8spg+ULqhF+epzw+xYvj7GujrbW/R2H8jxX
HYwTKMYEgbrenxrClhVpU4ADIqN6j98W1j+cfFBFk6rtoBWx9QsZhWV3fh2G
9oFo3dNx5GhXux7EkkeFzTpZcSEktZSszF7dg3Tt3YADjyECVSNe32hhOcB1
DM/NsQex5NnIbu0thf3n1PX+1BxWrEibCNwRGdEq7Lqqdw9TjnkPRFHVbNA+
QbVyqkphdfl/glvHlzmiRC3c/ngmulUr727+Bv/beccdyaaswqp/M6PO3f5P
aT21blfyUlhK1pXkxJw6qUDooZUOxrhCesQo70oBENSV8W+kPS6vk/6ZvtUR
uUrI7yGvrvenEgztIqXo1oq0ycA1kRFR8/R3l2b4Zw6Hn9WSpqp7ccIVT9Ry
gsi2pDLnf19jmMm3cQy8tXQpMmpbSn6662eDYcauQQ/BoIc57yJH4Q0DU48E
6aZ16np/qkBd/xNdWpE2IbgpMl/Kb81FzU7rncXV5KnKrn5rgmEdFqYQ+32I
bdr6b2ewaZDuREZtS8mqe7sdcWm0/TUf9jZSg7qXx50xebc99bw/VaJLkdFB
dhor3BSZz/d2oCGOjotTyklT1b4Mn44L0TebcsV3a3n6SuT6iHWZEZxNY5St
K5FR21Ky+mHQUPzR1tM3DXY2UoOafy/79MY7mJPP1NsTq+X9SYIORUYX2Wms
cFBkqp5fXTcQbxq3Gh0is8euOFWPZdef/iPIuX5y01TLZlj7SYcKK6QPDuHH
7J0j2hBjI+1clp0q+ECqNDoRGfUtJWueHee1xrVzXnwJDMbQUvPqdmRoyKE9
6xdMsDUzsnBafPJehUyxMff+JEeHIqOL7DRWuCMyRr14njOnjXO1Rv0k7KtR
v96Wa44ozy519wwpULKi+Pzsz028LqIE7d3WRz9RqQ86EBn1LSXrXkVOM8Mw
s6nh/1Lu7AmI+BA31VRS1837TPDZH/dEpofJ2PtTHu3sInVgRdoU4Y7IYM3a
mFuYt0HjvVj/bUoekeJUXRdFpN2+enqfr4edCZrjHLs96a3iLSusuB+5ehih
VVhbt11ZyqY4WouM+paSwtLri9H+9gP3FDftqQa1ENZ8evfk70tBPi6ohWrs
sDH9g7i8GXp/KqKdXaTWVqRNE+6IjKi7VJm/wx7XGWNnf34leSrE5+eXlqGB
m7aTTj1X0TKoLc38bTLySMEsV6Yqyoy2IqO+pWRF1gbk5GQx+wr0lDSh6v5h
t5ZoDntLvrgyGHl/0qDD7pIustNY4ZrI4DJTuGsQeovJdmt2BXkqgrKEmeZK
L0/UI/yQshwNxpnPvqEwzKqtyKhrKVl9P2Aw+k0Dd0MzRlPeXSAGPRxEpp4M
vT9p0KHI6CI7jRXuiQwxZ+OM4qn36tv1792rEhmx++NX85JIHhMfEz3bojZs
dKn85yx491B4pAjfJ85DrRxzz9h30IzRlNJowurI4ZDkdtXQ+1MWXU5h6yA7
jRUuigxeN8WBQ1BEdV9yTfIeuXIqYdntNb1Q22HIUfTKXl3FmzKFt9sq8/yQ
DZztHoHCF3oVmZqnvw9FmtlhQRLMW2tKzT8nx5sSLYVMaUtBM+9PWZjZRcrk
QvdWpE0BbooMfs/ePzgcyUyHOdGva2VStXKYu2az3y+bVi2a7iJyd+uzJp2o
1PeXeG0tHL5bG/B/l5Jy7z++lxbhNwlNM9XP/9SjT5GpLiLe+cE6LbndhLvl
avIx2XfK7PVB4QkZ/EcP8pIjd8zojWYETMbKvtWgmfenNrBgRdoU4KrI4Dfn
o8OjWuGft5tKvIeiPIXdzKKP65x9tyWTS+W3l/Y3kU+BWQxZHv5IRTzoUWSE
r8KI6YWW42NKVR8JKPMh3qOtQl2a2M4NVl62rq73pyZ2kTJX070VaVOAAyKj
Q+o+vbqXcfPyhdNhZy7EpT1436QbqQZOXeW7p4Xp16LOnDp7MS5VUEK+0Itj
3p8cyw4HaFwiAwAA5wCRAQCAVUBkAABgFRAZAABYBUQGAABWAZEBAIBVQGQA
AGAVEBkAAFgFRAYAAFYBkQEAgFVAZAAAYBUQGQAAWIUDIqNfL2xZVPtXq5Wq
9j0/atdP03lDBhAXnDp/XUB0EekFAbWgK1xh5cuM8N3L50wZ4zLQ1nH4xDm+
QTees2Q9wsQL+1Pxuf1Klue7D135p4m7+HFAZPTrhS2F1L+acSpheX7QpPZE
Pvo4j+KNdOrXFe01IeNIB2gMg8Ituzye2PPUpGv/IaNHDe4t2hzCav75Fyys
vmfghS18c8ZVxf4R7WYp7v7a1OCOyOjTC5vSv5phKmFp4pJuKOIWRjyqlDxd
6z4+Tr/FL6O2lgNoYVS45Xe2r9p/9ZHEjElYXnCIh3bPM5v+J8NtTnXrhS0W
GYcdf96U4VZaMaUDQhOAayIjgm0vbGb+1ZSpqot32eD56fm/TKpdjgCN0LRw
q/I29sJU7RxPgi73+JWIjDHvT1o79CYGN0WGXS9sZv7V1Kmq8jahcO6vtH0w
oD0aF27tP78PwtTwawSR0QvcFBk2vbCZ+VfTpKp9dtgRZdArFQlcXcXLgvQ7
/JcVTbxZrCM0Llzhm6hv0cCM3d77zNQJREYvcFBk2PTCZuZfTZ+q4vYiZHJi
/UvihXWjuxtLxvha2iwMLYS5JS3RsHCF75NXoQZQuxnRSjvHk8CGyKBxwjZf
9bBzX7Lj7J1XTdkJRQp3REYPXtjM/KuZpCq7PIEYde5i3rrn5M1hiX/n3bl8
ZJkT8jhsPfboY9hbWBs0KVxh+V3/Ea3xFL2WJrylkBi2vLAJPmYdWL1ihfeC
mZNcejQXCaPT+pvvmnz7ljsiw7oXNjP/amapymLdidlT8+nn6udLhaUJP6JH
cBdvyi3vARrULlzhJ/6h8e3wOrL2+VP1GyxS2PLCVspSxaMY34FIadp9d4lK
9ZoC3BEZtr2wmflXM3S5FifrsDBFzkupIs27MwZvymiJeoWLt2ECeWZ4o8F5
S0qJmnezbrtLilQL/JEPttGwEy+atspwTWTY88Jm5l/N0OW65lHgAEzZIFcc
hL23FEBfXHPUKFzUS3IzxTAzXkCuUteZHnZF5sunzBXd8eSdvdObdsuWeyKj
Dy9sMRT+1XSpKrNWI/0aeOCRbPP8U+bybngzbEzkWxj81QKmhVv3X+wC9Mpe
z2U3SzUqcJZFBm+SobZ0jzXZdG9VNG64KDLse2FLLqO5yHypKiDObbkm7YM0
vsvTluFPrpa80/827eax1jAqXGHZTS/UfzKdfPGNhpquUy9sRYQl8XPRugiL
2QnM3tpptHBTZNj2wpZcRAuRwWPomhd6jJoOXf3H1ayiguRzW8Za4Onst91t
4tbHOoBJ4ZbG8IiObCtrt3HuskyYG0j7QqZmUItMVdHJHQfCb2QXP36Unxx1
YIEtmn1vOTLoflPvO3NVZNj1whajlcjgVD08s3iA7DU7jd587TXMX+sE2sIl
Jv1UYj7nJtmyAja9sD9e9zSTO52p3Q/B2bCQjQsio0MawAtbWPFPdmL02TPn
41KLS0BfdIthFa6wuvQZ/++kK+dPh52Lupr2oJTzOdYTjUtkAADgHCAyAACw
CogMAACsAiIDAACrgMgAAMAqIDIAALAKiAwAAKwCIgMAAKuAyAAAwCogMgAA
sAoHREa/DpJMnAAR1a/T/ljjOdZ5wABn3uz1oZlvFVMysi+sfZ0U4q9kKihi
X1hOGewIIYK+VoSfHif8vsXLY6yro611f8ehPM9VB+MEilEigrbudIAa7pX6
yA6n4YDI6NdBkoET4JcvlUWHJ6LN2Zr3cBo9alB3tKKuo8dxOZ9aZvaFldmr
e5AuxxtwADYDFkNfK+K1iRaWA1zH8NwcexCFb2S39pbibngM6k4HMHav1E92
uA13REafDpLUq2kr87ehbRO7zrsoipjqZ+dmdsAj2sm/qD42mNkX1pXkxJw6
qUDooZUOxrhCesTA3layUNZKXRn/Rtrj8jrpn+lbHdHOZgrbIjKqOyoYmkoy
dK/UOjuNAq6JjAi2HSSpwllYEvsd3gQymRj5WvqMrH1x0g1XtK9+SKQ4OVP7
wk93/WwwzNg16CFsBCyHmvvOvYschbcLTD0S6ne207ju6lF3szwpKqpfB9lp
FHBTZNh1kKQO5/eXv8UfSS3HXZR9ItW9ChuGC5r5rETy8GNmX1h1b7cjfibb
X/Ob9paMKlBPZOpeHncmUsuEjcZ1V4/GIqOi+nWQnUYBN0WGTQdJBEU4i7XK
ekeRXDujKnddT8WQloeRfWH1w6Ch+HOsp28aM7PmJoU6IlPz72Wf3niXc/KZ
F/WdYY3rTgZNRUZF9esiO40CDooMmw6SYijCueTiaNTVHxb+Vu7juuchTlTN
FEb2hTXPjvNa49o5L74EBmOUoRWZmle3I0NDDu1Zv2CCrZmRhdPik/cqZAtS
w7qTQzORUVn9ushOo4A7IqMHB0kp5OFc9+LYYDSc7B6rEAFvw4ehc7qeUbFp
NTP7wrpXkdPMMMxsavi/KnyiAHqR+RA31VRS+837TPDZH/dEts+pUd1payr5
hbT6NcxOI4Q7IsO6g6QM5OEsfB3mgkJ4TIzCtuH/nSZ8jkecL1E8gpl9obD0
+mK0t/7APcVNaF5BLRh1l4Q1n949+ftSkI8LarMaO2xMlxoaqF93BNqZSpJX
v4bZaYRwR2TYdpCUhSKcPyRMR9E7+Ji861/NowA0F2kx95acgQZj+8KKrA19
0fGzr0BPiQz1Bn6r7h92Q/bY/bbkS5KrV3eqUau7RF39ushOo4BrIsOeg6Qs
FOEs/qrb8gw5Y5PylAXIQ8cx+Gm9oDG3L6y+HzAY/aaBu6EZQ46aU9hf3l0g
xjwcpHWiRt2RwlxkaKtfF9lpFHBPZPThIEkVzuKT2uyRnSQS2aJg/bbxpSLB
3L5Q+D5xHnLTNveMfQfNGHLUFZnSaMJ4yeGQ9G5lWncUMBUZJtWvg+w0Crgo
Muw7SFKGc/X9fQ74lz1WpEraP8IPyd5d8Qu5BEunu9SwL6x5+vtQpJkdFiTB
vDUV6olMzT8nx5sSDYXM+oYCo7qjhJmpJMPq1z47jQJuigzbDpLU4Sz8mLGu
H2ohuW+/lPPwQU7Mrzw0imznl1sfzcztC6uLiHd+sE5LbjeVPriGUNbKx2Tf
KbPXB4UnZPAfPchLjtwxozeaIzAZGyJ3tzKpOx3AtPr1lB2Ow1WRYddBkv6N
jBeXfJ3byZxo2Pqrr2S70IztC4Wvwoi5hJbjY0oVrwLIQVkrH+I92iqUtInt
3GAVC9lp607xzBqYSqrhXqludhohHBAZHaJTB0nhp+c516PPnYu5efffKhhL
aXjqKt89LUy/FnXm1NmLcamCEoqlXxyrO45lR980LpEBAIBzgMgAAMAqIDIA
ALAKiAwAAKwCIgMAAKuAyAAAwCogMgAAsAqIDAAArAIiAwAAq4DIAADAKiAy
AACwCgdEhps2tYCeqX3Pj9r103TekAFE1U2dvy4gukiu6nRnMawj6j4WRe9Z
6uE22M7aznnMjGWBV+6r8s0Fm9qGFxkO2tQC+kVYnh80qT1Ro32cR/FGOvXr
ihbUy9huEejKYlgn1P53xbs3ykm7fq5jxw61Rns0Ys3tf06Rt+MBm1ouiQx3
bGoB/SIsTVyCNpmzWhjxqFLSdKn7+Dj9Fr9MuWGgA4thKhja1H6pSPfpimEm
Y4LuibeP+fz4/zyQmtgHPqo/GmxqEVwTGRENaVML6Jnq4l02eGX0/F+m8r4t
KmDFYrgehttvVt/3xzPdbKSs44Bo4/CuS+9INqQCm1oR3BSZhrSpBfRLVd6m
XqjelPZIJYEVi2GZUzATmbrnR5FD21ezov+T6Mfne9v7oQ05L0g35ASbWhHc
FJkGtKkF9Evts8OOqKq9UtGjoq7iZUH6Hf7LCvL6Y8NiWAamG4nXPg9zR+NG
LeyXRQgqhHVlGTuGtsJajThQ70cBNrViOCgyDWtTC+iXituLkJOD9S+JF9aN
7m4sGdJvabMwtLCcwmhEhxbDcqhhifIhJ3C8yEKw+wheX2Os0wT/DFkjOLCp
FcMdkeGGTS2gZ8ouTyDG77uYt+45eXNY4t95dy4fWeaEbNtajz36WHkEVscW
w1rY1FY+Or/cvoU0HtsNW3W2UCYgwaZWAndEhhs2tYCeKYt1J+5T8+nnXkgV
RVia8CNq33TxVt7EW5cWwwSa2dRWPw2b0R7DTEfuSrufFODZR7QVeTPrn6Ik
PwNsaiVwR2Q4YlML6JfypB/R46DDwhQ5w5iKNO/OmPKbMl90aDGsGmbdpdqX
Z8bjD7meq9LETtxVz+K2jiZelTEZd0L8TgXY1Irhmsg0uE0toF9qHgUOwJRd
QMU11HtLgWLV6sZimBRGIlPz+CAKxr6/FMrkTvgxfS2aJ8MGHhD18sCmVgz3
RKahbWoB/VKZtboHcWc+kh1/+ZS5vBveoB0T+Vaxr6sLi2EKGIlMZbYozwef
yOnEp3Si+WUlncIAm1oCLopMA9vUAvqlqoCoJcs1kq4HTnnasu4Y1pJ3+l+l
8RDtLYYpYWRTK/wvfCwen0bOAQIZpfgsCBiE+u8zrkieaWBTS8BNkWlYm1pA
vwhLrnmhZQWmQ1f/cTWrqCD53JaxFhjWzH7bXRVmrtpbDOsiyx9ur7RC0ddj
il94SsHDR/zb4X5T0I9Ao4n1GQObWgRXRaaBbWoB/VL18MziAbK112n05muv
VT7rtbcYVkATm1qcz08v+rpayKU1cfQO4ytNMoBNLQdERofo1KYW0C/Cin+y
E6PPnjkfl1pcomXN6csXtub9g7S4C2fPXEjIFPz3ifTlT7CpbUQiAwAA5wCR
AQCAVUBkAABgFRAZAABYBUQGAABWAZEBAIBVQGQAAGAVEBkAAFgFRAYAAFYB
kQEAgFW4IjK05oAiB0n/Yylvmta6j0YEreFi7eukEP+dqtkXllMm+0K+nmwZ
6U0rOZhprsEVkaE1ByRZRgkYCEwMF8XbtKhmwIH6DX/1Z8tIb1rJwUxzDa6I
DAHVAlsQGYOGkeFiXUlOzKmTCoQeWulgjGFtPWIk+1fpzSVSAuXCb31l2oAB
kQH0ACPDRZV8uuuHH2nsGvRQvPGY/lwipai9MwgbmTZgQGQAPcDIcFEFVfd2
OzbDMNtf86XbyuvPJVKKmiLDTqYNGBAZQB8wMFxUpvph0FD8Wd/TN61+I3h9
ukRKUEtk2Mq0AQMiA+gHWsNFRWqeHee1xrCO8+JLZB7/+nWJFOeEuciwl2kD
BkQG0BM0hosK1L2KnGaGYWZTw/+VfWdB3y6RBIxFRreZbjSAyAD6gN5wUQ5h
6fXFyF1k4B6F7pReXSIlMBQZXWe60QAiA7API8NFGSqyNiBvIovZV0oUH/H6
c4mUOTkjkWE50wYMiAzAOswMF6VU3w8YjFo6A3erGBXWm0uk8jUpRYb1TBsw
IDIA6zA0XBQhfJ84rwP+sbln7DtVIxX6comUgV5k9JBpAwZEBmAdpoaLiJqn
vw9FMzEdFiR9VDoRgZ5cImXzRGv1pIdMGzAgMgD7MDVcxG/Goh3WKGGnJbdJ
RUDvtox0IsPJTHMIEBlALzAzXBS+CiPmW1qOjyklOxNCTy6RkqtRiwxbmW40
cEpkgEYOQ8NFZhikLaNBZlpbQGQAAGAVEBkAAFgFRAYAAFYBkQEAgFVAZAAA
YBUQGQAAWAVEBgAAVgGRAQCAVUBkAABgFRAZAABYRS2RwTBsIwAAgDrgusFQ
ZA4fPuzi4jIEAABAHXDd2Lt3r3atIQAAAAAAAAAAAAAAAAAAAAAAAKCp8/9r
BY4T
     "], {{0, 252}, {375, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{186.11111111111114`, Automatic},
   ImageSizeRaw->{375, 252},
   PlotRange->{{0, 375}, {0, 252}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvXd0G8mV//s7770/3v/vrD3eXadNPj4Ou16vd33sY689lOSZ0diTgz0z
9oikco6jNIqjNJIYRFKJokgx50yRYo5iziRAgARI5EwkIgPku9UFNpsACIIS
JFBUfU7NHKC6urq62WJ9eevWvd8P3/vulv/r//yf/3Pw/4X/vbvpi98fOLDp
2Hv/D3x59dihzeH/N3z4Z/jf/wf/oc9zBAKBQCAQCAQCgUAgEAgEAoFAIBAI
BAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKB
QCAQCAQCIXS0trZmUuTk5DQQCAQCgUBYK9TX16fO8/jx41ArjrVAYWHh3zH4
1qrnm9/85iuvvPKsrwKXgAsFpatvfOMbz+HEAB/Lss3837ifo1D/xHcaEl6s
Fwn6ebLHu9IBBOtF8t/Az1G4zWD903s+PJ/XPliv6xO/kCsdQICPZdlm0ODJ
XiSYzp7DP/BgEcQZx2fnzFk+1KJjLXD16tUX60nu2bMnIyPjWV8FVPp7770X
lK7gH77T6VzpWQaD4Xvf+17g7bdt25abm7tss82bNxcUFPhpkJOTs3379qWO
1tTUfPTRRz4Pbdq06be//e2yA1g9hIWF9ff3P+ur3Lp168SJE0/fz9jY2K9+
9asnODE/P3/Lli2Bt//d7343NDS0bLPf/OY3o6OjfhqcPXs2NjZ2qaNHjhy5
d++ez0M/+MEPrl27tuwAVglyufxHP/rRc7jQu+++29jY+PT93Lhx48yZM09w
4vnz56OjowNsLJFIfvKTnyzbTCgU/sd//If/Nr/+9a/ZbPZSR99888329naf
h0CHPId/4MGirq7ugw8+eNZXMZlML9Z0v2ohwsknRDj5hAinlUKEk0+IcFop
RDj5hAinFUGEU7C4fv36i/Uk4V99SUnJs74K/GP0ox9WxH/913+5XK6VnmU0
GmFuCrw9zM4VFRXLNjt27FhVVZWfBuXl5SdPnlzqaGtr6+7du30eAuW2YcOG
ZQewevjkk0/8T/1BAUR+UGQAj8d7MiVfWVkJP/TA24MwBpG2bLMPP/xwfHzc
TwNQTcnJyUsdvXTpEkh0n4dgwoXJfdkBrBJUKtX69eufw4Xg31dHR8fT95OS
khITE/MEJ8IP5f79+wE2Bj352muvLdtMKpVu3LjRf5v3338fXv6ljkZERPT1
9fk89K1vfWt4eHjZMawSYMbZuXPns76KxWJ5sab7VQv83UeeJOHpuXv37tGj
R0M9CsILDyi32traUI+C8MLz4x//GIRZqEex6vjGN74R6iGsBYhwIgQFIpwI
QYEIJ0JQIMLJJ0Q4BQUinAhBgQgnQlAgwokQFIhw8gkRTkEhOzubCCfC08Nm
s4Pig0F4yQHVJBaLQz0KwgtPbm6uyWQK9ShWHUQ4BYXi4mIQTj+lWLduXaiH
QyAQCGsEh9OhNWhFchF7cqyH1dPU21zXVV/TUVPdXv2IlBe5VHfU1HbWNfQ0
dAx3jvBGpqRTaq3aYrOE+o3zjdFo/Ok8xE4SFLBwElPI5fJQD4dAIBBeVKw2
q0Am6BzpKm0qu1uYeC3tOikvVYnPScirzW/pb+EKuPoZQ6jfRzezs7PieYhw
CgpYOIV6FAQCgfCiIlfLWwdaH5SlhnziJmVVlVv5tx+1V/PEPIfTEeqX1A1Z
qgsKRDgRCATCEyCSi2o76+4U3An5BE3KKi+xWTdKmkpZfHbIFRQRTkGBCCcC
gUAIHLvDPsAZSC5N8TNRXk+PSil7UNlW2Tb4eJA7yBPx5BrFjHnGZrfB1Ol0
OV2EFxmn0wmvgdlqVuvUU1LBKG+0c6SztrM261F2TGasnxcjPiehqbdZP6MP
1dtLhFNQIMKJQCAQAkFn1NV319/IjlvKqlDaVNbD6hUrxDCrepw7Oztrspi0
Bq1Gp1FpVaS80AX00rRh2jBjAA3s8YMGWQUNhidGqjtq7hTeXUpXFzUUC2SC
5/XmLkCEU1AgwolAIBD8A5qntrMuKj3aexK8lX8bpki+ZJKZklJv1HMEnKbe
5uLGkozKzDsFd32eS8oaKAm5Nx+UpxbUFdZ01AyNDymmFS5Gji2FRtE2+Bga
+Dw3tyZPrn6ue7KIcAoKRDgRCATCUtgd9seD7bFZNzymvOvpUSWNpUKZcHZ2
FrfUGrQ9rJ78ugKYSUM+m5MSwhKTGQtquam3SaKUMF+Php7GuJx47/blLRU6
o+75vM9EOAUFIpwIBALBJ2NTnFv5tz2mOdBFLf0t9GZzxbSidaA1pexByOdr
UlZhuZl3C2+sw2Yo0OGD3EHvtyUqI7q5r/k5uI4T4RQUsHC6R5GVlRXq4RAI
BELoMVvNpc1lHrNbXE5810gXnt2cTucon5VRmel/3ozJjL1XlJT1KLusubyh
p6F9qKNzpLN7tJuUF7rAawA/yua+lodtlXm1+cmlKT5NScxyu+AOnGKyuIOZ
T4h43vsLoOZZrNzZ7fZ78xA7SVDAwukIxVdffRXq4RAIBEKIGRdO3My7xZzR
ojNiGnsaLVYUGtpkMbcOtHo0YJoOQE3VddWP8kbVOjW9UkNY8xhNRnhz4N3I
rytYSkfBi1TR+lChUcxRbuRD48O38xeFs7ieHtU60Obtc/40WCyWI/MQ4RQU
yFIdgUAgYJxO56P2ao/JrrihGO8ftzvs7UMdPnfVQWVZczl7km21WUN9E4TQ
A6JIKBPWd9cvFUC+Yt6vCTvRgd5mHk2tSHtGIQvIUl1QIMKJQCAQ5qitc1lV
WR5rc6N81hw1Dw5yB739naDk1eaPCyeYW+oIBCZytby6vdo7vhOIpfruBrPV
DG2U00qPyPMJuTfFSknQB0OEU1AgwolAIBBg5vKIulNQV2g0GeGQWqtOq0j3
NjHVddVr9NOhHjjhxcBis/SwehKL7nm8SAm5CWNTHGjgdDlbB1qvp0cxldXw
xHBwh0GEU1AgwolAILzkTIgmmAYBmLx62b1zVNTKrpGu6IwYDzeVhnl/JwJh
Rfj0a4JS1lyGTU8SpcTDfQ5etiB6yhHhFBSIcCIQCC8zXAGXGZ0yLid+Sjo1
R8UJz/TaNFfR+lBvDFm+jOePXavWtj6S59yWJF4SxZ2SJF1RFt7XtVXbNcqn
7Nllt7ks5qAM8oXD7rB3DHs6y4Fe4ol5cNRgMqRVpDEP1XTUBEs7EeEUFIhw
IhAILy0equl+yf1pavVNKBcm5CYwJ6+kkvuSZ+BzsmrRdzXyTkawNr26VJk4
9ldZWuzMaO8sI1C2f0BugfrifRnJ2f027mRs11u801skiZfhck7zzDO9o9WG
yWIqbizxUOYdw51zlLIqWxwNI1jaiQinoECEE4FAeDnxUE2ZVVl4T9wgd9Aj
Q0p9d4N3+rm1ikOvFd74Egmb8LDJ8zuVhfeNgx0W4YRNITFPcgy9LcrilMmL
e1gR67D44R74SFGQZJOLlu0Zpv6JY3/DZ/HP7Zj8ahd3/wceemzqygFNbZGJ
O+w0m57DzYacUT7LI3ZBRUsFjhXW3NccdO1EhFNQIMKJQCC8hPAlfA/VZLPb
YGKq66pjzla38++IApAEawZ4AlNfHwQBwzu9xUw5LS8FCBtDX6so4Qx78x+w
5gG5ZVctE79RU1MILZXFD+gal92mqsj0adQaP/KJKP406DRt6yPT2KBdowjc
uvUCYTQZc2tymW9d+sMMHCqzpb/FQ8A/5bWIcAoKRDgRCISXDbVOw/QwoVVT
1eMqj/kLb6x7eVBX5oBimby0d9YRaPoP54xhuq4Er+uxt76uqS3y09iuUaL+
v9rFrOSf3QaVoptnpcnX/CwOohK5HtTU1JUDkvtXYajG4W6HTvPkd7tqcLlc
Hoo9uTTFp3Ya5A49zYWIcAoKWDhNUYjF4lAPh0AgEJ4tZqv5XlHSgmqqzPSp
mugVk5cHkEDszX8Y2/FH+8oTf8y6nJrqgrHtG0HeGPpa/bScOLGJFbHOOa9I
XVYzMnCdiqQbWKVC8Z0LrHD3UiDvy0hFXqIsNUYQdXTi+Oegzby8rf4mS4vV
9zQ7A1C5IAgtgglta5Ui/x6oL2HMCVBx0LM0NRp6cIU0fqnHGjGtnZr7FrQT
NFipCRRZEechdpKggIXTf1K89tproR4OgUAgPEPgT3vmskhi0T3QUd6qqXWg
LdQjDQHapgrQIaBSnrgHE3eYFbmes/ttPwYrEDlwlRlWH/7qNJuQDerCbo9m
NpVMln4DyyTQY/Kc2y67DR9y6DSmiVEYrSwjHmQPLbGYhbvvfUVBkq69TlNT
qCxKhosKY0+ABmNFbvBj0WJve0N08xwoqMANbsFFIBMwI2PQ2glkPDP0E446
HiBGo/E/5yHCKSiQpToCgfDy0NDTQE9AsVk31Fo1VDb2NjFVU9vg41AP80lw
GvXmKY6hr1VTWwgyQ5YaoyrP0LXXgphB3kEB+BVjn3D/rk3LIkm8hHQRu3+p
BuqH2dBA11ZN13APfMTe/Aef0Qkcei3on7Edf8R+495tZl2uqcv7l1ngo0v4
uomjfwVppCrPNPS3mflsu0oOfdo1SuNItzQ1mrP3Pbfu2v+hujLHFYpoXSK5
iKmd0irS7A67w+lIf5hBV6aUPXgycyhZqgsKRDgRCISXBKFcyBRIEyIUNmeE
N/JCqyaX3abrqMMe3X4KSALp/WugqaYbSqcbyqxSgXc/oE84e959yq1b2Gyl
rsjyeXTW4dC2PYIGqopMulKefQtZunLvLtWn02QE1YS009VDHod07XV4Oc8q
npyj7FcWwTjcJu9k+MK973l3hj1gU0pnl8uMAzJshtUnSbyMDVPc/R9A/wHe
eBDx0E5lzeVzlA85M+lPU2/zE/RMhFNQIMKJQCC8DNjsNmbG1fahjjkqUDMz
MHhLf0uoh7kCbCqZPDOBs8sdEwmkAsz4ioIk0EXGoU4TZ1DXXqsqz5Q+iJ68
uNfL9hImTb7GFBIgqLC+Et+9KIg6Kkn62jQx+gSjmhnthX5k6TcWxikXyzLi
eae3cPa8s7Aotn2jMOa4qjzDIphwGHTcfe9DpWl8ZKluQdch56hNr9o1Crpy
1uWcOIEEEkgvVVm6qjQN7ne6vkTfWY/9xs38sfEvPkX7+IpSVnQXdq0aLSlG
rodzNXXFT/AcnhKhTMjM/ItfV5lKRldeT496gsBiRDgFBSKcCATCy0B1Rw09
DWVVZc3OzsKf8Mz0FiVNpUHMbfGs0TY/ZG97A/v/gAQy81g+m826XNDSO1wS
LiCophvLtS2V6qpcnw2mrhwQ3Twnijsly4jTtj6yiieXCghgn1bCMMaPfMKK
WE/beXgnI8YP/4X2QRrb8w7IJ+7Bj5Fwmg9iAEVw7bAiPxE+gGbzc8swBrQI
ONLjslpg2FOX93k7insU/umtoNnGdvwRLudYiV8QBqQjXiXU1BSu9NynZ2h8
mGkLHRdOQCUoKLomqThppeHFiHAKCkQ4EQiENc+UdIqebmIyY6cNKDx4fm0B
XfmgPPVFCXHpNOpBySDtseU1EDwu65KJSyyCCd6pzUhCRKyTpd/AysHEGcRG
GJ9FmhI1w+63qWRTV3yv/Y3t/JMk8ZKh//Es43HpOxuwhoEhcXYjsxL3wIdj
u97ycTq17Q5/EFz/YuJkBF2Drv4gys+Ng1KCNpJ7l7GYQVehNBh3/4e6tmp9
V6O+u0nXUTddX6Iqz5CmxmALFV20HbVWqcAqmTJPsEB96XuaQTGiCFGcITvl
6uYT8yQHbpkVud4qFT7Rj+upqO9ecMlLyE0wWUwul4uZcnqlkZ2IcAoKRDgR
CIS1Dcw190uS6bmmbwzt5xrkDjGmpJv6mRcjA52ZzwadwKICVIIG8NNS116L
xYww5oTHpO+yWrD1xqNgN6FZp3Pywm68bIdOjztlk4uNw12q0jQQbEhFuJXP
m6L409qmCk19CSt8nVvF2W1TVw9hIxI2NAlvfGnoa9PUFoIkm7y4d/zQn72v
y968AS+Ksba8psi/5zNmuGGok1phRH2CcJJlxMNNzbpc6FGc2jxH+UGBJlRX
5YlvnUeGrwDdxekxbH0dhJYw9gTcJvRD7+CbQ8a9SnQjsSeC8hNcEfDq5tfm
0y9qcQNaNFRr1fT68vX0KPVKIlkR4RQUiHAiEAhrG6ZGyq7OmZ2d1Rv1sVk3
PLzEVz/6rkbQJ9ilZ3Zp+xjICexuzd78B21r1VLNbHKR9P417r732dvemLy0
1z6twvUgctAi3eV9NrWC5RWsctbhMA51Su5fpfPNseaDKU1dOTB+/HO6BtSL
rsPTsxrUDrWK945FxLPKhHBR54xhjnJhUlfmYFUG4wHxA8KPduc2TbCwtzbc
kaIgCU60THEN/Y+n60vYW9+AQx56DJpNnt8pSbwsz7oJEgvb3NCQvvhMfPs8
SDh4PsqSVPWjPPXDbOmDaMHVw9Qi4zpmD1AJDRxGHcoUc/SvKPYUNdTnjMli
YqZNHOUhx7POkS4PNRUgRDgFBSKcCATCGsbusDP3IimmkWtxbk0eXVPZVhnq
MQaEqiwdT+i6xzX+W8qzEqjFso/MkxwQKvrOemVxChRNdb62pdLiVyU6TUbO
rrfhKmifvt3GopLK+WyJvKfaqt16hvK2osvU1wcNfW2zLh9b2EQ3z6FVs2bf
zxyUiTz3Dh0TgNYwrHmHdlR8moy2vAbjlCZfAykFd82MwiRNjYYGytI0LK5M
3GHv64I6gpsFkQZiEh6R5N4V7qGP6atLkq6Ib38Fnw39oYnuxZni0K9rXE78
jHnG6XQmFt2jK8WKQINXE+EUFIhwIhAIaximM21F60OomRBN0DW3C+5YQxos
OkB0IFE2vcrZ/bbPeX9Ry/Za7PyjqshibslfZB06sUlZkmqT+5htNdUFyKKV
e2eOiqHE8hWaEmPXKPFWOFn6DWXJAxRMiRJRk5f2mjhD3gYxh34a28HGdr0F
0k5VkanvarQIxr0X5kBxzbD75Vm3Jk5GMH3IOfveh5FPXtwjjDmO9g/mJWrq
ivnnd6JFxiUckIyDHehpHPoYZdYbaEdriFFHFy40O6upKcQaib31DWHsCWhD
H7XKhMqiZKaKg/H7f/jPjrLmMvqlre5Aypk9yaZrMiszl+0BQ4RTUCDCiUAg
rFUsNgudky46I0Zv1CN/p9IFfye+mB/qMS6Pw6hD62KR6y3Uvir/YBcj93Qf
Hjb19UFlcQpynKZ8odWVOSji07zdhn9mK9TYp5ULp1PBJEEzwGddBwqR5DO8
kk0l8+NhTnlAbRQlnAHdAuLEzGMJY0/6jO/NovffnYoUXDsivntRknhJfOs8
Whqj7VfYJzzpis/7xZEWfCZbsYj4yI08fN0MewDXTBz/HO4dN551OHDAT9B7
/HM7sAhEF7p3hdkbNNO117n9zCPWa5sqlv0RPAvMVjO9YHc9PUqj08CDZXqJ
B7jcTIRTUCDCiUAgrFV6WD30zNLQ0ziHtngv+Dvl1eaHeoABMV1XgswdmQmB
NObuc0cekCR9bVP4jvPj0Gk0NYUoWcn8EtjUlQMgq0AOodjaxz/HzUDAsBi5
UeYovaR+mI1DJy2SSTvfEkQdVVflqR/lgU4D7QFayH1o159Ym8Lo5TxhzHFD
X+vMSM90UwU0m7ywm3vwI+y4taiEh3H2vQ8iUFNbLM++DTXT9SXeNwIKZ2z7
m6COvA+Z+Wwc4YoZSQC7xGOzEjZ/8c9ug5uao6xPoK8mjiHBBiIKdCazN1CS
rHnXdOn9a4H8IIJOD6t3wa+pET0NgUxA1+TW5AbSCRFOQYEIJwKBsCaBqZD2
A4nOiDFZTJ7+ToxQiquZ6cZyVmAhHPWdDVh4KAvvB9KzXSVXoxW9CA/dMsPu
17Y+AvXC3f+BRTBh6G2BDvlnt3s0A82jyL1r5rG841/NulyG/sf0Fjzema3Y
wGXXKKabyoUxJ3yIJb8F1JEo4axFME6PXNdRP3HsbyzKC11w7TBov6nL+8W3
z8NQFQVJeEehujKHOSpNbRHSYE3loNxYVMwEj+BOLpsVCSq8HzDmONZUgGWK
y6J2COIrQv+BPN7g4nQ6mRFccfTLzMpMuiaQ7XVEOAUFLJxqKVpaXqSouQQC
geAHnpjn4d00yB30qHkhALHB3vYGKA0/CeDmqCADKFIBtQynKg/U6QUD6ghb
YAIp2MuajrnkNM+oq/Jk6TfEt85L7l1RV+UaR7qhcuprtGg4/sWn7O1v4hMn
z++iVwlBtEjvX1NVZOra61AkJZXcadTDWTaFVHznAh1F07NErAf1ggMyLF8i
1guuHdFUF9CWN+zBpW2pxBlqmMY0JuZJDp9SeqC+YIQoVupwNzL65dy2q+V4
UQ+k1IqecFBg8Rf8mvBmOqanU21nrc+zQHHVzkPsJEEBC6ePKLZv3x7q4RAI
BEJwyK9biG8pVUmhJqXsAe0lsqL88iEHOYeD5Ihcr6ktWip2t6o0DSZ0pDoW
u0AHjiL/HrILnduOl9XGD/1FknhZfPsrwdXDKNQSUj47LSIedivC2e40dcUe
cQn8F5B/yAd7uMvnAKxSIffARywqpqUsI15dmTPdUApijOkijhfy8IeJ45tM
PLZ9WunQTzsMOrSFsK9VnHQFDf7oZ/TOOOqmduge16jKMpAZigqTzjsV6edR
wEPW1BaOUZJPmhqtLEpBpqqGsrl5s54o4ewTPOGnBCQc8x3Wg9R0Oeno97FZ
N3zudDCZTB/NQ4RTUCBLdQQCYe0BcwqtmtIeps9RiVOfLPTNKsHQ14ZiFiG1
8LmqItPQ14q2pM1HFpp1OMa2b4QCEgLEyfiRT1bav00umk9pF4atK3hTv7oq
j0U5e4OQADkB/dOqw9DfxqI27Muzb6mrCz0idbuVEmgwX27h/LPbphvLXVYL
PQDoGeVnobbpMeNPmiZGOfOe23Thnd4CQggvEc6M9opunvMQV4qCJJfVbBVP
gvrC8TwpCxJ6gOJ7SFmBBF32mYAkW/CBj1gH2myO0lTc/R/AQ17pEw4KTKtp
cx9yxGobaKNrBjgD/k8nS3VBgQgnAoGw9mC6hQ9PoNSxpYwN3QKZINQDfBJA
26CNYItjGY3t+CPvZMTkJbT1DISHJPGSe13sq10gTkDMwNTPPfARZ+97Yzv/
hMNF+jcKcXa/Y5y3CGH3qrFdb9HRn2wKCbK3xJ92mowoBV74OhN32DjYgXXL
5KW90w1lnIMfgvrSVOcLrn9BdyvLjDcMduDtfrTIgSGB6HIaUdh2vHuOmR14
jnJHx+YveVaCXafGLkZwFzgdsMOoEyWccXe1fSO+x4Ub2fMOvZ/OIpwQ373o
PrTlNVbEep8b8Xw8c5XMrfTObKUr8d7DkMTDtDvscTnxdBIWh9NhNBmvp0e5
9zvU5Pk/nQinoECEE4FAWHtkV+fgqSQqPdpqs5qtZnpyuV+aHOrRPRV2lXy6
qVxRkARKAIQKWttaeqc/K2IdyAxQPiAqPAJLLlVAnGiqC5zmGUNfK4g0ECRm
Ppt5dRbKP3JS21RB6xz4P6VtbsJnVUUmWt5KvubQaxcWy3CqlJ1/Ulfl0gIG
5d6lXMQ5u9/Geg/EnsdCpCDqKIvh460sSaVtR7r2Wpy82MPWtMjtPDxsuqHU
PXK1HF/UXd9UHsjTNk9ycFfKouSFUV07AjX2EG0uaOhZSGDHon402Y8Wve1+
ziXCKSgQ4UQgENYYTJmE/wYfmRih55petm+X4BeXWZdTkZeIJvfCZItwAi+Z
WUR8ZuxuQ38bLWO4+94XJZzBASRBHYE2sGuUJs7g5MU9C/IDq5HwMNpog7Fr
1UjhXNwrfYAicmP/avXDbBbl7z3D7kdyaOsb9mmV4OphqJSkRFHt9yhy77qt
Uud36rqbUAhxynSGlMx8rhNd+6IULQ6dhkWF66TVFKgX1GfyNQ+xB/pK21oF
t+yy25TFyB8Jx7NCKfDCw+Ae51Bo0LqFcykhJ0m8jFO6+H6qDruy+AFtoFOV
prlHpZ+GMUPx3kv4fJg2TNMvc2kzcrti2lfZk2w/5xLhFBSIcCIQCGsMpkzq
G0M70YobS+gagykEKyzPGlV5Ji08sJWGzj3nNJtEcaewCpIkXgKps5R7uTz3
DjTTtj2SUUlbqBJGb8mnQetl4WG8LyNZ85EnQX5goxMuwvgz6odZWF/ZlFJU
E31sjlrmw7Ya0DMwYItkirI+Law8jh/+CzMap7alksUIraCpKxnb9RaLythC
nyJJuuIRrgrZxMLXcQ9+zIpYj9pHbmBvfd0mF4NMwiYybBzD8lIYc9y12EQD
94KS8SV9ja8F/8cuUtN1JaDKYNg4RFWAYbWeEbSLeGzWDafTqTPq6Ne7jJJS
S0GEU1AgwolAIKwxSppKF2TSjMHusMdkxjIdxdceOCeLqgzdnfj2eWxxmqPS
puCd9bzTW8w8lv9OQE5gI5LTavY06Vz/Ql2ZYxofmXXYNXXFlPjZwN3/IfN0
TX0pUwVhQ5A0JQpkzNjut0HtGIe7QORoH9dgTTJ+5JMJRlJguhiH3B5WooSz
8NXtzkTZebwbO3wFL5JQG+ug8M/vxOFDQbCB4GFveZ1NdQLDcBr1OAQo/N85
Y3BZLfAMRTfP0VeBD9SC4zQ2YWlbqvhnt2FbHDyopcTn86GV4RDOl6AfNC2l
bmTHuZYeGxFOQYEIJwKBsMago1w+KEuFr+PCheR07UMdoR7dMwH7MGMHZnnO
bUp+dMKkj0Nhi+JPeyeP80aWhqwxJu4wTrbiu0RuAHXBPfAxlhbM07FckT6I
4p/bzmIEDfAsEYs8sujsKlhNuStPbZZSa2qcPe9giTJ5YWEZEe90w7ECNLUL
gcFxkjv1w2yUkzfcHa5cnHiZDmOOCzTA7UEsYesc98BHtFc5Z9fbkntXULKY
+SeGTVU4hqcw9qRPqfackWsUHqnrWvpb6Bolw2rnARFOQYEIJwKBsJYwmowe
c0p994IzrUqrCvUAnxV4Rck0Noi3wqnK0rFFRXL/aoDmESycJElfLxl/0qsg
56KWSk11PvYd4uz/wKqS4e179mm1VSowcQbxIWHMCXn2LZS0zqsTHOXbYdSb
eCyPQzAYfVcj54A74iX38F9UpWnCmOPIBER5p8M9zlHb69SP8riMqAUgw0Dq
jG3fuEiknYww9C6K82zXatySKXKDLP0GMql5PSv++R349MmLe5luY6HlTsFd
/EonlaClTOZfB0PjS2aCJsIpKBDhRCAQ1hITIuYMMgQ1WY+y8df4nFD6pTxr
cHTryUt7zfwxWioIo48FvqhEb+33KLyTETguZSAFx0pS5C2kBraKJ5HVK+4U
GuRgB7bqqMozsPc48t/GJ257Yz6QFJIx8oL70rQbXCqyk88iTrrC3raRFR4G
YoxLBTNnb/6D+M4FbXMl6B8cCcplNZu4wyrKd5295TUcmYrGrpLjKOh4Ix6O
b+kNZ/fbOP4niNIn/Nk8AypaKuj33Gqzev+94BMinIICEU4EAmEtwXT/UEwr
ZmdnaQenZaPcvOighbnI9XjjG15KwyGSlsXMY7kdyD3LouU2/tltOFmJz8LZ
+557kW7Tq8riFNBvmtpCZUmqsiwdL3WBhJNnIrdzXYd79xzOgYLK5g1cryiX
KyqyjDibUgriZ+rKAZB5vFOR4rsXZ1h9DoMOrwZyDyzyyJp12PnnkClJlnbD
IuShaFGR60HjeTwZHPATR0dXV+WFaiedN8yddEKZcI6xQp1WsaQjHxFOQYEI
JwKBsJYoqCvE0wfoJZfLpdKqGJGW13g6TtFN5E2NLTys+b1sftC1VUvvX8P6
gUUlOvGtl85s1Xc2gAKxq+TsrW+wN/9BEHUUx6VcURmbT1onunmOHgPOEQMF
PjNtZWg8lDnIo8BoOXveYdaAWDKNj9g0yslLe2njFe1hha1JMGZQU8x7x/Gm
hDEnsBbC3vUgCz0eEU5kI02+jtcTeV9GYmf1kCNSiOkXu2sEudMXNRS5ozll
RDuXCLNAhFNQIMKJQCCsJe4VJTE30DFDE3AFIUjM+jzBa20zYwNYM0juXfHT
eNZhp3eQgRqRZ90cp+JyozIfUdM8yUGZXHb8EYcdwGEqNdX5c1TqYexDhcv4
kU+nWyuR4/dmz8jkIFp4Z7aC1lpkUwpfp2tHSWmnm8pxjTzn1sKC4GIHcuGN
kzAAE3d4gh6hd6HGDNoJW41mnU71o3zW4tiY0tRo40j3rMuJ0qYc+BAGxvT0
xrdjHFzYPgD3iPbiQTP9tEU4IYw9waLWFkFGPpOf30qwO+x0sDIczYmZe2Va
P+3zLCKcggIRTgQCYS1BL8yVNKKQ0czZRGvQhnp0zxa8R0w8n3XFf8Y6bN7h
n9+h73/MOxnBml/dYxiINs7N79HD/j/Y/9xpnsE9gDjh7F4w/mBVA7LKHaI8
PMwqFdg1SmagJCS3GGE2RfGnJfevLmibyPU+lgK3/AEHd3IYdG63qMVFkZdI
b83j7H3XNDFqEYxPXTmwlMTin9lqoFytpq4eYj4Q0/gIOnrWnezeKpnC3SoK
kug2+p5m0FFj299cDXvrkooX/Y0wND60sHgnF/o8hQinoECEE4FAWDNYbVZ6
7qjrQo40j9qr6RqH07FsDy80tAmIu/9D/FnfWY8POYw6TW2hNDVaWZRMxcB0
Yp0guH4EL2YJY0/MjA2yIjeM7XiT1hizLhfoBxYV+hs64Z3aTAknE+5T39Xo
oUlAUbjsNjqMkiwt1uc46QYehimbEgXb9Nh5J8+9CwoN9JjPOE7sbW8YR3qo
UFHvyBfidroLdpU3DLS7pd3JCKwt8ULe1OX9ng+QUoYWER/EEo5zLn0Q7dFG
VZ7BoqKOB/EH92TkVOfiF/t2/h34yhfzPVKxeEOEU1AgwolAIKwZ1Do1PXd0
DHdCTUG92+UpLic+1KN7tlilQuybxN33vkU4YRGMsyLXc3a9bdco7NMqHNBp
wepyeut0Q+m8nWcDDjmOa3DAIlyUxQ+gfvzIJ/BZXZGFK8W3v7IpJC6rhbnV
jk6EZ+hrwxG/3bKHSmDngUU8iTbEMcaDM6SASJub98emiywjHgs2EHjKohSH
Xot9nFRl6TjtyxgVpsk42GHmsxdOjFg/3VKJL6fIu0sZxNATEN+5oO9ucjto
hYd5GI5wCFAcUQoenba1ynvwsw47Sl4Tvo62vIWK8vmNddfTo2ZnZxXTC8Gd
uke7fZ5ChFNQIMKJQCCsGaakAnruGOEhJ97U8lT8Nbk0JdSje4ZM15e4E+bu
eYdOkoIdm0H28L6MwJrBNDaoa6t2W13mi3EETbIuq5nSA5T02v8BDjLJotKg
+FzwYs/7MuH4A27tFLkevs6M9tLZeynlE4fH47LbQKEJrh2mPbf5F9wmMvEt
FO1c39U4RxnHcD4XZhHGnqST6hp6W1D24V1v0St3cAnarEQN6XU6TDrSOZQ7
EzwWvCKp66gzcYdxEjr+V7tgVE6jfrquZMFlK3wdSDI/GxJxwCumN1RIaOxp
pN/2GfOMyWKivzb0NPg8hQinoICF03GKK1f8eRISCATCKofFZ9Nzx6RkEmpu
5t1a27EIZmdn8R5/7FCt72lmHqVTyI0f/QyHNsKgqJLze9NEN8+CusBRJbGk
0fe2KPLv0S7idEFbz7wqFbl38Qdt80MoLGrjv/DGlyzKOx3rLpBqkntf02tt
Eyc24cuhEN+MrqYbSs18NmNz3yKTlMOgo8evrsplHmVGHeef38nUPPjhSBIv
wWeLcAJuEJTkrMOhqSn0vgooTFlarEO/jC8cXqNk+j6FBGZEArkGRd6g3cUr
Wh/SzaxW6/F5iJ0kKGDhdJsiLS0t1MMhEAiEJ2eYsYdOJBdBTWzWDbeveFNp
qEf3TFAWpeB1JRaVkM473CVKd4u106E/a2qLbNRjmaNWxDz29SNbzbaN080P
+aep1brI9czdbbyTEfreVtoS5VHgKrPUFnicKRhrJPaW16Sp0di2Q3X+hiw1
BqQRDNId1ZzKZkIXec4dbL8S3Tzn8yqg8ej70lIBBDzK5KV92pZKw0C7iTsM
NyjPvoXGduhj54w7szOVVvhVdWWOjDq00HP8aavMt0O1N9g9DO7laX94T8fQ
+DD9tosV4jnGzojSpoVgnjab7fY8RDgFBbJURyAQ1gyD3IWNRRKlZI4xlZQ1
l4d6dMHHLBhH6VGo4NugUkwTox4NkKcTyInzO5E/9ryxiLv/Q8G1I8KY49gu
RJeJk+GauhKswaa+PjTDHcKxK8cW53qjct0uzkMXsQ7nFMagpC2L9EwYLd5A
LykKkqYu76f62T51eR+LsdiHogdErAPlA8KGNb8OaBVPMvWVoa9VWZzCZ2zN
g7NkabHS1BifWouz+23mY7HJxW5NiMM90Z83/0FVnsk0yvnBONbPotLBBOWH
+MSM8Bb+TMAxMOOy4/HX4sYSn6eQpbqgQIQTgUBYMwxyB+mpRKqSQk1URrR7
8aKlItSjCwKzs7OWKa66KlcUd4q5pDVx/HOzr41U0/UlyMBSlTtHeY+rKjJB
Mi0IFWZZKievV6HjWNJJ3PC+fqfJqG2uhP49ojAZBtrh6Ax7gFJctP0qfIaN
5Afvy0imfsNJe7FzFDYxQZ/yrITJi3vZW173HAll11KVpIoSzi41WjjEfCCG
/jZcL8u66TSbuIc+Bsk0XV+Kb4p74CNNTaFdq/Z+ks4Zg+5xjTD2BO0GzzsV
GdrUdSw+i37bp6TIrz4+JwF/LWoo8nkKEU5BgQgnAoGwZhjgDKxV4WTmsWTp
N+hZmxIwGzlUSEl1deFSqUDwxn8TZ4hZaVcr5Nm3lvL6Bj0mvndZfPciiJap
rw/ReXI11QUgvbBftGeJXM9hWqXg68GPsX84i1opoy9tk4uRb/bYoE0p9RZC
2PLDXhy1csF2tOddUGXyrFt4kx3/3A5mDKiJE5tAieGr4Jx0FhEPLyxq57fX
AfRSI26M9+UZBztALEmTr9GSj3d6i+TeFXjg8qyboOugc9pex/SnYqGIDSHT
Tt7CKSHXLZwK64lweoYQ4UQgENYMa1I4zbAH0MS9ye0mJIo7pakrBlUAYgnb
auhtdN6gEyPWMUNQGnpb8GIcKAH+2W2ytFgcuJIZW4C99Q2QTx7J41RlKMqi
mT+2EGdp8wbWEiLHWw6BxuMe/sv4kU/QhQI7a1EP2zYKrh5WlqROnESPYvLC
bqd5htZmoHBmfSUZQUGoIjeARKRrnEY9jn8OzwE9jT5kgAI1iI+CnEPrgGe3
eytD3peR8pzb+q5Gef495iFtc6X3dZ8PRDiFCiKcCATCmmHtCSccbpFFbUzT
tde6rBbmURxYwOfSEuA0m1jhYbxTm/FX0FeC618EInKQOzdVFlYDoTI8bNxX
8jh3CQ/j7PsA1MXkxb0gPLgHP/adzC5iPWte7SAz0fFNi/zAvbbsLTXCya92
0foNK7qlQNEPNr1qlQroGgWlfHAwAZfFzGJEC6dxGHQWwbi2rUaed1eWdUua
EiWMOc409/HP7QANKUn6GrTWE/xYgwIRTqGCCCcCgbBmWGPCyTLFRYJkzzs4
1JI3yKEIhNO0asnTqfBN0w1lzLxyIF1A3oAYUOTdVZVnamoLaR8h0AZjuz23
2i1Vxna9RdupbAqJ9wAceq2f1CdTVw+hWOWLK5Hiolyw8Eri+JFPpq4cnDj2
t6XW71ibwiT3rxoG2pfy68bREoxDnXQNXm2cGe2Fz7MuF4sKB8o8BVSWJPk6
Z7FLPItyqQLliT3VlYX3A/whPjuIj1OoIMKJQCCsGdbYrjrsw+MnpSwOUrRU
JEbT+CiLcoVasPa4F542gOJinoWDGo3t/BOLcts2jvYaBjvkuXcmL+2lgwks
XrraAEpG/SgPf/WTf8RpMi4ID6p/n4V/bgf3IDJnWWRCVsS68S8+U5amIpPU
lxHu8YeHgQIEeTbrcBiHu+lsv7RdC5qB/NO113kE9AaFA0cN/W10DQqEHrke
ByiYnZ1lCif4SmtIJJOijqpK03TttSYOcsrCoR7MUxwWFbEzkJ/gM4XsqgsV
RDgRCIQ1wxqL4wRTPOgTP3vkYU5H1o+iZO9DlikunWZFfPcS/yy1Ay5inTD6
GE6hAgV0F26M4x3hhCOe62JbX1+0iBYepm2txr5V9PY609ign7vQ1LpDTSqL
U0QJZ+CD+mE2zgoXSOHseVeafM0qnly4NSrGAnVfF+HhgAKEBgsGosgNwtiT
M6w+3BjHuaLjgponkewBRYS/YuHEOxkB/ZsmWIKYk/OGr4+Weuwum5Wz5x32
ltdCnueXGcdJtHQcJyZEOAUFIpwIBMKagbl4Men2+riJv+bX5od6dCsG5MrE
iU1+GtinlaATOHvfoxPvYkA2uAUPFZ0b515BW8bC14HKMvQ/VlfmcKgluamv
DwljTvj2R6Jy+9IWJ/6F3aB8WFQsJnnObboNnO7/LlC8bqol78tIbD7yma4X
72gboxzXuQc+xBsG9V2Nsy6Xw6CDD8qS1EULjigbL4++CjQzcYZA+9G7BXmn
IrUtlcLYE/AZ6y6QSXhxEyehm3U5lfjJeI2Es+ttP3ekqshkys5Q0cvuXYgc
rpYvihy+xMI0EU5BgQgnAoGwZgCxRE8lozwU9vBBmTtXXUrZg1CPbsWA+Bk/
9Gf/bbCZiJlL1zjUibabha/D7j3YtsPZ846qLH0pTyFcP3V5v669zioV6h5X
0wYczu63ZelxSFmFh0lTovjn0I4zeqUMNNuyhhczf2xZs9IUii61EJ1AeONL
GBJIIIuIz4w54F1AWCqLH9BjcFktIIqmvj7IobcEhoehRHWUG5j6YTYWfrNO
J7QEyee+i33vI7f58DBWxHo4Ov7Fp3CKnztyWcwo6Hr4OvMkJ6Af5LOhqbeJ
ftuNJqPJYqa/1nc3+DyFCKegQIQTgUBYM6i0Knru6BxB/sD5dQX4a3xOiO0D
TwDWPDPiSY1eIlfxpiSDPHEnd6p1QtjOFfXwJIMSJVslY49R4SLl2bccphmU
8SRiHRRdR51VIcZhLdnb3zSNo5THdrVc97gG2oDQUpWmTVHmF3nuXYt4EtmU
zm1XP8qjLTZcag/d2I43bUrpzEiPzy1vDv30sneBYyX5LMI4d+hLbVPFDHcI
D9W/xFIWp+AMd/zzO5DnOTWqse0bVeWZFuHEUhlhWJGgiHaDLhrb+Sd4CDAq
rJqwgcs42IH3G+o76+EQzgXsnbyGib67CVvkgvSjfhIqWh/id/t6epTL5VJO
K+mXv2uky+cpRDgFBSKcCATCmsFitdBzR10XmgSrHj+iaxxOR6gHGCizrjmX
a1ZTW4CsMXHHhdLhCUHnILe2j/Owe7S4m1XWy66Er+zJNqFsUM5qdhtYqNUu
9raN4lvnkTCYD+counnOZ4RMkBBuC4zDsSA5ItZBeyy0cC5d3umt8sWZ3Wg7
lc9w5TROo95nwEze6S3jlP+VTS5yO1xFrjdxkHCSPoihDUF0GdvxR2lKlHG4
G0e2FN1E/tsgk+CzQ6dRlaUvOMBTuwhh8OYpjiIv0T3OLa+x5xsI4065LGa8
ejhxYhMc4u7/wGkxIQMXZdyzKSQgxuBp0E8MdCNoP0nS1x72JeQ5v+nVEBqd
cqpz8Yt9K/82fOVLJhfMrXyWz1OIcAoKRDgRCIS1hId/bOtAKz2b6Iy6UI9u
eVzzhg6r3arXy9lHkZ7pzrzQ0JVR0XK7rDmhqD66uCGmpDEOvla23W/uyetl
1XAfpXkkOmFRe/lB8HAPoogBwtiTPpPYjm1/k7PnnYUo4uFh2pYqZgP+uR30
qpyqPNOuUQpiji9c4vBfmNE1MaCXjEOd0tRovPrGPfjxdGM5PTybWgFt0GJf
+DoQJ9Anrsc6x0OhTX19yCLkeRh/8FIaM+IlVoC4QIe4Ejt+L6ivnX8a24mC
fnMPfIi3zuFMecrC+zBaSrNFw1nS+9fg83S9e1eay2qmVy3Z296wTHHpi2qb
KigLWMiWgO+X3McvdloFimQ1PLHgKy6QCXyeQoRTUCDCiUAgrCUSi+7huSOj
Ek2gzNlknLJRrHKwcHLNzc5YtHLdJKuzcDRy/ciWDXVV1wqbogqarubWX8xr
uJTXcKWoKbqsLa62637bQO7ooQ/Q1F+eahzp1rVVG/rbzJMcbDOxa9U4RwmI
IuGNL03jI7QtRd/VSOslSeLl6YYyLG+kKdedJqNVPIltO7jMUFvnsN8UKlvf
wBoD9IaZz4auVKVp4ttfMRfLQJIpi5IdRp0sI441702EL43z/ILEwoYmyuiE
vNDpPHqa6sKJ45/DB8G1I9jQhHGaZ1heIStxTMuxHX/EQdGF0ccMA+3C6AWB
B93alFK4KVlaLDMr3/ihP4M0wlEdDL0tcBaLSjpDb6nD6kh08xz2j+KdjKAv
Cg+WRQVSeIZvw9I4nA7aFbykEe0YfTz4mH7VNUs4nhHhFBSIcCIQCGuJ/Np8
PHfEZMZ6OH60DrSGenQB4nLMWqQa/givuaE3s+XuQZig+/a+mVJ8OKniyN3S
g/fKDyeWHUquOJZWeSq3/nJtxjFoMHRpu1g+qp/xEQwTZAAIANqje2z7RpBS
dFAC+GDof2yTi60yIR06gFnwHrqxXW/jzC94O974sb/itSrv9Tv++R2glPSd
9Vh+4JgJuGAnIgCHkQTVBG28XdZB+81ReXXRtj7K9R3kjUUwAfLM7eB0Ziv2
1IKCY4+zt7w+deUA1yu2ufDGKXyKKO4UvrR5ikOv3OHIojhKp0Ov5Z3ewlqc
2k+WjpYajcPIZWjy/E4WCjeqpI/i9nDis3oRlkailNAvdscwcucrbizBX6PS
o5dalSbCKSgQ4UQgENYSLf0t9ISi0qpAO9GLd/m1BaEeXUAYzTqNTjzCa23u
z3vYmlBYf7X5DEp90vrFn+4U7oov2pFQvDO+aNet0r13Sw4lPzxeG4OcmVtT
T42ON0mUS7rczM7OGvrapr4+SFt1nqAgkePLS5wKFFlnEYzPOuzMi4IYQzvy
5tfp6PU1UFDIWpWKVseE1Nof71TkgnWL1Wcc7FA/zBbfvbiixHbIVenoZ/Ti
2uRXu9CNO+z801uxTclltSDz1LzRCS/JIdNW5Aa8tAfykjl+ZUkqEnIddfAZ
281mRnroo+6UNxrl3HOnb6zPI2z4nYI7+GtqeepSZxHhFBSIcCIQCGsJroBL
TyjDE8jDOaMyE39NyL257OmrgWm9Uqoc6xurru9OLW2KSa86fb9kf/tBtN2s
6egfY/O23CjYFpu/Na5w++3SA/fKD9ddRLaj+uzT/ZwqoWzJWJR2lVySdMUt
e6h1sfGjf5UkfS2KOyWKPy1KOCu6CeWc5P5VTXWBaWLUzB9TV+UKb3w5deUA
NBDf/mriywgPocLZ9wGVaTdM/SjPKhV6OCO57DamHIJOmIfGdvyRvf1NYcwJ
HFHcbXeiw5t7lMgNvNObcUvQfob+NuNwN+gZbEYTxZ02cQbtGgUewKzDATfF
3vq6jQqCOscIiYDzzbmlY8Q67r730UhQ7hi0PMfyWnozDnexKG+ouXmZRKe9
cxh16Ba2vuEzv/Cz5mFrJf2eW6yWGfMM/fVRe/VSZxHhFBSIcCIQCGsJw4yB
nkFqOmuhpq6rflnfj9XD7KxLOS1gT3W0DeWXtt7IrD6bXHHsVuneW3lb2/ch
X+vcqA+u50dAiSrYGl24+WbJnoqoz5BwurWrqS9rlN/m3adDp0G72yixxDnw
ERYbwtgTzODYoJQ0NYVo8Sv7Fggnw0C7RcQHLQTaw6aQzLD6ZGmx2IOIWq17
W3z34uSF3cztbFiQTJ7fKU2Nnm4oM40N0tEG3OYm1yKBAdrGfdb2N5me7fCV
GdPJo0hTrrusFrtGqSxKwc14Z7byL+ziHvqYSmx3AO4CJA2ImRl2P/NyksRL
qIfwddIH0TNjA6z5dHh4JZF/ZitaNNz6BvTJXIybQ+5YyIecfx45ycMl8F1Y
ZUK8TheqpHW0L9+9oiT4yhPx6Jd8kLukeCbCKSgQ4UQgENYYN/Nuze82SoOv
HAFn2fg2q4fZOYdcPTU80QQqqIgyN90rP5xQvPtGwbY7yZ8NR7w6uHlddMbf
ruWFX8/fElO0BQ6lZSDfm+4v3mvsTRsab2L25rKYYWbHAoOz9z0QFXgXG4gB
7HENAgNk0riXa5DvhbCtr8tz7uC0KZw972pbKl1Op1UhwQG9kW/2Xs/EuHQx
Ty1aQ3TotdhXChTLHDLsdLutUglnnCbjHAqKrjL0t6krc+SZCdi5SJJ0xdD/
GMbPP7sdNx7b8SZn/4fzn/+4ILciN0juX4V7Z14ROtRU52N/pFmXC22yo2JG
SZK+ZiEX9MNz8xEyQRExdyCCeqTvYmzXW/LcO1T8qDDK0nXKZV10lecDM15Z
1WO0C7J1oG0hirhGsdSJRDgFBSKcCATCGqOooZieRGbMMza7LTojBn/NrMwM
9eiWxSlVjveP1dV3pxc0Xn9Qcfxu6cG4wp0xeVuicjaVn0Ub6jOiP7iau+lq
bgRopxsFO24W7+vZiyw/ndE7+vqK5yg5ZBzplqZcxzYiEBWgN1xWC4pfFLkB
vtrVctAn2uZKprYRxZ9WFqfo2uumG8sVuXfFdy6Ibp4DJQPyQJJ4Wd/VCD3M
Ub5SKPdK5HosXYQxJ4yDHdhv3E9Bimg+LwxKfUIFnASpw976Bu5WdOs8i3Yv
P7NVknhJVZGpKkuXpcbgzpk5gvlnt6nKM3BozclLe2lVZpOLQShyD6AIDONf
fMaMHuCBMNadlm7y4l48PPzccBo+uDsYobIkVVn8YOrqIe/bgSHBU3rWr8JS
tA910G/4hAjtFYW/Eeg9EU7XkkuHRDgFBSKcCATCGmOQO+SxbFFQX0jXmCym
ZXsIKU6JYryH9aiu64G3cEq7gQwsxRfeAeF0LS8yqmArHLpVsj8zZ//QVuQj
NLrYf3ts+5vyzASnUT+HPY5OhrNQ9roL+MNSZfzwX+Q5t20q2VJDdOg0Eyc9
/Z18Fm1b9QyrD8dDgIvalNJZhx25fFOe25L7yNqDcwRrqlG0TwEjB7FHgXuZ
urxPU51vpywqKC5BeBjK0zdj8BgeKDEcKgEehVUy5fMWppvKcbf4UcjSYulD
2uaHHia4iWN/g7twWcxm/pi+p9nPk3k+pD1Mp2WS3WHXM5anixtL/JxIhFNQ
IMKJQCCsMUAa0fNIQV3h3GIpNcAZCPUA/YMsTr2smvru9MKmqNSHJxLLDoE6
is3fGp0bnnwLTejlZ9+ihRPaXleyP/nh8fzSU53xe0eO/QVm+Ynjn4M4MfS1
Mb2Y1NX5LCqMNhIDjFhGyqJkZfEDRUGSPPuWNCUK9Mx8m3XiW+e9w2Y6jDps
AhJEHaX6DGNvfV0Q9cXkxT0gkPC5vNNbHDN6+hQYBhZLrMj1OMMv9ID8lKis
wSBFoA0KkrnpVU1d8Qy7f+raYW/hNHlhN231AmZGe1nzUSt9oqkppGxT2306
bztNRreHPBV4Sv0oz6OBVTyp72zQdzfR3uCrBP2M3kMm9Y310zUjvBE/5xLh
FBSIcCIQCGuPzPmddNEZMTa7jbnnyM9m7dWBU66aHBpvbOrLKm5GPk5JZV9g
H6eYvIisaGRxKrjy3rW8cEo4RWKLU0rlidzaK6C1BrlNPju1T6vccigCeUdr
KBEluHbE9wjMJk1tEZ0MRZZ2w6GfNvNYoGpA3ox/gXzRJYmXcCBNHOubu+99
wbzaUeTd9alV1JU5oFJAOFHLdjNQg9XUDKtvbl44jR/9q9vqdeQTYcxx0c1z
E8f+ypRPINJE8ad1HXUg9pBFq7nSz6PE2VvUVbk+j/LPbsNuS/B/u0ru94ey
imAG3MAyKa8m79p80jqzX58rIpyCAhZOdykyMjJCPRwCgUAIAl0jXfTkwqLy
qTEdn8QKcagH6AeXclqIdtUNF5Q9vpldcyH54fFbpXvji3bE5keWXETe1xlx
H+NddTHFW2+V7E4sP5xefbawKbplIHdsqtu7R9PEKHYQ4ux516aUzs2rHUP/
Yz/jmHW5QJZw93/gc+EMBSHnoCU20EjMemb0SP/MsAdAlXH2vodVlrI0ze2/
dH6HcaiTbqYsQlYpEF2msUFZ+g2P8ejaa/1cAiWe2/Tq1JUD3occBh2WTKz5
cE8vBA6nIyH3Jn6N47Lj7Q67yWKOSo/GNdnVOd6n2Gy2u/MQO0lQwMLpGMWl
S5dCPRwCgUAIAtOGaVomZVVlQc2UdIquKWsuC/UA/aHWScYlfZ2jpQ877uTW
X35QdepO+YGbJbviCrc0HkUbwe6k/DW6cHNU4bbYkq23S/ckPfwis/Z8cXPM
46GicZHnQiRICzo098yY+yiOth1IglocAZJZQOpwj7jzqvC+jOB9Gck8CtrG
4ZUT0CYXKQvvSxIvCaOPCWNOIJ/z+DMomFJ4mL6rEbcZp/rkn93GDKEJn5G7
UeR60DnumtlZE3cYu4XjMt1U7hE/igl76+vjRz5h1rgsZjiFO78dD6mymsJl
n8MqYYQ3Qr/G9d0NUNMxvOAo3svu9T7FarUem4cIp6BAluoIBMKahM4dD0Wh
UcCESydFhb/QDSZPj+JVg8s8ozfOKHlTPW0DBVXtN3Przz94eDap/OSd4oMD
W9cPblmXULgnvnDvrZIDiWUH0qqOZtacqmqPa+hOHeW3KNR8Zl8zrD7kKL75
D6AfOHvepbPU4X33dCrbpcCGqbFdb9ErdKzIDaCCUBDy/jYeHQ8zcoMiP0nf
24LNQWM7/ii9f03XVm3XKIzD3ThupO8SsU4Uf9oqntS2PsI1RkZcbjTOiiy8
LOg9NlVFJt0P/8xWvN7nAY4kAEedJqNxsEOeeweFY8IxoyLW4Xwu6KLDPsx0
q5O0inT6rYa/DlwuFx0wPCYz1jLvALYUZKkuKBDhRCAQ1iTMEOKP2h/NLc5S
4Se6cqhx2a0ms0UnEA13j1bWdCSXNEanV59OqTqWmoHyhrQcfTOhZNvNkh13
yvbeLz2SXnU6v+Zidce91r4CvrBfrZPQHdm1as6ed1jhYbqOOhZOaDvvK47i
ElB+0UuFIQJpJE1FVh3uwY+xf7jk3hXWfNQCp9WMj0LnaMccFe6be+BDdVWu
Ii8R5VhZLJBAtkE/7G3z0TLDw/jndghvnOQe+pg1H4IAf2BukbNrlGPbN0Jv
cCPeIzSOoNBPwpgTtDCDPqUPosV3L4oSzopvn4cPdO4VZoDNiRObpA+iJMnX
YBjs7RvFdy6sNvfvpeAKx+kXOL8O5Q9ivuRVjx8t2wMRTkGBCCcCgbAmof4Y
v8v8Y9xmt9H+IdfTo9Q6H9Px6sDlmrVPayUCyVDfWHVTX27Z45tFTTEP7yEL
Sc31v6VVn0qrPpNZeyG//urD1oTaztQeVtWYoEdnlDnnFmwOWOooi1PgM/bc
Hj/8FzOP5T56/yoWGx6hKeeolTUcvAiUlV2NvKYd+mnQNqBDeKdQuGxsWYLe
TOPIORnaSEGHUJGdQCOJb38lSfp6XiYtbN/j7ntflHBGU1tkU7jV3azLpWur
xvvscGEOA8d6Ulf68NuZo3a9IRV38xx81kInjChPPguMZ+LE58KEM8LYE9i7
CVTlC2RrgveZNplCEciQ2PMwqy7bCRFOQYEIJwKBsFZhun+09LdCTS97wehU
1FAc6gH6AK2mofU0l81uMlpUU3LWKK+zc7S8ZSC3LRntEWtKPFDx+E5F+72q
zuTG3rTOkeKh8UaBgj2tk9mcoJrc3j4WEY8VHgbaBrsMOc0zKFEdtUtOU51P
XcBK74ObOPY3rHbEdy+ClMJhoCa/2kWbevDWfmVJqk2twAYlzu53HIsDKNlU
MnnuHWYSFu7+D10Wk8Ogc5qMHsl/adzb/ajIAJRvuTtdCA7OOXl+5+wS4Rxd
FjMeJFyXewA5LHEP/4X/1S7uwY+hNzqRMRwSXD/KOxXJHBhINVlGHA5R/qIw
yB1cMDdR6aolSomHI9+yEOEUFIhwIhAIaxWTxRyTGUsbnYwmo9PlpJN8QRHK
PYMUhRzk5jyLCggGl8s6rVeKVZPDvIbesYqeJCScHqefBr3U2JfZOpjXOVwx
ON4yJRrVz6htDhvtwgQfcEBsXXsds3N9dxM274hvnccBkfQ9zSiDSeSi1LoT
xz9HHtfzvQHyrASoN/S1Tn19EJuVUCd3L3p4ZRuHu5FuYXQluP4FSCM/94uX
/FASE/ei3hum8REYG2f3237CV2LGdr3F2fc+DpsAmo05YAyO/EnjMOpAT1pl
Qu+WqxyrzXor/zb93iqpbHqZVVl0DcfLbOgTIpyCAhFOBAJhDcMMelNN+TWN
TY7RNfeKkuxLWEJCyex8mXNZ7WazdUajE8o1ExOliUhapF/mCDvHxb186ZBc
xVNpRaCanE4rOm9eDkw3lLGW2IZvU0jwPjjeyQh6ycxlt1kEE+YpjkU44dMO
4w5fSZWpy/ttShkOuM07vUVdmaPvalQ/zKa310lTrjvNJpAoOIfdxNG/egf3
xlilAtBs3P0foG16lCmMMn/9Vf0oj0Vt0PP/nHBAcnzFQJ/ti0nV40f0S/uw
FYWuGmf4O6VVpAUoBYlwCgpEOBEIhDUM/KmekJvA8GvSwBTD/FO9trNu+V6e
I+6lOrdwgq8uF7X65nK5DIIxpCvO79DPaAwmncVmmp1zoIIWs9xt5qiQ2uzN
f4Bik4t8XsJltYhvo8RwYzv/xIyY5AfkwoQ9w+NOYQ9zh15L70pbsC9dOzLD
7l+4F5cLe1LJMuJ83KnLiZYFN72qoiI4Ca6iNLviOxfwUhorYt2yQSmxcOLs
ez8kmXafG3wxn35dY7Nu6GcMlL9TMl05FbBzOxFOQYEIJwKBsLbpZfd67EXS
6KfpJTzaz/aFYPLCbpAK+m7f4cFBqKircnGuOjo+0lJAS+zLJEu/4bJZ/bSE
rmhp5LHuZlNK1VV5oHymG0pxaE0PUGaTTa/yT2/1PqQqS0fb4qKPqStz4IOm
Gv1oHDoNe8vreI3P//gdBh0ev6Gv1X/LFxqLzXI7/45HwiBmjpX82vzAeyPC
KSgQ4UQgENY2Tuciv6bhCbQRrIe1oKbuFNxZ9Zl/3Zj5Y6yIdWPbN1oE4x6H
bHIxNgGNbX9zWdWEmWH3Y5ekiaN/NY50eyz3uCxmXXude7N/5HrsE84/uw20
TeADxnvfsDWJCYyfFblhbNdbdq0aOzhZpW5/M5xjBTk7cYeX6tauUeIcc9x9
7wc+mBcO+ImUNJbSL2peDUqopzVombJfMb38ZjoaIpyCAhFOBAJhzTMunKAn
mhvZcYYZA0xJWY+y6crMykynr/Rqq5DppnK8mDVdX4JXzWwKiaIgCTtsT109
hAMIBAjabTcfoGn8yCfS1GhF7l15VoIo7pQ7tx3yhgo3T3FmXU7hjS9ZVGQn
M5XFJhDkWTfhlOm6RZE2QeOB4KF812tBhrHCwyZObKKPwq1hD3bQTnCPsw6H
R58gxugAUIr8xMBv9oWjbaCN+d7qvd7b6hWGIyPCKSgQ4UQgEF4GKlofLvzl
Tq1u6Iy6+JwEurKyrSrUYwwUTU2hO2Jk+DoU4tIdp+iNZSOBL8XMSA8SRYv3
1nH3fyDPTDBNjC5s1nO5cCxxtMQWc9w8wfLfLVp3Q9Gf3nGaFwx6SDUd+AgF
NyhKnptPRacsfuC+hNMJNwU6CsUSp6JWgpybbiy3CMZRomE+W5YaMx/6ez3o
K+/0LmsGzhSHfjmvoZSL6Gn3sHoWLKWFd23zEU0DhAinoECEE4FAeBmw2CzM
Dd29bJShQyATXE+Pois7R7pCPcxAAfkhuXeF92UkiIfJS3s1tUVPLyGgBxNn
yDjcNcPqM09ylkoAp+9p5p10J1uZunJguqF0qYAD2DhGiyJA21o1th2l25Pn
3IavZh4LlNXYrrccei3dBq3BRW5wGvU2hQTt5gsPYy12QefseRcbrKD/p7zl
VYtMLWOuxzX1Iq82lVb1lL55RDgFBSKcCATCSwJzdxLoJTzvMP1sry2RJpXg
AcpV19eG98Sx5rPFKfLvGfofO/TTdDNFXiJ23kbuUm3VOLQUiCJNTSH0AIoL
rwbqHtcwO1cUJKEgUbfPY+VmFU8qi5JBQU1d3g//l6bG4CDhkqQrz/u2nxdy
tTwuJ55+Jwvr0eMyW813CxMZu0Frn6BnIpyCAhFOBALh5aG6vZqeeuJzErQG
ZOio7qgh2unJsAjGlSWp/LPbFlmE9r43eX6n6OY5lFGX8jzH/lco0PeF3RYR
T9tcSXuAg6Dy6NNls+KEwpOX9hqHu7GPk9Ns0rXXCmNPUot065bKw7IG8FBN
90uTbXab0+XMrs6hK5OKnzD+GBFOQYEIJwKB8PLgcDoyKjM9ZiWXy1XSVMrU
Tj2snlCP9AXDrlXrOxvkWQmTF/dwdr3tubi29z3kLsUd1jZVYMnECg8TxZ2i
d9J54NBppi7vX8iQsv1N2v9q/NCfTZyh53x3zw2ZWsZUTYlF9/RU7FCmtr+R
HadeycZGJkQ4BQUinAgEwkvFjHnmTsFCYJy8mjxQU0g7NS7STrWdta4lnHwI
y+Kymq3iSTOPJYw7hYTT/g8F146AfHJH0Uw4u5RkopmdnTUOd4lvneef2Qpi
afyLz+TZt0zjIy9ctpTAGZscY7owUaoJpYzpHOliLjHzJfwnvgQRTkGBCKc1
jNPprK2tTUpKun//flNT0xr+hUMgrAi5RsGcofJrC3xqp9yaXAuV0I3wxICC
kqZcx/Yi9uY/SO5ftQYc5vrlAX45tw60Mt89WjV1MVQTlO7Rp7KFEuEUFIhw
WuXweLzDhw8LBCv7VQP/DG/duvXTn/707xj8/Oc/T0lJWekAOjo6YABm81rO
aEB4CfHY601rJ2bUgmtUMjuFZgUBBgk+cRh1do2SSg1D8ATEeXFjCfOtSy5N
8amaqh4/bcQMIpyCAhFOq5zHjx/DD6inZwV/ZYBqOnTo0N95Af9k4P/nz59f
0QBSU1PhLJ3uxQiWIpVKOzs7u7q6FAoy2RGWYWRiZLF2yscOt50jncz6qPTo
x4OPybId4VnAE/GYUTKoPXRFODpT52LVVN5S8fQvIRFOQYEIp1XOEwinq1ev
eqsmJnfu3Am8t1UonHg8HozKZFqUI6Opqenjjz/G4hD45je/uWnTJlBQzDZ2
ux1O5HK5z3e8hNWLh3ZKq0gzUL64EyJebNYNj0Mqre9oRQTCE2C1WaseVzHf
MSpeUzP85et0OT12egZFNc0R4RQkiHBa5axUOJnN5u9///v+hdOPfvQjh1cW
g6VYhcIpNzcXhiSTyeiapKQkLJaYt/nKK6/Ab4nCwkK6mV6vh/onWK8krGE8
tNPNvFtSFUpWCzIppeyBh+mprqvuRclqR1i1gATq5wzAm8Z8u+Ky41lUIhuz
1cyMPBBE1TRHhFOQIMJplbNS4ZSZmelfNWHKywONuLv6hVNWVpafO4VfFFVV
bscAIpwIPmHxWdEZMfQ8BZ9HeaNz1PaKlv4WZmhxvBm8fajjyaLoEAgcASep
OMnD0JRfm28wIVMnyHVmQmrs1xTEZWIinIICEU6rHCycPv30072B8Zvf/IZe
rvJDWFhYgB1u3LhxNQsnmNp+/OMf+79ZeCb4RCKcCEshUUo8LAAVLRV4S51U
Jb1fct9jpoPGrQNtRpMx1AMnvBg4nI6h8eHU8lSPFyk268Ygd3CO8k3tYfUw
N3uCYg96PDEinDAGg+HEiRO/+93vfv/733/11VdG48r+IRPhtMrBwunf//3f
/zsw/vmf/zkQi9O//du/BdjhD3/4w9UsnMrLywO53/b29jkinAh+0c8YHiye
127l3+aJeHPUrNc10hWXHe8x60WlR5c2l4nkIhLrg7AUOqOuqbeJmU6aLpVt
ldinTmvQZj3K9jBsPk28pqUgwgnQaDTw1/S3vvWtPXv2HDp06Nvf/jbMsNPT
08ufOQ8RTquclS7V3b59OxAhkZGREWCHq3apLioqKjEx8Z133gnEwvbpp59C
47i4OCKcCH6wO+ylTWVes1uVyYLCcZit5oaeRuaiHlNiVXfUwEzndJId9wSE
QqNoG2h74GViwqWgrlA5rZyj/J162X1MQxOUpJL7Txwb3D9EOAGXL1+GiaC5
uRl/HRwchK8nT54MvAcinIKFXC4fGBgYHh5eqdHPPysVTiqVCoS0fxXx3e9+
N/BBrlrh9MQQ4UTwz8jECPy9v5Rfk96or+2s9dhzx2wJc2LrQNuEaGLGPBPq
WyE8P2x2m0gu6h7tKW8pv1N41+frcY3K2CuUuaOmcwXcJK9V4Lqu+mfnQUeE
E/CLX/xi/fr1zJp169b9/Oc/D7yHNS+cNBpNfn4+yIlnd4na2tr333+fnpe/
853vfPHFFzweLyid+xRO7e3tDQ0NS52yc+dOP0YYOHT8+PHAB7BqhdPk5KTZ
bL548WIgFqfbt29DY4VCQYQTIRAMM4b82nxvs9Igdwh76sIs2TfW7+375O0K
lVaRXtRQVNNR0z7U3j/WP8gdHJ4YJuWFLvAa9HMGuka767sbSpvLsqqyPDy6
vUtcTnxjTyNOKg2IFeJMRs5EXO4WJtKa6hlBhJNEIoFZ4NChQ8zKkydPQqVW
qw2wkzUvnEBywA2C/HhG/V+5cuXvvDbCw9fvfve7HkGEngyfwumzzz57/fXX
lzrFaDTCUZ9yAipB41ksK8gisWqFE/ZxGh8fX1Y1vfLKKzgeJvFxIqwIEDne
fk0wu8GMaba6Y+nDTFfXVcdMfkcKKXSJzbpR2lQ2ymdhIxKobs4UJ/tRjnfL
6o4aHPfymUKE09DQEMwCCQkJzMqvv/4aKlksVoCdEOH0NNy4cWOpyRprp+Hh
4ae8xMDAwK9//evR0VFmpX/hNEdpp4iIiG9QvEKBP+zatWtFqgkoKSmBAQR3
/fEp8QhH8N5773kIV48fxJYtW3BLIpyCBQjpmzdvggjfsGHDhx9+mJSUtKre
kCBC+TU1ePs1xWTGPmp/xMzGIlfLWwfaMiozfTpBkfJSlfslydXt1Xwx3+F0
R8wzWUztQ+23830I7Py6Auzv9Bwgwqmrqwtmgbt37zIrY2JioDLw+ZoIpyfG
YDB8+9vf9mPogCn7888/X1GfAoHgzJkzP/vZz/7pn/7pRz/60c6dO0E4eTdb
VjhhRCLRlStXduzYAf1cvnyZw+GsaDCrFg/hNDU19dOf/tSndoLKX/7yl3T6
FSKcnp7f/e5377777j/+4z/SDxnbNuHPhN/+9rfbtm0L9QCfCXqj3iOHHXOK
bO5rkaqk9MY6l8ulmFYMjQ9Vd9TkVOfeL7nv4TFFyloqURnRdwsTMyszy1vK
u0e7hXIh03CkM+p6WL3Z1Tke0cBwSatIF8iea8pjIpz6+/vh91V8fDyzEluc
+PxAtzES4fTEgGT1o5roiVsikQTYIfwosY2IPv2VV16B/4Py8diqE6BwYnLs
2DFQFys6ZdXiHTkctNMvfvGLv2OsmeIPMMszk9YR4fT0/Mu//IufF/73v/99
qAf4DFFOKx+2VS5lUEIb69qrRyZG1Fq1d3QCmEw1+mm5Wg4SS6QQk/JCF4lS
IlPLVFoVvWLLxGAyjAvHW/pbltpSByX7UQ5XwH3+USyIcMKzwOnTp5mV27dv
//a3vx14oNGXRDidP38+M9isX78+ELfkw4cPB9JbZGSkn05ee+219PR0ujFM
T1CzouewloQTyuXktekb3vnq6upPP/30V7/61a9//evw8HB6tykTOJGE3Hli
sHuAf0DEhnqYzxaTxdwx3HmnYMltU9coz5asR9n13Q09rN6xKY5YIdYZdfSq
DWFtAL9zjCYjiOEJ0cQAZ6Clv7WwvsgjY69HicmMBXX93BbmvCHCCfjlL3/5
v//7v8wamDU2btwYeA8viXBae2zYsGFFz2EtCSdCqNizZ8+yb6bHn3JrFZg0
x4XjFa0P43I8vcf9lOvpUdEZMSCrSHmhC+ifqPToFSznpUfn1uT1j/VbbCtz
MQ06L7pwKisr27t3r/+NV+3t7adOndq0adOWLVvi4+MFAs/F0KioKPhNlZmZ
ib8+ePAAvmZnZwc+jKALJ71e75G2PlRIJJILFy6AWoAb/Nd//deIiIj6+npl
8IiMjPTjk0yTm5vrcSIMjMvlymQyuubw4cP+jVdw9PXXX6fbf/jhhy/zUh0h
JIBU+Id/+IdlX/gf/OAHoR7pcwUey5RUQG2s82eDIuUlLLHUljoWnxVyvUTz
ogundevW+RE5MzMzIJY8fiPBby2PPXQWi2XDhg1w6E9/+hPuEFTWihICBl04
/fu///vRo0eD2OGTkZSUBKqGqUawyAG143AEx2BeXV297CTy/e9/f2pqSraY
nJwcONTS0kLXLJttDcPhcHB7EE5hYWGylbBnz56f/OQnQblxwsuJVqsN5C39
+7//+5d2MVQ/o+cKuM19Lbk1eSuyRJGyNkp0Rkzaw/SajprhiWHltDKIyXmD
xQstnAoKCvAvmaWE0/bt23GD99577969e3fu3Pntb3+La5KTk5ktnU5nSkrK
559/HhERUVRUtNKRrEnhBKrJzy/28PDwoKRFgH8UP/vZzwIxOq0SfvjDHz79
XRNeWkwmUyCv2be+9a1Qj3S1wHSAaR1ofdReXdH6sLylvLSprKSplJQXtMCP
r6y5DH6UlW1VTb1NTDc2p2u1J9x54YST0Wjs6urKy8sDkUPPtj6FU11dHT4a
GxtLV9pstm3btkHl9773vcDjWy7L2hNOMpkMb0bzQ35+flCu1dnZ+Z3vfMfn
JeD9/M///M8HDx7kenHq1CloEBMTQ9d8//vfD2RKSkxMxO3DwsL++7//27tn
P7z//vs//vGPg3LXhJeW//mf/1n2LV3ptgUCgfDceOGEU3JysvcvGZ/C6c9/
/jMc+s1vfuNh8ZZIJHjt6ebNm8Ea1doTTpcvX17WX2ilntV+AO2EZTB9Ufz1
9ddf1+v1Pk/Ba3xsNpuu2bp167Ib9GDOotu/5OEICKHi3r17ywqngoKCFfXp
crmqqqrgz8n169e/8cYb8NtjzQQcIxBWG/8/e+cBFsW1NuDb/nuT3NR7r1Gs
2AsK9t67Bo2JLfZeYsGuwZ5Yo4i9F2LvGqMgAoIgSJHeO8v23nvLf3ZHxmHL
7CADyy7nfc7jg7tzZs4s7Mw753znOy4nTq9evVpUAbjx2RMnuVzeuHFj8NaJ
EyesdzJmzJgG5kAmslpFujiBu/OaNWs4zgPJ5+OQrKwsso44YMCAoUOHjhw5
0svLC3jjzJkznz59irP9/fv3LcTp7du3DhsM7lno9gqFAvydVOn3AsUJUn1k
MhmShd7eX6mnp6dWS3R90ri4uObNmyMBfmgvMfLc0b17d3Ctq9FzgUDqIS4n
Tlg45sVGbYpTamoq8tbLly+tKyLTgau0jC8+pItTp06diHgLBCtOAKDT9rYE
t5LBgwdXc0kLKE4QUujSpQuwI2t3Aq80a9Zs2rRpxHd1/fr1BlbrPKK0aNGi
qssDQSAQfNxVnJCsyACbGaePHz+OvCuVSklpCSJOL6tHZGRkVFRUTExMbGxs
+/btR44cuX///oMHD/7666+HDh0KCAg4cuTI0Wpw7NgxcOInT548ffr02bNn
z58/f/HixcuXL//2229XrWjbti0RbwF7u00SXbt2HT16NPHtkYWYLcRJp9PN
nz/f4j6C3J6ANQkEgmr+oqE4QUgBfPUePHiwY8cOoE/oHyr40u3du/fSpUtP
njwhvivgYPhf0sOHD9fciUAg9RB3FSckNVMDO71A4LaLvMtkMklpCSJO9RDw
PNu6dev2BOjUqZOPj0+vXr369++PDMlZ0KdPH/AW8vOYMWMmTJgwZcqUGTNm
zLfD+PHjQQPmzp27cePGbdu2ba8A/PzDDz94eXmhjQT3owULFpw6deoCBnB7
Ao/q4Ob17Nmz4MqEhoZGR0cnJydnViY3NzcsLAxUEWMA7k1WZgY3AMmZZo+S
khJnN7DOoVAowLNSSEgIeFxSq9VVrf769WuHX9KOHTsSH/iDQCBYwFOMv5nN
mzcPraCBK+e7xhGnAwcONDDnQrFZEdz7kIrWyTA/jHorThCEpk2beloBlLJb
t26DBg0aXMGwYcMmTpw4s4JZs2YtWrRow4YNWyoA1hcQEHCygvPnz9+9e/f3
CoC2JSUlJZvJyMigUqlsM+CLUEfujL/99luHCsDpN2rUCFgr+kpcXJyzG+hu
rFmzhkgqj8jISGe3FAJxScATzXkzp0+fnldBAzcVJ2SVXnDdtlkR7XHCrnBa
HRBx+rHaLFu2bMmSJeBm2qxZs549e86ePXvGjBnTp0+fOnXq5MmTJ02aBG67
E6rBN998M3bs2JEjR4I7OLiP9+/fv3fv3j169OhmixYtWuBcisHlumXLls2b
N/fw8KiedEDIobEZoHDe3t69K+jTpw/4jX9vBvwhrVq1Ctxq165du2vXrgAz
4GoAvj5Azx49ehQTEwPcJiEhoaSkpNwMg8H44Gxdz549A62CvUw1CtBvIn8b
4AL1ATsHTn7ixAnwoP3TTz8FBQVVMz4QAnEb3HWoDo1i0mg01hXBczHyblUn
VdnD/dIR/GlOCorkXbd+pAW3Y/DhV2lvRqNRrVaDa69AIAAXZDqdTrMPhUIp
LCzMyspKSUmJtwO4pIOWXL58+Y8//njw4IHNtEs3bty4ePHiyZMnAwMDj1QG
OMPevXu3bt26YcOGdZUBarF48WKgrFMqA8QVOGe/fv16V8bLy8vT07OpFQ4T
YdUQ7du3J32fTZo0AT4G/iwHDhzoawbo/YoVK8DHtdfM/v37L126dO3aNfBd
ePny5evXr8EnDypmZmZ+wAgUhCALFiwgskZ2VcUJ/LUD30am/oEnI+QvGTwl
gcc38NWooXOBQFwFdxUn5GkXwOPxrCtu27YNvNWzZ0+yWkK6OGVkZJA1jFgd
gDuBU0OiiRC6du16+vRpe7mVahOxWJyUlKRUKp3dEDyAKIK/UnYFDAYjLy8P
2GByBUAwwN/qkwru379/4cIFdKgO+N727dvRgbxVq1bNmTNnlplp06YBixti
BshMp06dWpoBCgf+S7Y3VRfQqo4dO4JGgtaOGTMGSOnChQs3bdq0a9euY8eO
AcUKCgoKCQmJiIgAtlxSUgL+wOrI4GMdB3l8wAdc5MvKyojvE/zR4gz/AX2q
g0tgQCC1ibuKE5PJRN4KDg62rjhp0iTw1rx588hqCeniVNcAH3VBQQGVSoXX
zLoPUA40dl0oFAIPyTaTmpoaFhb23MyNGzeQIPmjR48Ce9m5c+dPP/20aNEi
4DPAzcaOHTvKDPAcLy8v4Dz447Y1gYeHR6tWrTp06ADaANR99uzZ69atA43c
t2/fqVOnHj16FB4eDhQUnBcwUpsdy/UBgUDgsGNz+vTpVdonTk4PBPA3U0On
A4G4BO4qTgAkIxy42Fq8rlar27RpA94Cl1+yWoKIk8FMvV2aE+LegC+OSqVi
sVhFRUX5+fmvXr2KiIh48uTJNTNXrlw5cODA3r17169f/+OPP86fP79v377g
SwG+ht7e3jU9agn2DyyrT58+w4YNA56wevXq3bt3BwYGIlP74+PjS0tLgV85
+yOsEYDr4n84iYmJxPdGp9Mdjv0BkYYzSSH1EEMFbixOO3bsaGCeL0+j0bCv
Hzt2rIE5ZqOqUTo4YGfVwTw/EAhgxIgR4OuwceNG5L/ggUKv14MvY1lZWUJC
Qmxs7MOHD2/fvn306NHDhw//8ssvSGjZ999/P3z48N69e7ds2bJx48ZEAniq
hJeXV8+ePSdMmLB06dJNmzYFBATcuHEDGCBoEmgbkEOXe/ABBoucmsVn1bBh
Q2SpxyrtDXwgRD7z58+f19DpQCB1E5lMhv0KOLs5Hw6+OIF3wUMocqkEj5zg
eiiVSsETMfLwCx5ISWyJ2w/VQSBV4tSpU+Ab0a5dO/BveHj4B+9HqVSy2eys
rKzExMQnT56AL9r58+fBzX3z5s2LFi2aMWPGuHHjBgwYACyLyKx8Inh6evbr
12/8+PFg/+Dh68SJE0DwgJwUFRXVzWllVCoVyCf4WIYMGYK1poULF545cwZo
YZX25ufnR6R7MCgoqGbOphLgog3+eA4dOgSu2xcuXHDXPkOIy+HGPU6AyMjI
Jk2aINtgZ82Dp1pyu5qhOEHcHl9f3ytXrhDZEjyngJsvuAWDbxkwkLZt21r0
+lpw8+bN6i8YrVKpRCJRcXFxSkpKcHDw5cuXT58+vX379mXLlk2ZMmXEiBE9
evRo1qxZNbWqRYsW/fv3Hzt27JIlS/fs2QM+kOfPn6elpfH5/Gq2nxRycnIi
IiKA5n2wY6xZs4aIOAGNIbflFoBfH/itdevWrYG5Jw1pEvgXXLpnzpwpFotr
9OgQCD4uLU5SqXSpGXChtrdNZmbmtGnTkAV/G5jXpwNPZ6QP0ENxgrg9np6e
+/fvd7gZj8fr0qXLkCFDkAmPTCazQ4cOY8aMwYnfDgwMBM81ZLbVDgaDQaFQ
UKnUt2/fAsEAD1wnTpzYsmULuIZMnDixZ8+e1cnk0LBhw169en3zzTfAGAMC
AoBTRUVFAZGrhfMiEaSr0CE1nVFz3LhxNo+LDCNaLLTkooD7F/BbuJKgK+LS
4kQccA0vLS0lK92lNYg4qaNjtWXleiZbz+MbxBJwjTZqtC4XMgGB2ISIOAEz
mTx5MtgSKwzAH8B1xt/f316tWhMnIgDBo1AoKSkpf/zxx2+//bZv377Vq1dP
nTq1f//+wAA/zKm8vb2HDx++fPly8AEGBQVFR0eDQ9TNCap8Pt9hSttu3brV
6GUNOC1+A8CHWXNHr1FkMhmwvqtXrw4aNAg5F+Dbc+fOBadcVlZWbyeHuhz1
RJxqGkScaH/5iPaPT5kt2nEGDuf/MFe0cav0+Bnloz806Vm6kjIdjaHncA1C
sUGuMGqhUEFcDCLi9Ouvv4IvgvUatfZeR6hT4oSPSqUqKSl5+fLlgwcPTp06
tXnz5lmzZvXr18/Ts+UHCFWPHj2+/fbbdevWHT9+/OnTp9nZ2XUhe9XGjRvx
m13TAU5Iuhh8kpOTq7pb8LuTSqV379719fUFKtu1a9cZM2a8ePECvF5rOVrP
nz+P+hJ6LujYaFpaWu00A1JNoDiRwntxsln++jHDw5PTdzB/+hzRpq2y0+eV
T59r0jK1+UW6UoqeztRzeQaxxKhUGj90eQsIpKZxKE44PUsGg2HKlCktW7a0
uQKLC4mTTdhs9rx584BBff/992PHjh0+fHjfvn27dOnStm3bZs2afUAqhlGj
Rq1cuXLTpk3BwcEUCqWWH7KAvOG0GfwSa/TopaWlDj8fYB1+fn5V3XOfPn2a
Nm2KlRbkNMEf9ogRI7Bb0mi0mzdvXrhwAViWzRTKHwbQNuzi49bArOyuAhQn
UkDEaaJHkwlf/XfOZ1/aNShsQfqmBo0UzFko3rZbdiFIFfZSm5mjzS3QlZTp
6Qw9l2+QSI0uOD8a4pY0b968Q4cOA+0AVKFx48bgvmBvuAHcgBqY807379/f
om7Hjh3tLSvpEtDp9DEVjB49GtyXu3fvjr5y8uRJID+RkZF37tzZtWsXUKwR
I0YiE36JAz4isKvdu3efP38e7EokEtXoGa1YsWLu3LkWjfT29v7xxx+3bNlS
o4d++fIlkQ/E19e3SrvNzs7GmXcJhArYb3x8/JIlS2bPno1NyACUfsGCBeAD
ycnJqeapnT592uF5AW8kuDdgd6GhoU+fPn379i28R9QCCoViagUNYEgzGSDi
FHbjVljQ1ahTZ+TXbkn2HRIu9+N98x3buxf9i4aEVOovH9E/+Q+rS0/ed9NN
HVPnL6tevjKpFCj5RTpz9JRBIDSN9OlgxxSktgHOM3jw4BV2WLp0adu2bdu0
aSMQCGxWz83NBd8RHx8fcPO1qDts2DCXFicsWq0WnObZs2cdbgmuw5mZmQ8e
PAgMDFy5ctX48eOrFEPVrl27CRMmbtq06fjx43fv3q0JlVIqlQ8fPjx27Bhw
v7CwsNoJynIY4IQwadKkKu12+PDh+DtcuXLlvn37GthamhN55dq1a9U5L/Dp
IZMEcQDCtn37dvz9pKenHzlyZNasWVi769mz5/79+2/evAkTk9Ycer3+ZQWw
x4kUsLPqgNUAtwGGAzwH2I42vxCYjzo2XnHjjmT/YeHSVdyxE1kduwJHIqRS
n3/N7t6PP3WW2H+n/PJVU/w5olK5+eaOKaaeJzDIZMY6EBoBcW8cDtUVFhaC
baZPn279/CuTyfr27dujRw+b93dXH6rDQlycbCKXy/Pz869cubJ169bly38c
OnRolfqmRo4ctWzZsvXr18fHx9fNrFMOKSkpcXiawGRWr15NfJ8pKSkO9wn+
ApGBPHu0b98euzJmcXFxdHR0XFwcl8sl67wamNdPx9/P/PnzG1jZHSpRMFFD
7QDFiRTw0xEYTbOglQahSM9k6Uop2twCRH5UkdHyoOuS3fsEC5dxh49jtupI
+/u/HaoU4+tmnCGjhMv9pMfPqMIi33kUKNl5uqJSUwg6j2+QyY3w0QNCKkSC
wx89egS+COCJ2OL1xYsXN2nSBDws26wFxQkfcGuOjIw6f/783Llzx4wZQ+T+
i9K9e3d//61Hjx61N6d406ZN8+0A5I3EsyDOxIkTHZ5XUlIS8R3u2rWLlPyo
N2/evHXr1sGDB0ePHo2+2KhRoyVLlpw8eRI/m3pmZiaRQ+BnegdnjX8ia9as
If6xQD4YKE6kUNU8Tka9qVdKzxfo6UxdcZk2Jw+RH01KuvLhE+mvgcKlK7nD
xjKbtaH99WMHXVL/8eD0HyZY9KM04Lgy5MV7j0LCpUoppgE+odioVMFxcEh1
IJjHafPmzeCqEhMTg75y6dIl8O3ASZ4JxekDjpKcnAw+0nnz5uHHG1vQsmWr
devW3b9/v6SkBLkgABkbXUHr1q3btGmD/tdZscphYWH4ZzF06NAq7XD16tXV
Xy0R/FWD44JvQQOrDh9kdZuRI0fitIFCoRA5Sv/+/XF2MnPmTPzqoCU1l3UH
ggLFiRSqnwDTqNUapDI9h6ejULV5haj8aJJSFHceSPYdEixYyhk4gtHI09HQ
XgNO38Emjwo8+S7aHC1ZOdrCYh2V/q5LCs7gg1QFguKk0WjAHaRTp05I8urU
1NTGjRsvXboUp4o7iRONRgOXAmAjtXxckUj05s2bX3755ZtvvunVqzdBGWjR
osX48d+cOHEiIyPDYDBMmjRp+vTptdxym2C7dLAgY1JVjdMGMk/KMtP4vT2g
bTipmAFAihweAucrRqVSHS4jCDY4ePBglT4cyAcAxYkUSM8cbtTpbHqUKVwq
OlZ27pJozUbuaF9m0zYOxvX+05gzaKRwuZ/s1Dl11OtKHgVKXiHYv57NNU3f
08KhPQgeW7ZsCQ4OJrJleXl5mzZtJkyYwOPxunXr1q9fP/x4m7CwsPXr15PU
TGei1+t9fX2RW9jbt2+d25jS0lJgROCDRafhExGDdu3anTt3jkIpd25+zjNn
zoBPskuXLkirEO0BP4AXwd+VUCis0t4eP35M5PSrz+TJk3GaERQUhF8d3I6Z
TKa96iEhIUTaMGPGjCp9OJAPAIoTKdT0kiuVPKoiROqdR8UlyC9fFW30543/
jtmyA/7QHqORJ3f0BNHGrfLrtzXJaZYelVugK6OasnRKZTBEClIdQkNDkct4
s2bN6sgCGbGxsdWfUY7PL7/8Ak750aNHAwYM8PHxsTfBkCAlJSURERGkNMxo
NPL5/AsXLh49emzBggXoElT4jBo1atasWdev3xCJRE7xKCCiwBb27du3c+fO
U6dOMRiMD9uPVqt1OGORrEWicRbZUalUvXr1wqm7efNmnLN48uQJkQaAX9mH
fUoQ4kBxIgVEnI6buXz5ck0fzjSuJ5aYZu0Vl2qzcit5VMJb+ZXrog0/ccdO
dNAf9Y9PWV7d+TPmSQ4cVoWEWUoU0h9VTjON6ymUMD4KUlVmz54NvhTgfufs
hryjd+/e69atq7n9I674888//4k7wZA4hw4dAtpJXgPfA1oll8tv3Li5cOGi
MWPGElSC0aNHA4EBYqDRaFzugnDz5k38s5s3b57DT8DhSBng3r17OM24cuUK
shnW09Cf8TOHx8fHOzw62NXKlSvJ/vAgJsCf/fEKoDiRAiJOP5s5evRobR4a
XMGMSqWeL9BR6dr8Igv5UcfGy85fFvlt4A4fx2jYHK8zqkFT7mhf8ZbtijsP
TFnNLSQqKxdIminOXCyBg3oQIiAPyDZThTuFGhUnZHTS19cXTaTz8OFDcPqB
gYEfvM+aEycL9Ho9k8n84YcfHN6XUXr06LFo0aKoqCi5XKF3kWhJdODPwjTA
TbBfv37AdfG96GszDj+ZzZs3P3v2DPw92GyDRCIpKCgIDw8Hn3bz5s2RsVF/
f//MzEzQAPwFf4lkggK8evWqZj6/+o5arf65AihOpFDTQ3XEMQ3qiSV6Bktb
WGzdiaQKj5IGnhTMX8ru0Y/2kd0M5/SPv+L0HSz80U9++aqNEb33nVEC0zIx
rvbsCakdwO2jQf0QJ/AoOmrUqI4dO1pMaNq0aRO4M75+/frDdktcnORyeUxM
TFUjf7DExcWBpoLPZ+XKlR4eHuCCtn//geHDhzdp0sThnbpDhw4jR44EoigW
S7R1eBXO0NDQS5cuzZ8/H/UfcHbglG/evIkMifr5+dlTpgamHFkjiQ/ngSoz
ZszYsGEDdnpp9Tlz5gz+cXv16kXi4SD2gOJECnVHnLCYkh5IpKYRvaISa/nR
pGYo7j4Ub/+ZN3GKKe+Bvc6of33B6TNIuHq94sYdGz1RSGdUSZmezTHl4ayT
C75DnEL9EactW7aAC2l0dLTF6+ARdcSIEegEw6pCXJxycnLAR/3BAVEcDsfL
y2vYsGEqlUqhUAwaNMjb25vP54O3dDo98DGgFrNmzW7Tpo1DYfD09ARb3rt3
TyAQqtV1dERPIBBkZWXl5uZazFkAl3EfHx8gwA3M2ZnQoHTwaXTr1g1dn5cg
iGWRm9JBp9P17dvXnqqBf1NTU0k8HMQeUJxIoW6KExaj3mAKL2eZw6Ks5Scz
RxUVIz1yQjB7IatTN3t5OOn//i9n8CjRpq2KB79rMrJt7sc0osdim8LLoUTV
b+qaOPXs2XPy5MlPyWbHjh3gNAMCAmwelEKhtGrVauDAgU+ePKnqnsE9t2nT
pkROrTripNfrJ02aBBqJrpJWVFQE/GfatGkW2gO2BKYRHx+/erVfjx49iEjU
hAkTQ0NDhUKR2nXW3ARyAn5Za9euBZ//hg0bwKeKthz8HqvkTog+JScnk9i8
gwcPtmzZEjtuiBga8L3WrVvL5XISjwWxBxQnUqj74oTFlMlcJtOzOabcm5Vj
y991RiUkyy4ECZf7sbv3o/3jU3uJN7mjJ4h37lE+C7VpUBUSxTHljIISVf+o
a+JEJD7kg8HJt4AsCfphNGnShMipVUec9u7dC+qCXxb2RXsZ4FHAJQTco3Nz
8/z9/Tt16uTwRNq2bbdo0eKEhEREoj6gnXWBvLw8gpFOWGoiqReNRgO/OCC3
QHp//PHHqKgoV/FS9wCKEym4ljhhMUuU3CxRtnuiNInJsnOXBAuWmnqi7OQ6
YHh48ifPkB49qY5Psi1RpuE8ip7LM+JGP0LcibomTr169Vq8eHEJ2Tx58sTD
wwPcvGweNCEhoVGjRgsWLPiAPQMnqekep/DwcFBxx44d1m9ZZ4C3x8WLFxuY
ZoSlb9u2bdiwYQ5FYsCAAb/8sgecIBITVdU2Oxdvb2+bycNxAB/jBydSgNRN
oDiRguuKE5Z3MVEMlrbAcnZexRy9BOmxU/wZ85itO9lLccDuOUC0drPiwe/2
uqFM2aJodINIDFNFuTd1TZxqLsbpwoUL4EyvXr1q8TqPx+vSpcuQIUOwi8MS
p6oxTgEBARFV4c6dOy1bthw3bpzO1jdRo9GMGDGiTZs29+/fx98PUKwGFX1u
QISADuXl5W/atAmZxYYDcI8xY8Y+evSYzWaD6q4yOw88a4aEhMyePXvo0KHg
AyTiTkBQnd1qCJlAcSIF9xAnLKZUUUKRrpyGrqNnHRMlOXiE9910RpNW9vIb
8L6dKv01UB0TZ1eiCktMKQ5gQJQ7Un/ECbBw4cImTZpkZmair4Db65QpUzw9
PXEyIuJTVXH6MCIjI+3t9unTp8T3YzFYaTQaVSqVQCB4+zYZfDhdu3bFr96h
Q4cNGzYUFRWDKqCiqww8EVmPuEE14vYhdRMoTqTgfuKEAq5gpvWIWWyb+Q2Q
onwWKvbfyRk4gvavL2xI1F8/ZnXqJly6UnHzrr2QctNYXilFz+MbXTb+AQJg
s9mJFRw9ehR8KR4/foy+IpFInNi2GhUnqVQK9t+zZ0/0HA8fPgxO/8mTJx+8
z6qK05UrV3KqQnx8fOfOnfv162czohicCDidbt26JSUl4e9n37591uKEBYkq
B38bt27d9vX1dbj+y3fffRcaGspkskAbbPaG1R2WLl1KZMwuJSXF2S2FkAkU
J1JAxKmbmTFjxji7OTWFUaPV84W6snKbIeWmgKi3qbKzFwWzFjA929vuhvpv
E/73P0iPn9EkJtvthsor1NOZBqkUdkO5HGfPnsW5fURFRTmxbTWdOTw7Oxt4
zrx588DPr169ApdWf3//6uywFtIRgBt648aNly1bZv3W/PnzgeFkZWU53Mnl
y5fxxQmLWq0WCAQFBYU7duxw2A01aNDg48dPUCjlfD4fPzmkswCfuUNrAn94
zm4mhATAX3i3Chq4aT9JLYOIU7mZ+hAHaAopl0iB3mjzCuz5jyo0QrxzD3fk
ePpn/7OZHoo7bIxkz0F1bLxdg8rK1ZVRDQIhjIZyFVgsVoJ9nNvjxGazq5Mi
kgg3btxoYI61bt++/ejRozUaTXX2JpVKCV5MqjOrDgntDgoKwr547tw58OL1
69eJ7KFK4oSi0+klEimTyXr58iW6MrI9OnbsuGHDBqBbbDYHHMi5CxBjMRqN
3bt3x298LSzCBakFwO+6vALY40QKiDgZjHXl61ybGJUqPYdrM8fmu26otEz5
tVuChctth5T//d+cPoPE/jtVYZF2DQrJbMDlG6t3J4JAapoVK1Y0ME+kolKp
tXbQaibAXLRoUZMmTdLT05H/JiUleXh4EF/y7MPECQXcjxQKBZfLzc3NW73a
z9vbG0dCmjVr9sMPM1JSUoBSikTiujCQhywhZy9HwaBBg+qO5kHIAooTKSDi
VMJJYooKJEquzuBic2xJwRRPLsAbyDNFQ4W8EG3exu49yGaOTVbHrsIVaxT3
HuEYlLag2JRgU6FwlfBRSL1CIpGAS8HatWtr86DVFCfgPH369OnRo4dYLBYI
BD4+PgMHDgQyQ7B6NcUJi1qt5vP5FEr55ctXBg8ejN+T8/3338fGxpWXU0Gb
q9m5Vx2EQmG7du28vLwaYHIUgBtro0aNWrVqdezYMWc1DFJzQHEiBUScijmJ
aKEJc4Rypkb3IdOQXR3TQJ5YoqPStNm2Z+SZMhu8fiPZ+yt32Fib8eSMxi0F
cxbJr92yG0xuSmuQr6MxDBIYCgWpQ2i1WnApOHv2bG0eFGhDcXExcdWxBqhX
s2bNZsyYMXXq1BYtWhQWFhKvC1wRHJ3cBxlwRkKhiEqlRUS8nDRpEr5B+fr6
xsW9KSuj8Hg8J4ZCvXr1auXKlVOmTJk1a9ahQ4c+bJ0diEsAxYkUrMUJLeX8
DIGMVk8Nymg0SGVAb7Q5+XYH8hKTpUdP8iZMpn/R0GZOA/4Pc+VXruEZVHau
rpxmSgwFDQribJwiTqRw69YtxEMePHjg7La8R6fTicViOp2elpa+dOlSfIMa
P358bGxcaWkZl8tTwvXHITUGFCdSQMQpjxlj052QQhVkCeUMrb4+Trc3GZRM
bjYou31QplCoK9cEcxYym7a2YVBfNxPMXqi4cQdvFC8rV0ehGsQSaFAQZ+G6
4gTw8vLy8fFxditsAwxKJBLRaPTs7Jx169a3atUKx6AmTpwYF/empKSUw+FC
g4KQDhQnUkDEyS+k6/E381/knytgxeEYFE2QI1KwdPr6GOdsMiiJ1JRX034c
FCiKe4+ES1cxW3W0Nihm0zbC5X7KYLsL5L3vg5JI4QUTUsu4tDhNmDBh6tSp
zm6FA5A+KGBQubl5W7ZsQRZAsccPP/yQkpJaWooYlMvk1YTUcaA4kQIiTiue
dULKuuc9zyQsjywKKmLH4xgUQ5grUXL0BudPDKl93sVBUaj4BqV88ky4Yg2z
ZQdrg2L79BZv261+FYtnUDn5ppRQchhJDqklXFqcJk2aNH36dGe3ghALFixo
3Lixh4dHo0aNOnTo0KNHDxx9atiw4dKlS/Py8kvNo3iuu8owpI4AxYkUEHFa
+cwLdSekbHrR/9LbNW9K7+HoU7FpLl6+VMUzGFxjqSZyMS2QJxSZ5uLh+E9m
juLB74JFP9pY3uVvn3D6DpH8vF8dl4C3h7xCPZNlqEb0LARCBChOpKDX68HH
eO7cOXsbgEtuQEDAiBEjgDjFx8cjEwNbtWo1cuRI8Io9g2revPnBg78WFhaV
lVH4fGfOxYO4NFCcSAERpwx62L3MvXuifC30CZRdL8fcy9iTxXiJY1AlnCSW
uEiuFtXP7hGjTqfnCXRFpTj+o8nIlv92gz9lpo2kmv/8nDt6guzUOU1qhgOD
YnGMKvjICakRoDiRgk6nc/gx3r59G2xz4sQJ5L95eXnAi6ZMmVJSUpqVlb1k
yRKcPqhevXrdu3cfGFR5OVUkEoFrT62cFsRNgOJECog4TfhuLChzFk5LLn96
M237joiRFvq0KrjL0bg5YQUXCnGH8Eq5KVxpmUpLQl4UV8So1ujZHJyc5CaD
Sk6TBp7kjva1zmbA+E9jwdzFykd/4Hdh6YpKTEvjaevjOCmEXGQy2ZMKHj58
aOp8XrkSfYXIqiV1BBcSp9zcXKBJs2bNwj5m3r17F9Q6fvy4QqFgsdjFxcUp
KanTpk3HMaixY8eBbYBBMRgMqVQKk1VC7KFUKqdX0AAuuUIGiDhdu38KlDt/
XEAVKL7sweXk9RtD+1oN4fW7krwhifI77hCeOZWBnK7V18VFmmoa80Q8mcMw
cnXCW8mBAM6gkdYZNVmdupmCoN4kOjCo0nKYygBSHcANGufWXM0V62oTVxEn
YKp9+/bt3r27SCSyeGvdunUNGzZ88+YN+Nm0MJRESqfTgRcdOnQY53eE/JrA
ZsXFJWw2B9wia/wMIa4G+JsMrwD2OJECTh4nUArZb17knwuMnb0quIuFQe2J
8n2U9WsO8xW+QdGEOWIFu56Gkev1poTkxTaG8Ez9Tr8GCletF65eL961R7R+
C6u9t+UQ3kdf8iZOkV+9ia9P2uw8PZ1hkMMgKEiV0Wq1ZfYRCATObiAeS5Ys
mVhBmzZt2rZti/531apVzmoVIk6nT5822GLx4sVNmjRJS0uzrqhSqYYNG+bl
5cVms9HtNRrNnTt3wA7BLe/WrVs4iwt37twlODgEGFRpaRmfLwC/2Vo/dYgL
AMWJFBBxAnqD7z+Z9PC7Gb/sfDnaQp/8QrqejF9knoWX4CiMvMBFg6BEG7bI
LwVVZw/YITxNepZwuR/9swYmNforKB+DH+hfNhL5bZDfeySYtQD8bJnHoFkb
4cq1qtAIBwZVUKTn8pBlhWWnz4m37iTl9CGQuomfn990O2zYsMFZrULECYet
W7faq1tUVGSvVmZmJhCqoqJioEZbtvyEs/8FCxbk5OSCzeh0ukQCh/AglYDi
RAqIOIEfNDolX0Yt46XiG1Rc6d3zSavWPe9pYVD+4UNupe/MoIfhV6fw0gRy
umtlgmK26SRYvLz6+wHSqBeJed9OtbFesLnwpszUZGRrUtKlgSc5A4YhToUt
nL6DpQHHwQZ4+pSVq6PS+FNmsrx7Vb/NEAikSiDiNHv27NNWHDp0qHXr1gMH
DrQ3oLZnzx5Qd/Xq1dha4L/gRWQpGVMqFLGESqUBL0pJSR0zZqw9fWrRosX1
6zeQITwOh6OCk0ogZqA4kQIqTgjg5i5Xi1jiomJOEo7/5LNig/NOHoqZtqJy
HgNzDPncl4WXHXVAJTJFBQoX6YAiS5wAYv8d9qwJKcLV61EFUoVGCJetZjRu
aSOGfOFyZcgLHH3ijfuW1d5bz2Ib4bRlCKQWwY9xSkxMbNSoEXAh67fCwsJA
xd27d1u8/vz5c1ScUDQaDZfLLSkpAWp0/fp1nGzk06dPRzqgKJRykUik18NZ
ePUaKE6kYCFOKHqDTqRglfMz8P0njRZ6M227f/iQD+6AEsoZdbwDiixxMsjl
9E//iy9O9C++tuhQMuUxuHKN9+1U+sdfWXVADZEGntSkZdoWp3Zd3sWQU6gG
mcwlHBUCcXUczqo7c+YM2ODmzZvYF6lUatu2bX19fXU6y3BQm+KEAL7UUqkM
iSEvKChcunSZPX3y9PS8ffs22KyoqJjFYsMY8noLFCdSsCdOKAqNhCUuxPef
InbCy8LLR+PmWsSQE++AAodQaMR18+ZOljjJLwXhWxNSpIeO2p6FF58k3v6z
dQw5o2FzUwRUZLQ9cXpX8t9HQEEgkBqCSB6nefPmNWvWDM32oNFoRo0a1bFj
RxaLZb0xjjihaDRaHo9XUlIK1Cgi4qWPj489g5ozZ05eXj6SSBN2QNVDoDiR
gkNxQtDpNQIZzWEEVAY97Fb6TnsdUJn0cPzq5fx0kYJZ16bgMVq2Z7bswJ86
s5qF1b6LddiSjSXtWnfijvbFKew+g0x5yC2SGPz1Y0bDFuxeA5BtGI1aMNt4
2YqAyjGthSeT101HhUBcHSLiJJFIevXq1bt3b6lUCv77008/gdtZdHS0zY2J
iBOCwWAEO6TRTBFQ+fkFa9assadP7du3B36FdECx2Wylsj7mjamfQHEiBYLi
hADutjKVgCHM/bAOqNXB3ifjF8WW3MavXsJJ4khK6k4WTYZnO8b/mrB79q9m
YTRsTqTHidGkJdunN6tzD1anbjiF2d4b2BHtn59b7uFfX5he/6wBEDC8GPL8
QtgBBYGQDrhIXrx4ESd36NOnT48fP+7v7+/h4TF//vzHjx+DK/DkyZOPm7Ge
BFdeXg52KBaLibdBo9FwONziYtMUvPDw8E6dOtkzqB07doBtkDzkYrEETsFz
e6A4kUKVxAlFo1PypJRSbvKHdUD9EuX7NPdYASsOvzpVkCVRcgxGJ3cmkzVU
Jzt1log4yX+79ieSRVMq05U6WAgPFPnlq9xR31h2QP393/QvvlbcfeigumkK
Hh3mgIJAao05c+ZY2Au4l6E/k5h/CViQSCSiUCgVEVBL7enTmDFjMjOzkCl4
XC4XLoTnxkBxIoUPEycEoDRAbIDeEOiAuhIYO9tiKeGNoX2vpf6UTnuBXx3o
GVdKAapG7okTh7TgcKHQepkVy+DwT/9nkMuxtUw5oJhsbU4+vgKpIl4Jl/sx
GjS12CG7W1/Z6fMO7cuUA4ovgEnIIZDa5Mcff/T29ubz+TV6FIVCyWQykZ6l
+/cfYD0NS5s2bZ4+fYZsRqcz5HI4oO+GQHEiheqIE4pKK2U7ymAASio1JCh5
4/rnvSwCyI+9mR9dfAO/brEpg0G+QlOF/mqyIDEdgXDFGnxxEm22nRwPKI1B
KNIWluD7jyY1w5QDqu8Qi92y2ntLdu/TJCQ70KecPCBpMIMBBFI7KBSKzMzM
2jmWVmsKIC8uNmUwyMrKHjVqlL0OqJ9//hnRp7IyilAoguN37gQUJ1IgRZwQ
3gWQc1Pw/SefFft7dsCuyLEW43e7I8f9kXPU4fhdOT9DbBq/q73vMoniZFSr
uWMn2LMm3qRpDoOODHK5jkJ12IPEGTyS/lUj+mf/q9Sd9e//8mfOx08A9S6D
QVk5HL+DQNwP8yp4EgqlHFGjHTt22NOnadOm5+bmIQHkHA4cv3MToDiRAiJO
Pc2MHz+++js0Gg0SJdfh+B0o0cU3jr2Zv/JZZ6w+bX7R/3b6rmxGlMPxO76M
qtPXRjpc/vTZkoOHydobcCfhslXvgrr/8W9T+YtpWTqh3wbiodpGjUbPYGmz
8+yZj/BHP97EKer4JNHazYz/NqlkaH/7hDtyvPz6bcf6VFxqEMJFhCEQd8No
NCoUSgaDgejTs2fBLVu2tKlPbdu2TUxMRDYD28vh85QLIpPJelZAVj9JPQcR
p1IzVCqVxD0rNVJzBnIH+pROC72asmVDaB+sPq0J6XYxyS+F+sxhdXAIlVZK
YrNrB4NAID12Urh6nchvvezkGYPVUulEMOr1ei5Pm1vgYPwuJV36ayC75wDL
8CfvXtJDRzWpGY7G7/L1bI5RC+ffQSDuBjL/DlkCLycnF2f87vHj3xF9olDK
zfPvYPiTywA8ubQC2ONECiQO1dlEp9fwZdRSQuN3h3dEjMTq08pnXkfj5saU
3HKoTzRBtlTFr5+hjKb5d0KRrshB+BMoyodPTCvl/ePTStkPGjQVrl6vfpPo
aP5djo5KN8J8LxCI2wGewIRCIbirImq0efNme/p04MABZJuSklI+XwDzZ7oc
UJxIoabFCcFgHr9zuIALKBGFlw7GTLUIf9rzauLz/DNF7Hj8umW8VKGcUdfy
Z9YaBoUSuI1DfVJFRguXrKB//nWl8KfPGwhXrlW/fuN4/K6UYpDJHbcGAoG4
FOARDBv+dPPmLXv6tHTpUmQbGP7kckBxIoXaEScEJH8mTZDtUJ/iyx6cil9i
kT9zW8Twx9mHHUaPl3DeciWlGl097RsxqtVE9EmTmCzeuYfVtnOl8buPvuRP
m60MDnWsT0WlBrGkfnbxQSBujGmdd7mcRqMjavTmTXyzZs1s6tPIkSOR1VvM
4U9MlaqeXnJdCyhOpFCb4oSi0IgZwjwC4U8vfkvZtO55T6w+bXrR73b6rhzm
KwLhT4V1J/14LWOOHmdqs3IdKpDs/GW2T2/L6PExExT3Hjmsqy0oMghEUJ8g
EPdDrVYzmSzEi7KysocPH25Tn9q3b5+RkYlsRqXSZHA98boNFCdScIo4IQCr
cbh8MCh5zJj7mfu2hA3C6tPa5z2Ckjdm0MMcVqcLcxXqDwm9dgOMOnP0eF6h
Y326EMQZONwiehy8Ir9yHbuZ/OpN/sz5vPGTeN9Nl+w5qElOM72eW6DncOHq
LRCI+6HVatHocVDmzZtvb/wuLu4Nmv1JIoHd0XUUKE6k4ERxQtDolBxJicPk
mYXsN09zj+18Odpi8buzCcuTy5861CeqIFOq4tXP77Ipelwk1hYU21QmyYEA
VqdumvQsU/T478+so8fZPr1lpy8oHvz+blzvb5/Q/v4JssIL/bMG4u0/V0SP
5+pZbJuT7wRzF4l/2l77Jw6BQEhBp9Px+XwkeSYoP//8sz19ev48FI0eh8kz
6yBQnEjB6eKEoNNreFJKCeetQwUKL7i4P/o7i8l3J94sTKQ8dliXwk+XKDnG
WkyeWXewp0+ijf5AgTRpme+jx8MiBbMX0j7+0mL8jvbXj21nO9/oXyn8iUoz
qisFi7J79udPnemsE4dAIKSATL4DRoSo0fXr1+3p040bN5FtgGvByXd1CihO
pFBHxAlBb9AKZDSHaweD8rrkdmDcnBWVF787GjfnTdl9h3XLeGliBas2c4/X
Hd7pU2ExjjghRR0TJ1y22mLynb0iuxBkGT1OYxjV79KTQnGCQNwG89rB4rKy
MkSNnj8PtadPDx8+RCffcblcHRzNrwNAcSKFOiVOCAaDXihnlvFSHSpQEuX3
U/GLLXKPH379A5HUT2XcFHAUcCxnn65zMMhkulIKjji906eEt9wxdteIeVf+
+jFn8Ejbk+8oVINcAcUJAnEzkNwFqD7FxyfY06eAgCOoPrHZHK1W6+y212ug
OJFCHRQnBIPRIFawKbw0hwqUQn12NvFHi9wFB2OmEFk4uJSbIpDT623qJ6NS
Kd7+M444gQK0x94gHdadVFEx9vbA6tyDN2mas88VAoGQjCnDjEyGpn5KS0tv
3769TX0KDAxEtgGFzWZDfXIWUJxIoc6KEwL4YkpVvHJ+pkMFSqOFXkzy8wv2
werTgejJxPQpWSCj1U99kh45BsyH1cGb1bazzWIRK26vMJu3tbuHj7/ijvY1
rXwnrafZISAQN8ZCnzIyMvv164ff+wQKk8lSq2tjsVEcZs2a9YMdDhw44Ny2
1RBQnEihjosTgjlzJp9I4vFMeviV5A1rQrp9gD6VcN/yZVS9oX49CiHixJ8x
j//DHN6kabzx31kU+sdfERKn1p24Y7+1rm7aw5eNgDi9G7yD+gSBuCNI5kwq
lYp4UX5+weDBg23q09Wr11B9YjCYTtSn7777bmIFzZo169y5M/rf3bt3O6tV
NQoUJ1JwCXFCqOh9cqxPWYyXQckbLfSJ4OBdCectT1qu09eXRQQQcTJWTHsx
JR6nMbADbdzhY01T6gi4E6NhC/G23ZqUdMuhuk7dUHF6n3gc6hME4o7I5Qoq
lYZ4UW5unj19OnIkENP75Ex9QujZs+f69eud24ZaAIoTKbiQOCGY9EnJo/DT
P1ifYgjpUxJXSqkP+mQhTghGjQZdt0V24QoRa6qkT/47NUkpOOL0vvdJrrBo
j0EmM8L4BwjExcHqU15evr3BO2zsk3N7n6A4QYjjcuKEYJrToeQSCR2vjj4V
A32SlGn1Tn4UqlFsihOCUfVu2TtmGy88WfrbJ6J1m5ktO2BfpH/VSLRxK9L7
hIqT4sHvqhcRVvpUZpDKtJlZgsU/0j56lzyK1aWn/FKQUam02WZNapqeyazh
DwYCgVQX7OBdbm6en98am/p09OhRp+sTFCcIcRBx0plxuTRlRqNBouQQSVxQ
XX2Slrlr7xOOOCEYNRpNajqzdScbc+v+9gntH5/Kzl8G/qNJz5L+GmihTwwP
T8neX5kduyLiBP7Lnz7HuutJtGnru71h9wz0qW1nPZtt3STax19Kdu+pyU8F
AoGQBtCn8vL3sU9DhgyxqU93796rrE+1esl1b3HSVQDFiRQQcWpopmvXrs5u
zodgyumoYJVxUz5Mnw69nk4kbWYJJ4knpejcLnRc9SJcsGCJw8VotOVU/oy5
tH9+jvUids/+8qs3sQpk0qcjJ1idulXqffqiIfeb7zVpmTbFSbRpG05fFrNV
Rz2PZ9EYKE4QiMuBnXmXl5c/dOhQm/p08+YtVJ9YrNpLXODG4gQ++YYVuOIA
Ux3ERYfqrDEY9UI5g0jW8Sx6hLU+HX8zn8iadyUcZOZdfUxcANDRmcCLRJu3
iXfuUT5+ai9xEyhgM2aLdlgLYrXtTP/Kw0Kc1LHxDtMdiP13WDQDihME4oqY
IlSlsrIyCjp4N2DAAJv6FBr6opbzPrmxOGGBPU6k4DbihGAw6AVyOnF98gvp
irrTquAu5xJXpNNeOKwL9i+SM+vnoi0Ag0SKXbTFXtGkZgC/YjZtXan36T+N
ZacvvO9uWr/FYbQ50C1j5ZgHKE4QiOsC9Eksfp91HOjTyJEjbepTfHwCqk8c
Ts0u2gLFCUIcNxMnBL1Bx5dRiSwZnEEPO5+0Cpt1HKgUEKpsRpTDumW8NImS
63CQyy0xrXknluiKShzrU1qm5JcDjP82qdT71KmbZP8h+fXbrA4+RGbqyc5d
UL+JRwvtX59DcYJAXBpwDRGJROiSwRkZmR07drR2p4YNGyYmJmHWvOPVUCxu
27ZtZ8+eXRN7rlNAcSIFtxQnBJ1By5NSijlJDhUoufzpiTcLsSN36573vJW+
M4/12mHdcn6GTMWvn/r0J9L7VOC490md8Fbkt8Hx0i0Ey98+huIEgbgBBoNB
KBQWF5eg+tS5c2drffLy8srMzEK2ARvz+QJy9en169fIgXhWEZVuBhQnUnBj
cULQ6TVcSSkRfYove3D49Q9Yfdr0ov/DrIOF7DcO61L5mTK1wNnn6hxMvU8i
sTa/yKE+0b5uxmzVifbRF1U1JfG23fJrt5R/PFO9eq1+HQt7nCAQdwJYEI/H
LyoqRtQoLu5No0aNrPVp8ODBeXn5yDYlJaUikQh4V/WPzmazO3Xq5Onp6eHh
MWXKFFL2WWeB4kQKbi9OCFq9ii0pdug/oLwqvrb31USsPm0NHxacd7KIneCw
Lk2QpVCLnH2uzgHok54n0Obk44gTMqtO9fIVf8pMgkvgmWKcvmz4Pht5Tr6e
x6d9BGOcIBB3Q6fTcThcNKgpODjEZuDT/PkL0G1KS8skEonDDv81a9Zs3brV
5lvA2SZOnNi6dWsKhfLkyROw/0OHDllv9ubNm2HDhpWXl1f/NJ0LFCdSqCfi
hKDWKZiiAiL69CL/3M6Xo7H69HPk+JeFV4jUZQjz1Fq5s8/VORgNBj2Xp83J
wxEn5GdVaARvwmQig3fCpSste67+9YV4yzajobrDo0bzgy4oOGmsIBBIbaLR
aJhMFqpGv/32m019Onw4AN2GQimXyfCWcPL19Z05c6bNt/bs2QP29vz5c+S/
/v7+QC2ioqIsNgsNDQWbFRYWknGKzgSKEynUK3FCUGqkNEGOQ/8pYsf/kXP0
p7BBFusFx5beIaJPLHGRVqdy9rk6B5OQsNjarFwccUKK4t4j0+Cd/VgmZot2
6tdvrMVJ+KOfNr/QIJYQaY9BKlW/ijaIxegrOgpFtHkr/YuG7zq1Pv9atGGL
rrQM3UDP5YIqRmevnwWB1E/UajWdTkfV6MiRQJv6dOPGTXQbKpWmtLPWgD1x
CgsLAzvBrucLtG306NEdOnRgVl6bAIoTBEs9FCcEuVpIZL3gAlbcvcy9G0L7
WCR9SqUGE9An04J3erfLmUkQo1ZrsV6wvczhgnmLbYoTs1VH9atYG7FSiDjZ
X/DOAk1iEtibKioa+a8q8hXYg2Vn198+of3zM9WLcGQbxZ174EXgVzX7GUEg
EPsoFAo05Tgoa9eutalPf/zxFJtyHMiPxX5sihOVSm3bti14yyLLAY1Gs34d
ihMES70Vpz/fLXhHaMWWXGb09VT/NSHdUXdaHewdlLwxl/nKYd0S7luhnG4w
1tPBINOCdxTqu/4lW2vVvXvr96ecgSMqrbpiXrFOceeBjY3vPFBFvMK+oiul
GFV2+/ew4oTEltP+ZmuIELz4f58BrfoTihMEUjcwXaUl0tLSMlSNgAJZu1P7
9u3T0zMwOTM5WO2xFicgV6NGjerYsSOLxbI+qHVPFBQnCJb6LE4IQGkEcjrQ
G4cKlEkPv5C0Gpv0aUNoH/O0u3iHdYGeAUmrv1kLZHIiOTNBkRw4zPi6OdZn
uCPHK4NDidTVM1hGjY3+Paw4sXv2xw+pArb2JxQnCKQuYc5aIEKzFuTl5Y8Z
M8Zan779dhLqTkVFxXw+H5kiN378eE9Pz4EY2rZtC7aPjo62d8RNmzaBDbp2
7YpsD36A4gRBgeKEUJG1wHHw0tvyJwGxM7Ejd9sihj/PO02kbjk/Q64WOvtc
nYNp2h1foM3Fm3aHFE1ismjdZvrnX7/3mf/7TDBnkTomzrE+ZeXq2RyLYG9U
nDRvk4nM41PHxkFxgkDqGnq9gcvlASVC1CgzM6tFixbW+rR+/XpUn0pKSsVi
MRAnb2/vFRhGjx4Ntrxy5Yq9Y82aNQtsMHPmTGT7SZMmQXGCoEBxwqLRKQlO
u4ss+m1X5FisPu2J8n1VfI1IXbowt75Pu8u2Pe0OW9TRsfwZ84AyvYt3atmR
/tn/RGs2vk9NgFNy8sBR0P49RJwkhwMFC5Y4Fqe/fsyfNV+8dScUJwikDqLV
alms99PuwsPDbQY+XbkShG4zatSo6dOnW+xn8eLFTZo0SU9Ptz7E2bNnzZHn
N9BX4FAdBAsUJ2uUGglVkOXQf4rY8U9yjmwOG4jVp8OvZyRRfieiT2xJsU5v
GcRYTzBqdXoGy3ranXVRPQ/nDh9nGkHr0PWdQbVoJz12msjInTa/CJl2h4jT
BxQoThBI3USlUlGpNFSN7t27b1Ofnj8PBe+OHDny228n0Wh0FSYSUiaT9e3b
t0ePHmLMfFtAUlKSh4fHqlWrsC9CcYJggeJkE9Mq3ioehZfm0H/yWbF30nev
f94LdaeVzzpfSFqdxXjpOG6c81Ygo9XfuHG1RldKIaJAiut32L0GYpWG3aO/
4vZ9InV1FKo6OhZUkV24LPRbT6THSbh8leTAIShOEEhdBlylgfyUlVFQfdq+
fYe1O3Xu3GX48OFo+BOLxdZq38WN5+bmNm/efPbs2WjvNJ/P9/b2HjRokEJR
aa4uFCcIFihOOBiMBqGcSSRuPJsRFZS80S/YB7va3d2MPQWsOGJx4/V0seA/
kdXuiMWNSwOOMzw8sZLDG/etKtT2NL1K3nXzrinGKSxCm5dPpKNJk54BY5wg
EJfAYDBiV7uzN+2uQ4cOmLjxIh7vXdz47du3wbsnTpww78owbdo0T09PsIHF
UaA4QbBAcXKIzqDlSEqIjL6lUUMsFgveGj4srOA8kbo0QZZSQyido/thWu1O
KCIS+KR5mypau4n+6f/ee84/PxcsXKaOT3IoTvLLV/VsDmfYGHxr4vQf+iec
VQeBuBR6vZ7Lfb9cS05Oro+Pj7U+7du33yJuHFx81qxZ06hRo/j4+ICAALDN
48ePrfefnZ29du1aNptd+6dGLlCcSAGKE0HUWjlN6DjfOCivS27tiZqA1adf
Y6YmUB4RqcsUFWh0tpPfuj1Grc4iYaaDuHHManeMBk0lBwI0Gdn44gR+Vv4R
bEoY/vdPbFjT3z+hf9ZAk5r2JxQnCMQF0Wg0dDoDVaOoqFc2A5+ePQvGLtci
EAiGDh2KvLVlyxZnn0TNAsWJFKA4VQmpipfPir2fue/4mwWBcXPOJa6wN5Mu
OPfEFkzc+MpnXueTVhEJfAKFKymrv/nGVWpdWTkRfVI+fc6t3H3E9uktv34b
X5y05jyc9C++RsKZ0Lgm8C94UZOSijQDihME4qLI5QqgQ6ganT9/3tqd2rRp
g02YGR+fAF5s27atddZxNwOKEym4jTjtj/k+quyG4+2qR0jh2TUh3RARWvHM
y/xvpx0vRyWUPbT2nzzW6xtp2/xCumIDn+5l7i1kv3HoTqXcZJGcaTQakOOq
dPLdUeOTGc9r+gTrCObApxIi+gR0iNmqY6Wxtn5DlSEvKg3wJaUoH/2hSUx+
32cVnyT238ls25n2z89p//yM1cFbevyUQSLBNECizc4xauupvkIgLo3RaBSJ
xNjApxUrVlrr0+zZs9EN2rdvP2/ePCTwyY2B4kQKbiNOa0K6Pys4VaOHeJx7
BDsAh+1NWve8l73BuHRa6Kn4xdjtt0eMiCi8RKTricJPRxJmKrVSUPF1+d0a
PcE6hSnwSSDU5hBImJmaASyoUuDTv74QLl6hjk1wrF7ZeXoOzyJhJgQCcQMs
Ap9yc/OGDRtmrU+nTp0G7/r4+CxatLikpAQJfHJ222sKKE6kAMWJICnMUJvW
hJZNL/rjrL3yuuS2ReDToZhpiUQDn/IlSm59EycEoDR6OpNI15MqKgbIEu2j
L98HPv2nseTgESJ1gZ4ZhCI3vlpCIPUWi8Cn6OgYm4FPnTp1AuKEbFNeTrVI
R+A2QHEiBShOBDkcOwNfnEB5nn8Gx3+K2AlPc49tfjEA21V1LnFFJj3coTvl
MF6B7WMod2ruBOsyRpUKXSnYgT6FhJkWC8YGPvUepHz8lEhdXUkZzkrBEAjE
dZHJ5NiMTxcuXLR2p9at2+Tl5aPbMJksrdsN1kNxIgVEnAxmXPqJu0bFiSOn
OLQmYEGHX89wqEB5zJjrqf4WgU8PMvcX4a4UnMOIAlv+nnNEphLU0DnWfQxi
ibagiFDg05XrrHZd3uvTPz7lT52liowmpE9UulGrNSrr6dxGCMRdATc4c8an
YlSNli9fbq1PO3bssFop2IXvjAiGCqA4kQIiTgje3t7Obs6H4xfcdUNon+0v
R9ZE2RI2yKE4gbI62Mc/fMhPYYMcls0v+iNB5mhZFdxlY2hfe9sjE/QeZf0K
JIohzFPr3LMb2SGmlYK5PCJrtWhSM0wrBX/yH1SfwM+iTVvB6w7rKh79wWzd
ScfjOft0IRAIyeh0OjabjQ186t27j7U+3b59G92mtLRMKpV98BHLy8svXLhA
3hlUGZlMhj01J7bEbUDEKTebS6WINWoXDpEF4nTw9dTbmT/XRDmXtIqIOG16
0R9sfC1924W3fucSVzosgbFzgSxh97AtfPjJ+CXWW55JWIaKE1I4klJdvU1Z
oNXqaHRCI3cvX/HGT3qfduAvHzFbdZRdCMKpoo5PYjZtbZqdN2iEXiJ19rlC
IBDyUSpV5eVUVI2ePXtm7U4WKQtoNLpara7qgUCV3r17g73FxsbWxIlUFdjj
RAqoOJlKDpfDlhn0LtktWaNDdVK1YFVwF0dDdZ2BMiHbmzJhy+klHMdrtRSx
E57kHNkQ2gfdz9qQ7nfSd1us1YIM1WHFCZQS7lshJmVBfcMgVxAcuZMFXWd1
64sNfOJPmamOiavUQ/U2VR0dC4opN9Q/Pxdt2AI2EyxarknP1DFZ9vISGBQK
PeyYgkBcEKPRKBaLS0pKES/y8fEZNWqUtT4tXboMdSdQOByunsAk3NTU1D/M
TJ06FdWwa9euIS86MXQKihMpVBIncynM54tFrhciW9PB4ZdTNzrscSoX52Cr
6PRqtriYyLy5bEbUhaTVSFaod11PEcMji4LwxQkp5fwMuVpUcydelzGN3PEF
DlMW0D/5j3DpSsmBw4yvm70fufvsf6KNWzUp6cg24Gf0LdmZ82DnwhV+6CuK
uw9spiyQ7D1A+79Pa/28IRAIOQALAi6EpiMoKCj85htfa326fv062Ob7778/
c+aMea0WCX5IMDZ6KjAwkEKheHp6AmlBXhEKhfYqxsfHT58+ncvl1sC5moDi
RArW4oSUshKhSulKI0E1LU5UcS5up5PXsfj5NiuqtFKaIJuIPsWXPdgf/R12
t8ffLEinvcAXJzRlQf1dq8VRygJEnEzdSgnJ/OlzsF1PzBbtZCfPgreUj58K
l66i/f3f/B/mvNutRsPu3tfkV5u2qiJeaXPzDWLLxQShOEEgboBare7atSua
jiAxMdHanZo2berh4eHv74+mLFDZn4QLzCcyMrJ58+bAghDFCgkJATvZsGFD
aWkpTppN5I5MpVJr5DyhOJGEPXFCCosh1etdYySoFhJgZnNiVgV7r3zW2dqa
DsfOVOnk9iqCL45UySvjpRLRp+C8k9iUBWtDut/N+CWLHoEvTuaSxJdRDfV1
5M6UsqC4DF+c3sV+377P7trHItm4/OYdRuNWrPbeBtn7KFBdGYX+ZUN2935o
SLmurNyoeh/nAMUJAnEPevbsuXr1anTkDpSgoCBrferbty925I7N5tgcuVMo
FAMHDvTx8REI3s+D3rVrF9hDWFgYTjOgOLkE+OIESkEeTyRU1f1MBY9yA4DY
1PRRigTJx+IXYq1pfWjvR7mHcawJRW/Q8aQUIu6Uy4y+nLwea2jbI0YExs2J
KbnpsC6Fn67QiGv6c6izmFIW5BbgixNSpIePMjw83+vT3z6hffSlNjvHYofK
p8GmYKcFS7F19SyO0fzMCMUJAnEPgDitX79erzdwuTysGs2bN89an27duoVu
UFxcIhJZJhtfsWKFh4fH27dvsS/qdDpfX9+2bdvieBEUJ5fAoTi9G7krFYIH
emc3tq7AkpXE0x7HUO6kscI1+qrFg6m1cpogh4g+JVAe7Xs1yWLkjki2TFDY
4iKd3s1Xq7SHaeSOUWnkjvbxV/xZ81XhURZFGfyCP28J7aMvEHeSX7O91qF4
yzbwrviXA5WqR8Vos/NEm/1p//h3LZ8gBAIhHUSckJ/Vag2NRkfVKDExqVWr
Vhbu1LFjx+TkFHQb7MjdtWvXwAbnz5+3PgqLxQIVR40aZW81YShOLgHya8pI
Zzl0J9PIHVPmKiN3dRnwbCJRcsu4KUQU6GnusU0v+r/v4Hre60nOESIV6/uc
O4VSV/RumWDav77ADszZLKy2XvZ2BUzMtA0mp0Gl8ncoThCIy4MVpz+Rq7RE
ih25O3/+gnXXk5eX1zgMEyZMGD16NJCT77//3t6BoqOjQUUfH5/Jthg8eDAU
p7oPIk7jpl29djONiDsV5PNccc5dHaRKI3dXKo/cHYj+nuA6d1R+plJTf5MR
GURibU4e7eOvuMPGSA4ctldYXXrS/vGpJjnF5k4Ud+8DQeKOHG9dkTvKF4iT
nsEyuvui6hCI+7FixYrlFXh6evbu3Rv974kTJ/40J9zGLhPs4eEBNrPWp0GD
Bo2vYOjQYUBOJk2aZO+gkZGRoErXrl2n2AKKk0uAiFPf0edAWbT6UVRUKRF9
opSK1HDkjgzUOgXBOXdvyu7/HDkem2n8cvJ64FRE6nIkJfr6my1TR//3f61j
nCyTXrZox/RsbxBZJnbQFhTSP/0fp99QTXqWdUXhqvXAuEw/5xcZqpFbGAKB
1D7Dhg0bUsGAAQMGDhyI/nfjxo3oZmq1mkajAXFq3Lixv79/cnKKtT4BEcrK
ykb8KjAwELxy5swZ6yMyGIz27duPHTvWXionOFTnEmDFCZSB4y7sO/wqI43Q
yB2b5arZMusUpjxsCnYJ13G2zEJ2/N2MX9aEdEf1afOLAaH5Z4m4Uyk3GRyl
7gf51wSmlAJbtqEjd7aXWXnwO+1fX/AmTsFWNCgUrA4+9H//RxkcarPWe3FC
5txRqEZNPRVUCMSNMY/cSRBxwlkmGF3nbt68eY0aNUpMTMTuRKfTjR8/vl27
dnQ63d6BoDi5BMiv6fCx14O/uYjq04Qfrt2+l0HEnQrz+RIxHLkjAZ1ewxQV
EFGgdFro8TfzsUHjR2JnpVFDiNSlCbJU2nrXMQLESbx9N/jBIBBqs/PsuZPk
lwO0v3wkPRyIVhTMXYSENjG+bgbedShOppKVq+fwjK6/KigEArGgSZMmu3f/
jJ1zN3v2HGt9Cg+PyMrK7tu3r7e3N5/PR6sDrQLvRkRE4BwCipNLgM6qi4mh
/Lj+CepOoCxf9+T1awqhkbsykUYNR+5IQK4WUnhpRBQosihoW8Rw1J38Qrpe
T92az4qFI3fWoOL0p3nkTldWbq1A0oBj7O796P9tTPv7J+rXplWl5JeCLAPI
u/RUPPjdgTghpbDYoKin+UghEHcFiFNAQIBKVWmdu7i4N02bNrVwp9GjR4eF
hbdo0WLKlClIuktkObx9+/bhHwKKk0tgkY7gzr3MCT9cQ91psO/Fo6fisjM5
Dt0pL4fL5cgN8EG72hiMep6snIj/AE26nuq/Otgb1actYYNe5J+r0sidRq/k
ystBAT84+9RrCuXjJxYJmgxSqTa/sJI4HTvNGTSS3X8YsCxGoxaqsAjaPz+n
/68J26c37eOv3uvTPz4VzFmoSUxGaimfPJMeOWGvC0tHoxvtTDqGQCAux7x5
8x4/fvyneeROJBIVFxdj5tydt+566tu3r2lA5/Dh0tLSli1bent7b9++fdeu
XUql3YttfHz8jBkzeDW2AiYUJ1KwzuOUkcbaH/Bq4LgLqD5NW3An5HkBka6n
4kKBXA7vFCSg1inoQkLpnt6WPzn0ejp25O5o3NwMepjDiomURxeS/PxCuqJ9
VjcydtAlBcQbyZAWZrIja+5DqFGMBoOeybK2HeXT50j6AmazNuq4BNNCLelZ
4p920L9oiOoTw8NTduYiTsTU+5Kdq+cJ6mdoGQTi3uh0OiaThbpTQUHhxIkT
rfUJwcPDo1WrVm3atGnXrp1Y7LQcxVCcSMFeAsyoqNIFKx+i7tRvzLkdeyPS
UphE9IlOk+h0cHZ2dUHSPZUSS/cUVnBhdbAP6k7rnve4n7mvkB1vb/sX+edW
PuuMXVYYFPDKquAuaaxwgi18lBuw6UW/Gv0QahqjWm09cicNOE775+eKe4+w
L6pevuKOmVBpoZa+Q1ThUUT0SVdcil2oBQKBuA1yuby0tAzVp/DwcJvidPfu
PXQboFtAupzSWihOpICfOfxi0NuR311B9Wn8tKu37hIKGs/P5QkFSvigXX2I
p3v6JdJ3W/gw7ErEO1+OflV8zXrLiMLLFspUWZ+8sjjRRNrmBuKEYJBILYLG
lQ+f2FQg2YUgZrM2qDvRP/2fcPV6TVomEX3S05lGmD8WAnE7DAYjj8fHBo3/
9JO/tTs9ePAQs1BLsUgkqv1bJBQnUnC45EpiAm391hBs0PiqjU/fvCknok9l
JXChFnIwj9zl4ovTnqgJR2JnJZQ93PNqIlaETsUvyaJHYLfc8XKUPWtCys9R
3xBplduIE8AIngCpNCL+o0lKES5bTfv4S2zQuPzKdUIjd3mFBrHE2ecKgUDI
R6PRUKk0VI2ys3O6detm4U6DBw/Oycm1uVBL7QDFiRQIrlX38HH2xJnXUXca
NvHSqfMJOVmOg8ZzkXRPMGi82pjCERWsEk4SvjiBH4rYCU9yAjeG9rW5UEt0
8XV8a0JKAT/RYZPcSZwQDDK5Nr+IiAIpf3/G7tEfO3LHnzxDk5BMaOTOlO4J
hgJCIO6GKSmfWFJcXIKq0c2bt6y7no4ePYbtnuJyuYbaWnoAihMpEBQnJGh8
7+GoAWPPo/o0a8m9sPAiInULC/hSKYzxIAGNTmkv0/gvkb67I8c9yz2OlMfZ
hw/FTFuBGZLb+XLM/cy9x+LmEhGns0krk+jP8MuZpB+Bnjn7IyEZo8Go53C1
WblEFEjyywH65w3eB403bC4NOEYsaDxPz+PDsWwIxP3Q6fQsFhurRnPnzrVw
pyZNmsTHJ6AblJaWymS1kWEPihMpIOKkUGhLigREFCg8onj20nuoOwGP2vNr
FMFM4zSqRKeFMR7VxRw0zrEOGv858hsiRkRuWR/a29mfR41g1GptpnuyLurY
BMHshZWDxgcrnwQT6noqKjEoFM4+VwgEQj4KhaKsjIKq0atX0Q0bNrTQp1Wr
VmH9isFg1nTQOBQnUkDE6U/z7ZjHVeTlOPafnCzOmYuJwyZefp9pfMb1+4+y
YdB4baI3aDmSUosep19jpqZRQyxKSvmzqymbsemeiJQrbzeAupn0CLo4T6hk
2iy3Mne7X48TFoNQpM2xm2kcW+QXg5ieHbDpnkRrNmoysgkHjeudfa4QCIRk
DAaDRdD4nj17rUfuHj58hG5QVFSzQeNQnEgBFScEjUZfThETUaD4N9TVm59i
g8bX+QcnJtAIBY2XCtUw0zgZKDXScn6mRYyTnXRPf+yP/o64OCVRfkfrMkUF
Or2NkVb3i3GyxqjTAbEhFDSeki5auxkbNM7pM0j55Jn1lqqwSMWD31UhYe/N
KjffIHJaahcIBFJzqNVqbNB4Tk5ur169LNxp1KhReXn52KBxUKsmGgPFqUoU
FBQAl7V+3UKcECRidWE+n4gC3bmX+c30q6g7jZh05WLQWyIVc2GmcZIwGg1C
OaOEk4QvTkjQ+MOsg2sxawTbKweiJ1vULeG+FSlYFs9B9UGcEMxB44VE9AlI
EXfYWGzXE2/iFMmeg5rEZGBWkl8OsDr4YBJpthRt9FfHJ2lNqctPqcJewjWC
IRD3w5xpXIwNGr9+/YZ119Nvv/2G7Z7i8XikB41DcSIO+PD79+/v5+dn/ZZN
cQLo9QYWU0pEgdJSmLv2R/Qb877raf6Kh1FRpUTqFhcKFDDTOBlodap90ZPw
xQkp6bQXAa9n2LcmL2BW2O4mbKEJsjW694sF1B9x+hMJGmdztVkEAr8zc8Rb
ttOxC7X85SPx1t2cQSNMP5tXDcYWZhsvdUwc7eMvhUtXabNzDQKhs88VAoGQ
j1arYzKZWDWaNWuWhTt17do1MzMLEzReJpeTGQYJxYkIQHTLy8t/+ukn8Bup
kjghKBRa4DZEFOh5aOEPC++g7jRw/IVfA2MyM9hE6jLpUj1MDFhtDsfOOJW4
lGCm8ac5R1c+62wtThtD+yZSHuPWTRLKGUjXU70SJwSjRqMrLiXY9cQbP8nC
kWyXv30C3In20RcmcXoXNA4zjUMg7olMJistLUXVKCYmxrrrafv2HVi/YrHY
epLCIKE4EaF79+7o7+IDxOlPc05UDltOxH+yMznHTscN8b2I6tP3c24+eZpH
pG5BHk8irtU8YO6HQitWaqV6g44jKSHiTjmMV4Gxs7HWtOPlqISyR0Tq0gTZ
aq1crVPINPWuewRIo54vIJivQB50nfHfJoT06f8+RcXJVLJy9FyeEY5lQyBu
h8Fg4HC4WDUCpmSdryAm5jUm03iJREJC7lwoTkRISEgAQhsZGfnB4oSgUulK
i4VEFCj2NWXZ2t+xQeNbdr1IfssgUpdaLtZq4fQiElBoxBR+OhEFii97sDty
HOpOq4O9b6ZtL2S/IVKXKy0Dnubsc3UOpnwF5YQyjUsOBhASp79+XEmckFJY
bJDLnX2uEAiEfJRKJYVSjqpRenpG586dLfRp6dJlWL+i0ehabbXCIKE4EUej
0VRTnP40P2jzeYTyFYBy7Wba2Cm/oe40ZvJvV2+kEqmYn8sTwHwFZGAwGviy
ciL+AzTpVvpOv5CuqD7tejkmrvQukbql3BSpkufsc3UaBrFEm1uAL07SgGOE
xOkvHwnmLIL5CiCQ+oPprsoXFBW9V6Pz589bj9z9/vsTbL4CoVD4wbdIKE7E
IUWc3u1KraeUiogoUEoyw3/3C2zX07K1v8fFEl3kDuYrIAWVVlbOzyCiQKnU
4IDYmag7rXzmdSV5Qx7rNZG6LHFh/e160un1DBYp4sSfucDufvIKDRKps88V
AoGQj1pdaZG7goLCUaNGWbjTtGnTwevVz1cAxUmlUsXYIT09HbslieL0p1mS
hQJlfi6PiAL98Sxv8txb2EXuzl1KJFIxz5yvAHY9VR+jqeuJSsR/QAnOPbEh
tA+qT1vDh0UVXSVSsYyXKlMJnH2uTsMgl2sLiqvb4zR/KX7nlWmRO9j1BIG4
HeZ8BaLi4mJUjR4+fGjd9XTv3r3K+Qr4VU3pA8WJQqFYf7AI48aNw25Jrjgh
aLV6KrFUmZkZ7MPHXg8cfwHVp4UrH8bElBGpW1IkUChgZhsSUGvlVEEWEQXK
Yrw8Gb+o0rp1CcuzGZFE6jKEeRpdPV1DxBQ0zubYFSerLARWMU4f2Yhxsi45
eTBfAQTilmi1WjqdgVWj2bNnW9zchw8fnp9fgG5QVkZRKpWOd10BFCfwIWfb
obS0FLtlTYgTgkSsKsgj1PX08mXJLMwid0N8L548G5+TxSFSl8WUwVSZ1cfU
VShnFHOSiChQeMHFLWEDUXfaENonJO80sW6rJKGcXm+7Co1KlUW+AuI9TqzO
PZBkmA6LrqzcqIEJ0CAQN0QqlWJTZUZH28hXcPr0aaxfsdkcgil9XF2cVCqV
UCjUOLr6yeVyYEEMBqM6x6o5cfrTtBK0gU6TEPEfJF/B4G/e5yuYs+w+wVSZ
RQV8uQzeKUhAo1PShblEFCiX+ep80qoVz7xQffp/9s4DPIpqbcD/Ld57sevV
S0e8gqIgXFGRIigovQpSBBEEKUrvvYaOdEE6oUPo6b2Q3vvupifbe++7s/xn
MzAZNsnuSbKzm+ye9zlPnmR2zuzMoNk33/nm+44nzSngxMDMZUnydUZXNPtu
hlhDT0KRjThJ5v4K406c1u+oTp6BcSdjPg28i7uvFYFAOB+z2czj8chqtHr1
Ght3+uijj7Kzc8ilMlUqx79yW7o4rVixAlz7rVu36tuhuLh4+vTp7du3J+7S
5s2b5fLGNLSiVJxwVErYLi2xcRWzf7tLuNPA0WcPHU8ATgUzl4NKZToJpU5U
IcqCUaD4shtbo4YR7rQmrH940RnIjCmximmxeOm/l0X3NPSEi5MuJEK2eoN1
wY68ZvfXF8FX4bjvRZN+IOuTaMIUfUIKVOipvNJCTU8rBALhXlQqdXl5BaFG
GRmZXbt2tdGnQ4cOP18qk2cy2UuDbNHiJBKJOnfubEec4uPj8R0A77zzDqFP
ffv2FQqFDX07o9HYrVu3TZs21X7JWeL0BO/SwoHq0lKYLzh1NuXrsecJffrh
l9sRkaUwc4GeKRXok8IJmDETX14K4z9FvETfzLWLSKGnP5J/gQw9McV5WoP3
Pg6GSaSG7Dx9bIIhJ99oLSceJf3lN26nruzXW3PaviuaPEN73/9pYOrwcW7H
roQ7sV9rrTx8Aj70VGepTEytxpTee/MRiJYOhmF8voCsRtu2bbdxp06dOgGn
er5UZr3/17dccSorK5syZQp+yXWKk0Kh6NmzJ3j1008/jYmJwTdev3793Xff
BRsnTZrkxJNxojjhaNQGyC4tCfGVvyx9QLjTgJFn9h2Og+zSwmYqTCYvDWU4
F5VOAtml5XHZjU2RQ0ihp34BtKOQoSehsgKzeOnjYNYuLeVVMApkSMsUT/uJ
HJISfj0MSBeUPhWVYBqtsQB8U2wWCBQ+ezht3nnqYK+3ka/bZKqqMlVUGrKy
3X0/EAhEw9BqtRUVleRSmR9++KGNPvn47CL7FYfDrbNUZosTp+Tk5JkzZw4a
NIh8sXWK04EDB96urrhuk+P96NEjfBY4lLPOyuni9ORplxYVjP+Ace5S+pDx
Fwh9mjz7ZkhoEczEIrpILkNdWpyAGTPy5CUw/sPgJVzMWEUOPe2Nm5TJDISZ
WynK1hqc0DKghYJJZcZCOowCqa/e5HZ4ryb09GZbxc69UO6UV8j/rL9g4BD2
K2/VLkvOeuEV4ZjvuB27uPtOIBCIBoNhmFAoIqvRqVOnbNypY8eOmZlZ5FKZ
tXN7Wpw4Xbp0qXZufJ3i9Pnnn4OXFi1aZLPdbDZ/8MEH4KWNGzc666yoECcc
rdZYVgIVekpOYv668hHhTv1HnNm5Lzo3hwczF3VpcRZqvRS4DWTW05aooYQ7
LQv+5G7enhJ+Cgo92cfapYXJhgo9pWRYk8mrM6Dwwe8zUBce7XAir+vHtmlU
z+sT5+0O7r4NCASikeh0OnKXlvz8gs8++4zQiYkTJ44ePXrNmrU2XVoMhprQ
U4sTJ5FIlP0MvHlcneLEZDLtONWMGTPAS2PGjHHWWVEnTk+qHy8SCdWQXVp8
r2UNnXiJ0KcJP17zh2sQzKCJZFIUenICmAUTKWG7tNzO3QmUidAnn9hxqZUP
UOjJIZhSZaQxYPRJ43ef161XTejpxTdlq9YbcgvsTGG//G8HD+79/WV33wAE
AtF4qru0iMldWi5fvoI7Q+/evQmJCg+PIIeeZDIZXiKmxYkTGYFAUJ8dRUVF
4S/ZVP/G2bZtG54ujmHOyfChVJxw9HpTRRlUg+C0VNay9YGEO/UbfnqzT0R2
JhdmblWFzGjw0lCGc9EY5JAP3GUyA/fEfUe40+Kgj69mbSziJcLM5ctLTWYv
rS9hMZlMLA5U6CknX7Z8DbCdmtDTp/3qCz1pHwXCVDzQRcW4+wYgEIgmodfr
q6qYhBoxGEXffPOtzXrWwoULyaEnJpMFZnmqOJ09exZ/SaOpowKzr68v/io4
glPOBBcnVTVqtdrwDGeJGQ5wXYkYtkHwjdu5IybXNAgeM+3KvQcFkKEnKWoQ
7AwwzCxUlMP4Twk/5X7+/hUhnxL6tCVqaHzZTZi55cJMtd57i2BbQ0+FcKGn
uw+BL9WEnlq9AWyq9m6ytZtgxEm2ZoO7Lx2BQDQV66eqREJWIz8/v9rpQGFh
4YWFtJycXHx4qjjhmeGtW7euc+Lt27fxiSwWyylngosTQdtnAENzyvHJGPTm
CrgGwRnpnDVbQskNgtdtDc3M4MDMrSyXGVDoyRloDYpKcQ6MAuWwwg4n/Ehu
EHw5c10xPwku9FRixry0q44FGKrdBsHPhZ6AFz0fetI+CCDvI120HEqcVqxx
93UjEAjnYNMgGIwRI0bW1icy7j7lxmNHnPbu3ft29SN1dU68c+cOFeLklEPB
0KDQ0937BWOmXSHcadSUy3fu5cNMBMcXizQo9NR0MGuDYKisJzCC6SdXh/Yl
9GlH9Ki0yoeQoSevbhCsVBnpxZChJ0HfQTUW9LeXZKs3Eq/K122GEqe1Tnu0
BIFAuB1rLy2prKSkpkHwo0f+tX0pKCgYvOSpEadDhw7hL9X5uX/9+nUqluqc
cih44ENP2ZnczT4R5NDTWujQU0WZVK83ufjSPBK9ScOSFMAoUAEn5njSHMKd
lgT1vJK1nsFLgAo9KUrNmJf+e1nMZjOHC1lzAMgS+8U3a0JPPT/Hq2hqg0Jh
xEkfn+Duy0UgEE7GYHgu9FRUZO08YuNOs2bN8lRxunDhAv6SWq2uPfH48ePg
pc6dOzsrnOIWcXrSwNDTQ3/auOlXGxd6EgnVKPTUdKz/Xmo2ZIPgINrxFSGf
Efq0OfLbpHI/mIkVwkylTuzua3UbmFpjZECFnnTh0YJBQ8nPyknnLzakZ9VR
wclm/O0lE5NlsduUAYFAtERqh54CAgK9ZKkuPT0df4lGo9WeuGDBAvDSiBEj
nHUm7hInnAaEnrJsQ0/wWU9lpVKd1ktDGc5Fb9QwJfkwCpTNCj2UMIP8wN2V
rA2QD9xxZUVenfXEhgo9GXLy5eu3sF99uyb01KsP991u1upP9ddxYr/R1jq9
kIHJvbciBALhwRgMRhbruaynuXPnerw46XS6tm3bgpfOnDlTe+LAgQPBS6tW
rXLWmbhXnJ64KvQEhoCvrrOfF4FEpi0pF+OjqFSUT+cTP4KhVnvps/M2WCwY
fOgplPEnOetpW9TwpIo7kFlPCm2DezJ6DJgGOvQUFSscPPy5Epcdu7Beeftp
tXCyNf3zNcGQkZzW7xBzTVUsi6mRf1CYysp1YRFgmErLnHvtCASiiYBPVblc
XlpaE3oKD4/wbHECjBo1Crw0bNgwm+1FRUX/+c9/wEuRkZHOOhNcnNZUs2vX
LmcdtqHUGXqKii6LiSl3GHpaswU29FRaItFq6w1lnLuSTj6szYiMK3XZ3Sit
kHD5zbo3q94EG3rKZ0ceSfzp+VpP8KEnhslrQ09m2NATGIpd+5/LeurVRzp/
EbdTV7yKOJAl6ZKV+tgEXXg00VP46WhI6MlYXKI8dFRz94FwyAiykgm+Gqq5
ex+8ZKQzKL0nCAQCHqPRyGaz8QLj86v54ou+HixO/v5PU+IPHTpEbFQoFCNG
jAAb+/Xr58QiS7g4XaimzpNxGdWhJy2dVuM5MxfcWbD8IUzoaeTkyzf9cpsY
eioqEU2dexMvvEkuwgm+bvQJF0vqKKtFEZNm3dh7NM5lb9c4rKEnFQsy9BRM
/2NlaB9y6Cm54i5k6EmpE7n7Wt2GtW8vowQq9BQWKej7FTm+JJn7qz4r15CT
73AuZOhJ43fXfgKV5vpNF9wTBAIBj1wup9MZ+57hweIEmDZtGr7DjBkzTp06
tWfPnvfffx/82K5du9TUVCeeiduX6mwwGsxVFTKH4oSHnrbsiiRLzooNQWmp
bKisp1qhJ53OOHfpffLRbMafF5152+3TIsQJR29UQ4ae8tgRjQ49caR07y0z
jmFmHh8y9CTf6kMOPfG697ap9VTvgAg9SZessC9O0vm27TURCITbIUJPHlyO
AEej0eBt6ch07do1MDDQuWfS3MQJRybVMWgi++KED/8A+oQZ1wi9GTbx0tUb
2Y0IPd15lG9nnc4aehp2ms11UT5tCxKnJ/ijHPAP3NFPkENPW6OGJcCWGc/w
6qwntcZYBB16+mJgjc+88Ip8w1ZDZg7MXDuhJ+BvnLc62Bcn9pttLU7tOIBA
IJwCnvVUUlLqAnHSarX37t3bsGHD1KlTx4wZc/fu3SfVtbuzs7ObeGSTyZRX
jUwms7NbfHz8tm3bfv7554ULF166dEkkcv6aRfMUpydWSTbP/u2uQ3ECIzeb
t2NfNDlYtHh1QEoys0Ghp8k/37QTbsLX7I6dSXLNtbcsccKxZj2J86BDTzNJ
ZcZ7XM/eDFlmnC2lmcx6d1+re7CGnriwoSfFnoPkB+543XppA0NhQ0+KOv5A
0AaFwBSJ0j4KcP2dQSAQMBiNRqrFKSEhoVevXuSAz/Hjx8H2yZMng+/nzZun
UqkoPQHX0GzFCTBv+YM5S+4FBTP8A+kOx5kLaWN/qMl6Gjzu/L7DcTATwXgY
UGg/3ISPcdOv5hXyXDDGTr/a4sTpydMy40wY/8GznsgP3G2O/OZx2XXIrCev
LjOuVkOWGddFx/E//5Kc9SRbthom5ckaemKyLebnaj3Jt/nUW+WA9EyffNM2
99wXBAIBAaXilJWV1aZNG2AU4F1Gjx49cuRIQpzWrFmDe9SYMWNMjX2Yt/nQ
nMXpl2UPYHzG88aAkWdaojjh6I3qKrjQUwEn+jAp9LQ46GO/XJ8SfjLMXG/v
cAdd60mxfTf7pX8/l/UUEAIVeqI9F3qSr99srRDlUJw2b3fjnUEgEPahVJzw
ggBAmcrKrFVKbt26RYgT4PHjx//973/BlsuXL1N3Dq4BF6fQamJjY919Os8x
b/kDMHLyuWAkplQFBNIf+tMcjrMX08aTsp6GjL+w73Cc/Sm+17IgI074yVA9
xv7QIiNOBBYLJlLCdrgLpB1fGzaA0Cef2HGplfdhJlag0BP8A3dfDiFnPcmW
rjLkFsCGnqrLjCuPHIdZqlMePOzuG4NAIJ7DZDKFPoM6ccrLywMu0aFDBzab
jW+xEScAUCaw5ZtvvqHoHFwGLk7Tq1m8eLG7T+c55q94uHpLCPGjyYQxq+Qw
mUv5ufy9h+IGjDhDOM+StQFpqSw7U4Br9bOfHD789PGzKMepAWgNiipxDmTo
6WD8NHLo6Xr2ZsjQE8+bQ08ms4nFgcx6km/YCpSpptbTZwOgQ09FmEJp5nBg
Ik4mJtPddwWBQDyHVqud/gzqFpjwRrrz5s0jttQWJ41G065duzZt2hiNLfuX
dnNeqrMRJxz8gTsYfQoNK/5+1g3CfIZNvHT9Vk59O/9xOtl+uAloFYeHnqpr
GM9qPTn2nxJ+yv2CA8tDPiX0aVfsuIyqAKjQkyhLY5C7+1rdhvWBOxoDMvTE
7/n5cytr67fAh574fQfZFyf+Z/3dfTMQCIQ9qIs4nT9/Hi+mTWypLU6ALl26
gI1KZbOu8OyQFidOT6ofuKusgOpwl5fL33Uwpj8p9LRyY3CdZcZzsngz5vnZ
CTqdvpTmsgv3GHHC0RlVVeJcGAXKYYUdTviRcKdlwb0fFhyEXPLjyYvNWIvP
OWwcFpOpAaGn9Vueq/X04f90oZFQE3futS9OqpOn3X0nEAiEPagTJ9wlRo4c
SWypLU5CobB169bgHMzmlt1nvCWK0xO8zLhEC9nhLjikaOLM64QCjZpy+d6D
gtq7hYUX47vVrhy+eXeERIoqhzcezJr1VAmpQI8KDwFlIvRpd+yE9Cp/yNCT
Wm+vvodngylVRnoRjAJpA0N5H31S4zz/el2+abvDWcrDJ1h/e4nT7l08WkWE
rcBXTof3WH9/WXP7jrvvAQKBsAd14qTRaLp27Qp0IioqCt9SW5x8fHzw1CCK
zsFlNGdxqqiSMtn2lmCsHe7KpFChpxz+jr1RZCPatDMiJ4tH3mfP77F2lupc
2auupEzM5bXsSGadqPXScmEmjAJlMoN2xY4n3Glt2ID7+QcgvYsvL8Wwlv3n
TKOxmGGzngw5+bJV68lpS/xefXTB4TBz1ddvi6fO5Pf5EgzxjNn6+AR3XzcC
gYCC0qfqdu3aBXSiY8eOp0+flsvlZHFiMBjr1q3DKxLExMRQdw6uoTmLEwwW
i0Us0kCGnh4F0Mm1nibMuBYYxCBeTU5mhoWX4CM0rDgwmEH8GB5RUsWUgfdy
9+W2eMyYkScvhst6SvbL9VleHXraGTMGfD0YPy2HFQozt1KUrUGhJ5jQU0AI
8KWa0NPfXoIJPeHDzOWhOuEIRMuCUnHSarWTJk3C7ah9+/YffPAB+KZ79+49
evQg6mECfaLuBFxGSxcnHL3eBBl6ys7krt8WRl6J230wNj+XDzO3skJmNHpp
KMO5qHQSyNBTFjP4ZMoCctaTX96uEn4KVOhJ4Z7QkwkziDSs+obG6Io8dmvW
UyUTMvQknfcbubilcPBw/eNEKH1ilGBq1y1hIxCIJkJ15XCj0bhjx4533333
7Vq89957R48epfTdXQYuTqpqNJoW/DuwQaGn23fyRnzvS+jTtDm3oqLKYCYy
aCK5TOfua/UEqkNPJXChp5RbuTuWBPUk9On3hOl57Aio0JM4R2d03aInUCaj
Wc+U04hTrT0e0Y/gu7ngfDCZ3FhAh1p9O3eJ2/mDmq5zr7VW/n4MNvTEE6DQ
EwLRnFE9wzVNfvV6fUhIyNq1a+fNmzd//nzwTXh4uMHgOY3acXF6p5o+ffq4
+3Sail5nKi+FCj2lp7GXrQsk3Gng6LPHTiUV5gtg5rKYCpMJfVI4Afisp7TK
h3viviP0Y1XoF8H0PyCznoSKctc8cHclZ9P2mFEao8KvYA/Z9Kpb8nUHXw8n
/cRS0H2z1/nEjnXB+QAsegNk6Emfki6Zs+C50NOIcfqEFCh9Kiq1aLWuuSIE
AtEggC+98wwPWGBqDnjGUh0Zi8UiEqph/AcM36tZQ8ZfIPRpzqJ7iQlVMBOL
GCKl0ku7zToXk9nAlTEgFeh2rs/ioI8JGzmaOAs29CTKdkGtJ1yc0jlBuCbV
OS5krb6UtdZl4oSDSaTGfBpU6OnqTW6nruTQk+rsRdjQk0CE8gARiOaMayJO
Ho/niROOTmsqK5HAKBAwpbmL7xPuNHjchfO+GZDexWErzGYUenICCq2wTJgO
o0BJFXe2Rg1rdOgJs1D47wXEaWv08KXBvews1VmXGhNnuFicnlhDT3pTWQVU
1lNmjmTmXHKdTNH4yZChJ1NJmUWH/qBAIJoplIrTCghWrly5YcOGs2fPJicn
Yy12id9TxQmAYRY+TwXjP4X5ghN/Jg8cfZbQpwXLHyYmQoWeiovEKpXnLN26
EaNZz4ELPRXxEq9krSeHnk4kz6Vx42DmVolz9UaqcvmAOK0h9d2rcywK7L4m
rJ/rxelJdTDWLBBChp6UR0+y32xbE3p6ow1s6CmfZhaJUegJgWiGUCpOtRPC
7dOnTx+gT9SdD3V4sDjhaNSGkiIxjAJFRZdNm3ubHHo6cyENMvTE5ShR6Mkp
yDX8MkEaZOhpW9RwQkjWhw+KLb0CF3pKk2m4VHyyA3FaEuQg3IQPcOZOf3dI
LDqdqbQcKuspPkk86QdybXDJ7PmGjGyo0FNZhcWDckERCM+A6jpOw4YNw6Vo
4MCBa9as2blz54YNG6ZPn96uXTuwsVOnTr/++uuCBQvGjRvXtm1bfEtGRgZ1
p0QRHi9OAKA0HLYSxn8K8gQHj8V/ObIm9PTL0gcJ8ZUo9ORKDCYtU5IPGXq6
nLnut2cJRYsCu19IX1HIiYGZy5HSTc5+tA2IE4w1gbE50p39wa2hJ6HImA+V
uWQTeuJ26qq+ehMq9FRAM4slbrxMBAJhA6XiFBoaCo7/xRdf0Gg0m5fEYvHS
pUuBbPz000/4FqlU+vPPP4MtI0aMoO6UKMIbxAlHqdQX0aG6A0dGlU6f50e4
09djz5+9mA4fesLMaJGiqVgsmFjFhMxciim5vD58EOEk68IHxpfdgJlYJkiT
a/hOPG0gTosCe8CI09aooU5838Zh0eqMRSVQoae4BOG3o8h1MqXzF8OGniqq
LEYv7SGIQDQ3qBMns9ncvXt3cPzi4uL6dhg6dCjwjaCgIHwLsCm84hOTyaTo
rCjCe8QJYDJhrCo5ZOjp8IlEctbTb6v801JZMHNLisRqNQo9OQGtQQnZHZjG
jT2RPJfQksVBH9/I2VrES4QKPckYRpNzanMBcVoZ2sehOy0N7rUzZoxT3rGJ
WDDMzONDhY/yCpW/H2W/1prcHVj7MBAu9ETH5Ap3XysCgaBQnFJSUoBLTJgw
wc4+cXFxYJ/58+cTW5YtWwa2BAYGUnRWFOFV4oQjl+kYNKjQU0xM+Yz5NaGn
YZMu3bqTBxl64nGVGIZCT03FYsEkKhZk6Cm29Mq68IGEn+yIGZ1RFQAVehKm
K7VOeJQeiNPmqG8dhZu674ob75bk8PrA1BojoxhGgXTRcYL+g2tCTy+8Il28
0pBbABV6qmJZWnhLdASipUOdOPn5+ZFX4uqkpKQE7PP9998TW7Zv3w623Lx5
k6KzoghcnP6oxtfX192n4yKMRnNVhQwy9LT/yOMBI84Q+rRhe1h2Fhcy9KTR
GN19rZ6AzqisFOXAKFABJ/pQwoya2E5Qr9u5OyFbtPDkxWasSf9eeB2ni1mr
63+krseGiK/PZSxvVuL0pDr0ZGKxYfwHaJJ8qw/rn6/VdAfuM1AXHgUVeqIx
MKXK3deKQHgXBoPhj2dQJ07BwcH4g3J2KoRHRESAfaZNm0ZsWbRoEdjy6NEj
is6KInBx2lrN77//7u7TcR0Wi0Ui1kK2aAkJLfrux+s13YF/vAa2QIaeBHyV
BYWemgxmMQuVFZChp0DaseUhnxK64hM7Lr3KH2ZiuTCzKd2BcXEyYyagRkS1
cHKsCViTSMNyZeXwBoEplcBtYBRIGxzG792vplhBqzfk23ZBLvmZ2Vyb0BOm
0Rhy8wxp6aaWluqAQDR/9Hr91mdQt8CkVqvff/99cPxdu3bVdxqjRo0CO5w6
dQrfIpPJ8ClcLpeis6IIL1yqI2PQm8rhugPnZPE27Ywg3GnAiDMHj8UX5EG1
aCkrkeh0KD/WCQCrqRBlwShQFjPowOMphLQsD+4dQDsK6V08eUnjWrSUSjKz
eRH2e9X5M46VSDJyeFFOvzlOwWIym6pYkKEn6aIVrL++SOiTYNBQfXwSlD4x
ii1arebufc2DR7IVa9gvv1VzkAGD1VdvqH2vmCor3X0zEAhPg9Kn6g4dOoTX
IpgzZ05ERIRcLjdX/4nE5/P9/PyGDBkCXurYsaNUKn1S7R79+vUDW8B26k6J
IrxcnJ5Uh56EAtgWLX738odPqukOPOvXu5DFCmiFQrFIg6oCNh2gNFxZEaQC
3cvfRw49HYz/IZcdDjOxSpyrMzZyUUmhF4WWnMHH3cL9N/N2+BXsDio6iW8p
Fqc794ZQASaVGQuhugNrbt/jffQJoT2ctzrAh57Yb7VnvfAKuTuedTwzMfXN
2+6+DQiEp0GpOAFNwpfe6gO8+927d/Gdp06dCra0bds2LS2NulOiCCROOFqt
sbQYqkVLWirr15WPGteipbJcZjSg/FgnINfyIVu0ZDGDfGLGEO60KvSL8KKz
kN4lVlVR2qKlOWMxGGBbtGRkW7sD/+0lQn6sLVoeJzpY7PMPfs6Xag3hsGbx
4CEC4Um4oFfdzZs3x4wZA96IrExt2rSZNGlSZGQksdv8+fNnzpxZu+JTiwCJ
EwGGWXhcqDqZYJw+nzpozDlyi5akJKgWLQyaSCZzzsPvXo61RYuUBuM/xfyk
69mblwT1JPTpTNpiOi8eZi5TnOesYgUtDmudTJEYtjvwxSvsF9+sCT217Qy2
2NlfNGGKfXFi/fVFM4/n7nuAQHgULmvyKxKJgoKCbt++7efnFxISgi/PeQxI
nGxQqwzFDKgWLTEx5T/8UtOiZcj4BoSeWFVyk8lLQxlOBHyyw4eeUirukbsD
b478NrniLszEMkG6XMP32mVWi15vLC6DcSd9XIJ44rTnokbDxxrSMuvYMz6J
9feXHYjT//1Lsd3H3VePQHgULhMnzwaJU22qW7QoYPyndouWBcsfJiczYeYW
0UVKJeoj7wSMJh0LrkULg5dwLm0puU6mb+YasBFmLltKMzq7RUtLwRp64gsh
W7So/jzHebtDTYuW9z7S+N233ef0eYfWZPWub0a6+9IRCI/CBeIEfl0oFAou
l8usBw+IPiFxqg+lArZFS0RkKbk78NDvLl6/lQMZeuKwUYsWJ2AtLgFdJzOi
6Nyq0C9I3U+GQYaeyoUZSp0T6mS2UDCNBrZFS0w8v+fnNQr095dly9eS62Qq
j56EESfBYEpaIWNGo6mKaSwvV+zZz+vem/NWe067d0XjvtcGBJnYHLME9ddD
eCyUipPBYDhy5EivXr3s5IcD1q5dS905uAYkTnawtmhhNjL0tHZraHYmqpPp
UnRGJUtSAKNAeeyII4kzyXUpL2eug6yTyZbSTGbPbKljFons72Bt0cLlQT40
p9i1n5z1xO/VRxcS8TQh6vJ1x+L0l1ZAZqi4TLXvVTvvy+n8ARVvikA0BygV
p/Xr19tXJiRO3gN8i5bw8JJJs24Q7jRu+tWAIAZk6EkoUHttKMOJgHsoVlVB
hp7CGKdXhvYh9Gnf4++zWSGQoSe1vsVHm23AFApul480t/wc76lSGWlFMO6k
C418rk7mi2/Kt/pYH8TLzuO83dGhO6mv3aDiSuW799l5U/brrTG1mor3RSDc
DnXixGKx2rVrB3Ri4MCB165dS0pKSquHypZfog0XJ0Y1ZWVl7j6dZorBYC4v
haqTmZvD27orknCnfsNP7zoYk5fLh5kL3kKvR3UynYBGL68UZcMoUC47/FjS
7Jo6mSGfwtfJ5MtLMMxzikuIJ07FzcHIKHK4s8XcgDqZsuVrWP94tWYB7quh
uug42bLV9q0JWJYhvxDTaJx7mRaDgf3qfxwkpe/a69w3RSDcCIZhjGdQJ07X
r18HLtGlSxeJFyx24+LUv5rx48e7+3SaLxaLRcBXQYaP7t4vGDn5MqFPU36+
FRFZCjORXiiUiFGdTCcAlIYvL4VUoHv5+5YG9SL06UjiTwWcaJiJQM8aXScT
HiOdYWKxKH0L5ZHjVmHYe4DbsQuvR29IXcFk8jrrZOpiHmvuPiRv0dx5wOve
u2Y5rPU7yt+PkquO1x7imXPwuWaeMx9pVF91vErIafOOxYT+hEF4CGq1uv8z
qFtgOnfuHDj43LlzKTp+swIt1TUI+GIFGensZesDCXf6ctTZI38kFuZDtWip
rJAZjQ5CGSq1XirTCoSqu/4Fv/8Rv//Y44vXMsorJWAjGBjqjleNSicpE0AV
K0iverQjZjThTmvC+oUxTkN6l0hZhVkoDD1xu3wknfcrdcfXJyWzXnhZ8tPc
mu9n/QI5t846mdJfl7L++Zpt6CkrVzJz7nOK8q/X2P/pxPq/mmrheBVxdqs3
wFflwSM104tKLXrnPNIoGjvJtlZ5XUP/ON4pb4dANCuoizjdu3cPuMTs2bMp
On6zAolTQzGbMTYLKmMcjMvXsr6ZcIHQp9m/PdeiJSmp6pelD/wD6LUnMugi
hcLeJ8WyDTVWVnvwBY0Jg2zaHeEfQm/sjWmmGM06jowB4z/F/KRr2ZsWBfYg
9Ol06m9FvESYuVXiXINJS9ElUCdOmFKpPHWG8+92vI8+IaJMysPHgDlI5i40
pGfAHMRarEAoItfJrFOcnqaF+14jFyvg/KejfKsPkBlup/c5bTrzen4u37xD
n5xuSMkwZOfZzDWLxE0PPQn6DnKcl/5//9IGhTTxjRCIZgh14iSXyzt27Nit
WzeDwTOfnSGDxKlxKOSwxQqAHc1b9oDUouU8USczJqYcbLl6I7u+udZiBfXE
jtbvCKvPmib+dF0iaUxmyLBJl06cTW7ajWmmKLRCyNBTQtnNzZHfEu60JWpo
YvltmIllgjSZhpJK19SJk4FRZA2/tHrDSGeQt4u+m2J9qG3aTPhDWXR6Y1Gp
Q3GyFitIShWN+o5sKZIZPxvSs2AypkxlFRZjkx5BFX47CkacdGERTXkXBKJ5
QulTdQcPHgQ6sWrVKgzz8PLOSJwajcmEMSvlkKGnk2dTyC1aFq8JSEtlORQn
MEqKJdpaxQruBRTYCTf1G356zbbG/L3sweIEMJi0TEkejAIxeAkX0lfYFCso
5ifBzLXWyXR2ixbqxEm+YzeQBE2tdrqYXM7974dgYAoF/NGsoScu36E4PS1W
4LOP/erbhKhwu3SvXSez7lHIwKTyRl+yYtdex+L0z9ewll+jD4GoDXXiZDKZ
ysvLf/zxR2AUo0ePvnLlSmxsbGJdeMBjaEicmohMClusAGjSdFKLluGTfP88
l+pQnPBBLlYAvpk467odcbK607DTbG4DPvJwPFucnlhvHSZSVkJmLoUy/lwd
2pfQp71xE7OYwVChJ2G6UuegIFKD4Lz3oWjC94a0dOcO1cnTrL+0kv62tM43
NWTnAH8QDh7e0MPqYh+LJs9g/eNVx8UKouMEg4bW6MpfX5T+tqz2Cl3doacq
lsXUmLwys1DI+vtL9qzpL/+S/EJhRhkC4UaoE6fKykqYIk6ojhMCx2AwV5TL
YNypIE+w91Bc/xFnyJJz8TJUh7uKMqnRYP2kyMzh2LcmPOh06kJKQy/E48UJ
R6OXV4iyYBQonxN1LOnnmmIFwb2DaMchvYsvLzFjzqlrynmnK8zqUuOGnZpF
whFjG3/kf7wCFT7KK1Ts3Mt++S1iIr/n57rQSKi59CJM2ZhcPvGsufbO/IVX
TKUt/i9iBKJOkDg5BSROTsFad1GkoRVCLdsFhxR992NNyGjAyDNT59ya/ds9
h+PnRfcWrHw4dc5Nh+IExuiplxet8W/QGDj6rDeIEwAoDVdWRPacQk5MRlUA
PhLLbh9KmJFW+Qj/8Ub21iWBPQl9+j1heiYzCMadgJ6p9bKmny3nv91Eoyfo
omOdOxR7DgBPkK1eX+ebGgtp7Bff5PcdpI2KaeiRJcBM/vUaJlcYCxkwCqSL
iOF/2p9QF/ZL/1buPwzpXWYOz9LAhAoHlcM7vNf0fzIEonlCnTjhLepg0Omc
nMzgepA4ORGdzlRWIoFxp9xs3hZSnUwwxky7MmfRvbmL7zsc38++ASlOS9cH
Nmh4jzjhKHXicmEmLjm3c3cSavRbYHfS99bxsOCQT8xY4seVIZ8H0U9Ahp5E
ykqLpUmpkhTmOG3YYn2C7KG/zXZMreZ92Iv7zvtYo2rZKbb7sFq9/sRarMBo
Kq+C8R9DTr5s+VrW318mBEY0+jt9QjKUPhWXWrQN+FVsqmLKt2yXb97O/4xk
ay+/JZ4xW7Zxq/r2nUZcMgLRInBBk19vAImTc8EwC58HWyfzvG8GWXWmzbkV
HV3mcNZDfxrMUt0Z37SGnryXLNWRMWFGvFhBepV/CP0kGMeT5gA12hDxFfh6
KWM1vjGPHVHES/TNXLskqCb09GfKQjovHsadqsS5TamTSZ04GcvL2a++zX7l
bVN5BXm7ePosa8bRkhWNOywhTk/wjHGRmFyswM7Q+N3n/vdDcvxHfe4SbOhJ
2Jj+y2aBwJhfYCwusXjBM9QIhHvFCcOwn3766cCBA248B6eAxIkKIOtk4k/V
/bTwDiE8g8acO3MhzeHE8dOvORQnnkDZ0NP2VHE6kDAttuJ6fa+CT1u5hlcm
SAOGE1NyeVFgj+t52zCL+VDizJUhn9usygG/2h49knCn1aF9N0YMhgw9ydTc
xpUhok6czDyeaNz31iW5//UhKkyqTp+z5hp90lfte6VxhyWLEw44uLG4FCr0
lJoh+m4qKVW7lWjCFENaJlTGeFmlRY/8B4GoFxeIk1AoZDAY9LoIDw8HvtGn
Tx+qz4FqkDhRhLVOJtNBnUyiHIHv1awh42vqZC5bF5iZwbEzEciVfWvatCu8
EefsqeK0IuQzf8Yx+/sYTFoGL2FNWL89jycazdYPX7lOuDb8yx0xo8B2sv8U
8RLPW4sV1Czn3cjZWsJPhnEnjpRuMjf4k53qyuG6mDjW316ULlwMvjdkZbP+
+ap4yoymHLC2OD3BQ088PmzG+J6D5LgTt3M31alzUHML6Jis8cUKEAjPhlJx
UigUv/76K3gL+8nhI0eOpO4cXAMSJ0qRy3WM+utkkus4JcRXzlxQE3oaPfXK
/YeFdtxp6bp6K4d/P/uGVN6YKtbeLE6YxXwkafbK0D4iDZPYyBAlLwrsfiZt
cW0Fiig+D7SKcKdtUcNTKx9AFitQ6cQNOn8gM6ay8sZcOTSK3fuAn6hOnub+
txvv/R6YssHhSjImFkufklrnS5hGY6QVwSiQPjZB0O9rsj5Jf10K6V3WYgVm
z+m/jEA4C0rFacmSJQ4fqevbt29qat2/HFoQuDgFVBMZGenu0/FAjEZzVWXd
xQqSkqrmL3voH0gnFyvoN7xGgTb7RORk8eqcO3fJfTtBp8a1XNm6NzIg1NNa
rjyBE6dHjKPAf7J5tvWig4v/BNsDacdqKxCNG7slcijhTouDPr6Xvw9y2Y5n
LVbQjNrIWiwW0ajxuJ8Y8/KpfS+z2cTiQC3b5RbIlq5i/et1wp143XppA0Kg
9InGaFyxAgTCwzCZTAHPoLTlCh5rOnr0KJ/PT09P79KlS58+fcrKykpLS8PD
w/v379++ffvg4GCKTsCV4OI0q5rly5e7+3Q8FqlES4crVvDQnzZ66hVCgcbP
uBYYxKi9W3YmNyOdnZrCPO+bvnN/9Pa9UcdOJRbSBAqlTqnSO7GbvAfgUJwK
BI+B+dwt3F/7JXAnT6TMWxbcO63yYW3/uZ69eVFg95UhnxP6dCRxZgEnGsad
KkU5TckYdzqYRMLt1FV98bKL3k4qgyxWoLnzgP3im+Sy3ortu2Ezxrl8C2p4
jfButFrtrGdQt8AUEREBDj5+/HhiC15FvKqqCv/RYDB888037777LtAqis7B
ZaClOpeh18MWK8jK5K7dGkq4U/8RZ/YeiivIE8DMraqQmUwe3ieooQDtWR3W
d1v0iDrH5shvlwT13BDxVX0hIJVBBoxoaVCvDeFfb4wYTB5AmRYF9shmhe5/
PIWcMQ5fJ1OkrMQszWVRycxmu/LtLOAv4Qq4YgWZOeJpP5GX7QT9B+vjEqD0
qbiMyHtHILwc6iJOp0+fBi6xc+dOYsuGDRvAFnKIKTQ0FGzZunUrRefgMpA4
uRIMs/C4Shj/AeP2nbwRk30JfZoxzy82rgJmYhFdpFSiT4oalgf33vN44rXc
LXWOKzkb14T1XxnaR6mvO/WIKacBHVofPuhUykKbsSN6FBAn4D8l/OSrWRsX
B31M6NOZtMVFvETIYgV6U2OaMnsA1oxxoQiyWIHq9Hn2a61rKi+9+h/l0T+g
3CmfZhY3piAVAuFhUCdOJ0+eBC5BLjXw559/gi1AqIgtZrO5devW3bt3p+gc
XAYSJ9ejVOiL6s8YJ4/0NPbiNQGEO3099vx5X6j+LGBw2EqzGYWerDhcqhOo
K1eGfn4s+WesVqVKrVG1NXr4xoivCzkxdS7VAVkifowvu7E1ahjhTlsiv40r
vQaVMS5Ik2l4XrvAatHqIIsV6OOT+J8NeC709NVQQ2YOVMZ4eaXF6JwmOAhE
C4U6cbp79y5wiXnz5hFbgoKCwJZVq1aRd3v33XfBRnMLf3YDiZNbMJkwZpUc
UoHOXUoHykTo0/L1QfaLFRCjpEis0aBPCqjk8CxuGFCdgKITNtvPZCxdGvy/
ckk2S1LgUJzAKOYnVRcreOpO1qpQ2VsgQ09sKa0RxQo8A/hiBYbcAsXOvc+3
5W2lOnsRKvRUyEDFChDeDHXixOfzgUt06NChsLAQ30Kn08GW3r17m0xPsyCI
fnZInBCNRibVMWhQoae4uIoZ8/wIdxo77UpAXRnjdQ6hQO21oQwcGHEC+BXs
XhTYnSZMILZElV8G8hNf5fek+pNdomI5FCd8hNBPrgnrT+jT/seTs1mhUKEn
YbpaL6XwXjRvMLXaSC+GUSDtvUfsN9qQ9Uk85UfIjHETk42KFSC8E0rLEUyf
Ph3oRPv27X/88UeNRgN+Z37xxRdgy9y5cwsKClJSUoYOHQp+HDNmDHXn4BqQ
OLkXo8FcWV53sQKbkZ/L330wlihW0H/Emf1HHkNmjFeUSY1G7/2kgBQnM2Y8
kDAVCI9UywM/lkmzFwf19M1eR95HZ1RWinMcihMYhdzYwwk/Eu60LPiTBwUH
IDPG+fISDPPSfy9rsYIqFmToCcgS2Z3Yr7fRhURA6RO9GNN4aV4ZwpuhVJy4
XO7AgQPxmJJUav0D8Nq1a7VLOQUEBFB3Dq4BiZPbsZbQEWpo0MUKRk25TISe
Zv16Nz6+EjJjXOWtGeN3C/fl8aNh9pRoOavD+h1M+EGuE26MHOwTO85gti0l
asZMfHkpbjgRxefPpi2xo0B38/aQM8ZPJM8FQgXjTpWi7GZVrMDFYBIpbMb4
8T+fW7b7v3/Jlq+BDD2ZeXwvD8YivA2qW66A/6HCw8N3796tefaHyYEDBzp3
7owr0wcffODr60vpCbgGJE7NBJ3WVApXrCAjnb14dU3G+OBxFy5dyYRctuNx
lRgqa2OXfEEcLjnLQ3rzVGX17abQCsuE6TAKlFr5YFfsOMKdNkR8FVt6BTL0
JFYxvfaT3WKt31EBlTGeks7/pC/ZnXgf9NTHJ0Et25WgYgUIL8ItTX5VKlVC
QkJycrLeU/5fQ+LUfABKw+XAFis4fT5t0Jhz5PZ2aalsmImlxRKtFmWM21Ip
ywstOYOPnbFjgeGcTF1IbBFr6ihwZDBpmZJ8GP8p4Sf7Zq4ltbfrDn60aYFX
f8Z4odHsIb9tGkp1xrgAMnwk37DVJvSk/P0Y1Nx8Gibx3rwyhFfhFnHyPJA4
NTcUCj1kxnhMTPm0ubcJdxo28dK1mzmQ3sXnqVDoiUx0+ZVFgd3xQXom7ukW
uiipzlnWjHE1GzJ8FFt6ZW3YAHJ7u/SqR1AZ44J0pVbk4hvSfLDodEYGVMa4
LjjcJmOc37ufIScfKvRUwbSYmlETHASCCpA4OQUkTs0Qo9Fc0ZCM8f4jzhD6
tHJjcHYmFzL0pNOhTwonoDdqqsR5MApE48b+kfwLKWO8d0Pa2xWbMC8NFVrM
ZjMbqr0dGOLvp9uEnjS370HNpTEwRZO6GyMQzRyqxSkyMnLatGk9evTo3Llz
x3rYtGkTpefgApA4NU+qM8bVkOGj4JCiiTOvk9vbhYQWw0ykFwolYtvkZ0Qj
wDCzQFEOqUChjD/J7e0OJ/yYx46AmVghzNQaFO6+VreByRWQ7e1UZy/ZuJPk
xzmwGeNsrgVDlWMRngml4nTq1Knaz9DVZu3atdSdg2tA4tSc0WqMJcViGAXK
y+Hv3BdNFCsYMPLMkZOJhflQxQqYVXLU3s4pqPXScmEmjAJlM4PJGeMrQj4D
NgXpXSJlpaVWhXNKeUA/tDN2LD62x4zeFj2S+BEMjdF1LmcxGk3llTD+Y0jP
4nbu9pw+tXodtr1dUalFq3PZRSEQLoM6cVIoFF26dAE60b17dx8fn7Nnz16o
h+TkZIrOwWUgcWrmWDPG2bAZ4/ceFAyfVNPebt6yBykpLJiJxQyxSuWlNaud
i8ls4MoYcBnjKbdyti8K7EHo0/n0ZZAZ40xxnsHkulDh48pbvtnr8bErbvzi
oI+JH8HQmdQuO5MneMa4SAxZrEC2dJVtsYKV6yAzxsG7uPK6EAgXQJ04Xb9+
HbhEp06d+Hw+RW/RfEDi1CKAb2+XmsKav+xhTcb4pEt+9/IhvQu1t3MWMg0P
MnyUWH57e/RIcrGChPJbcHOt7e1cfF08Vdnp9MVLg/5XIHhsxtyZIGdtb1cE
1d5OGxRq407s11ob0jKhMsZRezuEZ0F1k99ffvmFouM3K5A4tRRMRqyqAipj
HIxjp5IGjKzJGN+yKzI3hwczsaRYjDLGnYLOqKoS58IoEIOXcCZtMeFOS4J6
3s7dUcJPgZnLob69ndogu1u4L6HqzpGk2cRJgrEu/MugopP+jGM5vChKT6A+
LGbMzOFBLdvl5Au/HmZbrODwCajQUyEdk3tvXhnCw6BOnC5fvgxcYsmSJRQd
v1mBi9Oqanx8fNx9Ogh7WCwWsQi2xnhoWPF3P9ZkjE+adSM8vAQyY1wqQRnj
TsBiwYTKCsjQUxjj9NrwLwkt2R07IQeuvV25MFOtl1F3FSIN61llhh5kcXqm
eb1u5++i7t0dgqlUsBnjp85Za2P2+LSmWEGvPrDFClgclDGOaKHodLpVz6Au
TlJcXIy39PWGmr24OF2q5vbt2+4+HYRjtFpjaTFUjfGcLN76bWGEO3058uyR
P1DGuKtR66UVoiwYBcpnR+6Nm0g4yarQL0LoJyG9i68opWjtLJMTWtuXyGN7
9Cgq3hcei8lkqmBChZ6y82SrN9iEntRXbkCFnhjFmAb9QYFoeRiNxkvPoPSp
ujlz5gCd8IymKvZBS3UtEQyzcKAzxq/fyhn63UVCn2b/di8hAba9nVyGni1y
AmbMyIHLGAfjTt7upUG9CC05mbKAzn0MM7FKnKs3Oj9P+0jSLPviBIZQXeX0
920oZrHUWACVMV5TY/wvrfBvROMnQ7lTXqFZIPKGP6gRnooTxclgMIiep7Ky
cuTIkeAtli1bFhERweFwRHWhUrX4LpxInFouCjlsjfHkZCY5Y3zwuAsXodvb
sarkKGPcKSi0wnJhBowCJVXc2RL5LTljPL7sBqR3SVQsJxYrEGs4Dq0JjHu0
A856x6Zg0elMJWVQGeP+wdZiBf98jRx6gs0YL62wGFDGOKJF4kRxCg8Ph6na
hOo4IZobRqO5Eq7GOBinzqYMGv1ce7uMdKj2diVFYq0GfVI4AaNJB5kxTuc+
/jP1V1Lzlx7XsjcV85NdnDGex4+BEadjKXOd8nZNx4JhZi4fMnwk+m4q7/2P
ye6k2HMQam4BHZNSmFeGQFAEEiengMSppYNnjNPhMsZjYsp/+KWmvd3oqZf9
A+mQ3iUUqNEiRdNpUMZ4eNFZcnu73bETsphB0BnjTmhcm8OLhBGnEynzmv5e
TgRTqY20IhgFUl+9aZPyJBgw2JBbABV6YrJRxjiiZeFEcZLL5WmNorKy0lnn
4C6QOHkGer2pokwK4z/5ufw9v8cSNcb7jzhz8Fg8ZMZ4eZnUYDC7+1o9AY1B
AZkxXsCJPppYk2W0IuTTQNpx2IxxeSmGNenfq1KWDyFO3S9lN7s/IS1mzFTF
gsoYzy0Q9P3qOX36SyvtgwCUMY7wPFCTX6eAxMljqG5vp4EMHwUE0kdPvUKE
nuYsupeUVAUzkUFDGePOwYQZIWuMg/Gw4PdlwZ/ULI0l/UzjxsFljOdoDU1q
XLs1erhDd2KImmkPBUwihawxrtx/2La93ZyFsBnjPD4KxiJaBC4QJ7VaHRAQ
kJWVRWxhMpmPHj2Sy+VUv7XLQOLkYVjb2xVBtbfLSGf/tsqfcKdvv7voey0L
0rs4bCWGoU8KJyDXCsoEaTAKlF71aFPkEHL9ybjSq5DeJVVzGv3JHlJyxr41
rQ7r69x74lwsOr2xGKrGuD4mnv3im2R34r7bzZCSAZcxXm4xGAUDBrPfaMN6
5S3WC6+w/vqidYBvXv432Mj7+FN33wkEglpxMpvNe/fuxTvWHTlyhNgeHR0N
trz77rs+Pj4ajYa6E3AZSJw8D7MZY7MUkAp08mzKwNFnCX1avDogLRWqvV1p
iQTVGHcKRrOOLS2E8Z9iftKVrPVkabmatbEENmOc3riMcaGaWZ8yLQrssSiw
++XsDU6/J87FmjEOV2McDMns+bY1xn8/Bpkxzm7zDuvFN8iFDp5+0+oN9ptt
3X0bEAhqxWnbtm14+ne7du2uXr1KbE9PT+/UqRP+0pQpU7CWnxmIxMlTkUl1
kBnjEZGlk2ffJNxp5JTLAUEMmIng+GKRBi1SNB1rhr+KCRk+iig+T64xvjVq
WCZcxniZIF2pFTX03KRa3paoYWfSly4J6olnNOHKZE1Wj/tuz+NJISVnqLgn
DhFPmyn4aig++IO+BYP4UTKrjoZZ1hrjcBnjmrsPbdzJWqwgO89BwCouwRpf
qjXxqT79/SUzl+v6u4RAkKFOnKRSaevWrYFOLF68uHalJr1ef+LEiTZt2oAd
/Pz8KDoHl4HEyYPR603lpVAZ43m5/L2H4gaMeNreDnxz+EQCZMZ4BcoYdxI6
g7JKnAOjQHnsiKOkznHLg3vD1xgXKMqwRhV6Uhlk4aXnd8aOWRz48c28HWXS
bKffgQYh+XmeaOQ4fHDebMt5qz3xo3TBojqnWMxmExMuYzwrVzDwWxv/0QaH
2ZkiHP1d3db0bIjGTnLxLUIgbKBOnO7evQtcom9fewv3x44dA/vMmDGDonNw
GUicPBuLxcLnqSCX7YKCGaOnXibXGE9MQBnjLsWMmXjy4sZljP+eMB0yY7xS
lN2gjPFCYXxU+WV8HE+ZuzT4f8SPYBjNeupuCCSCQd8IhsJ2fsGkMmMBHUaf
FLsPAOERDhtTU6yg/+D68qNYf3vJvjix/trK1PIfxEa0aKgTp3379gGX2LDB
3sK9UCgE+3Tp0oWic3AZSJy8AbXaUMyAyhhPT2MvXPGIcKch4y9chs4YZ7MU
qMa4U1BohWWCdLiMcf+tUcPINcZjSi5DepdYxYRcZr2UtdZOcrjK4ISCUU2E
0+YdTof34Pe3GIyQNcb1KemCL4fYLtul2maMyzduc2BN1Qt2in0HqbsJCIRD
qBOnAwcOOBQnvV4P9unUqRNF5+AykDh5CQ3NGCfXGF+xISgjnQMzsbhIrFE7
p2a1l2MwaSEzxum8+GvZm/CkI3xcz94MmTHOkhTAxIswC/jPx1jfcMHdsI/6
/KVn7Xqvwc8C0mjmCSAzxqXzfgPH53XtUVNjfOfe53ZYsKQmIbzeiNOL8g1b
qLsPCIRDqBOnO3fuAJf4/PPP1ep6O2bij9f16tWLonNwGUicvAqpVAuZMR4V
XTZ1zi1yxviDRzRI7xLwVRZUrKDJWCwYfMZ4dMmldeEDCXfyiRmTVvkQZmK5
MEOpE7vtGvV6Y34B1oSmn4acXNa/XhON/144ajz7xTeMBYXwczGJRJ+aYShk
wLiT9kGAjQhxO7xH1BiXLlnpOOIExGn95kZfKQLRdKgTJ71e/9FHHwGdWLJk
Cfi+9g4CgeCrr74CO+zevZuic3AZSJy8DZ3OVFYigcwY99kfQ9QYB9/sP/y4
IA+2xrgRZYw7A41BDlljnMaNO5L4U03GeMinjwoPQXoXX9HUGuONw5iXD4xC
FxLWuOmYQsHt8hEYmFwOLIj7zvu8bj2x+v/gtUF18jR4d7NcDl9jXPjtKGvo
6ePPCB3S3HkAXlKdvehYnP7vX9r7Dxt3pQiEU6C0HMHp06fxmgO9evXy8fGJ
jIxMTU3Nysry9/dft27df//7X3ydDhgUdefgGpA4eSEWi0UoUNPgQk/+AfSx
P1wl1xhPTmLan5KSzExKqkpJYZZXSEViNXnI5Kg/RYNpUMY4kKUVIZ8S+nQw
/ocCTgwVGeNOoYniJJ44lfWv1ww5ufiPhrR01j9eEU+fBTkdFyc83gWfMa46
fd5Gh6QLlgCn4nbsat+aOG93NLG5qHwHwo1QXTkcz3Sqj65duyYlJVF6Aq4B
iZPXotOZSouhQk+ZGZwlawMIdxo68dLVG9l29h85uebRPJsxfd5td193S0Wh
FZQJoTLGs5hBO2PGEO60KXJIRPF5OO9Ka0qN8UbQFHFSHjluzWs6d5G8UXXi
FNio+vMszBHI4vTEmjFuMJWWQ2WMxyawX/3Pc8t2HbsofPbZFyfFjj3GpzXG
UR4gwj24oOVKcnLy0qVLu3XrRlamXr16bdq0iesppcyQOHkzGGbhsJWQmUun
nq8xvmx9YH0Z40Crzvtm4GP8jGtT59x6GEQLiSwCIyEFPY7deAwmLUtSAKNA
xfzkmznbFgd9TPThvZCxsoiX6MSMcafQaHHSJyWzXnhZ8tPc2i+Jp8xg/fNV
Q2ZW7ZdssBGnJ3jGOB86Y3zRcls7euUtPJfJJrUJfGW/8nbN3AI6JpU19JIR
iKbjsia/GIYVFBQAiUpMTKTRaB4WaEXihFDIdQyaCMadwiNKJs26QbjTmGlX
AgLp9qfMXHBnwfKH4BuRENUYdwLVGeMsyGW7qOILq0K/IEJPO2PGZDODYSaW
CdOVugbXGG8EuDipTpwyZGXDD11UDKf1O7zun2B19b3ClEpe1x6cDu/p4h7b
P45s/WYbcXp6BLXaSC+GcSfNrbu1M8BtCzr9/WVWq9c5bTrbzDVVsSxmlAeI
cCkuEyfPBokTAmAwmCvK4GqM5/B3HXguY3znvujcHJ5DcQKjqlJmMqJCT05A
Z1RBZozTuY//SJ5HuNOKkE9DGX9CepdAUWbGqG1HiItT44YuPLK+w2ofPII/
Tp3P9DWgxnhOvvCbkc8d8y+tBN+MFH47SvjNKNGEKZKZc8GQLlpRx3R6Mab2
hJ6niJaCK8WJRqMBu2jfvr3L3tFlIHFC4DzNGIdbtnsUQB81pSaRafLsm3Fx
FQ7FiVZdY1whRzXGnUB1xngJpAIF0I4uC+5N6NORxJk0bizMxCpxrs5IYcY4
Lk6K3fuBBcEP9fVb7Nf+w/9ioMVYRxUpi07H/18fzr/baW7fsX8c6eIV9YkT
jjVjPJ8Go0+KnXttfEy2ZiPkkp+ZL2hiMNZIZ7D++erT8Y9XWC+8bP36bIt8
3aamHBzhSbhSnAoLC4FdtG3rge2tkTghyGjUhuIixzXGC/IEqSms5euDCHf6
ZsKFG7dzyTtcvZH9y5L7X446O2j0OeBOt/zyiOZ3XI4Sq1XoyWzGUOHxhqLQ
CsqFGTAKlFb5kFxjfGPE4EjYjPFUiYplaVR7O4c0OsdJFxbB+msr2bJVtV+S
zv+N9bcX9bFxDg9SO8epNha93lQClzGekMzGc5yIx+je6qBPSYeZ28SMcbNI
pNixCwzpwsWCfl9Zk9U7dRVPmibfsgNstBOaQ3gbSJycAhInhA3AXlhMBzXG
5y65P/u3e+CbazdzBo+7QOjT+m1hWZnc2Njy0VOv4At5xIoe+Prdj9cSE582
vyspEms0z4ULZi26u2lXuLuuuuViMGmYknwY/2HwEq5krSfVGO9+OXMd2OjG
jPGmPFUn37qzuozSPfJG9dXr1hDWnv0wR4ARpycNrDEumT3fJvSkvngVaq41
Y1zeiPvwBA+y9fqcixc2x1PTq79y/t2O16O36vjJxh0W4XkgcXIKuDgdr+bi
xYuOJyC8A4lYa6fQEyFOYABN+p6UMT7ie98h4y/0H15HLQKgT2OmXSHcCQyh
QE0sUiBxajQNrTH+fMb46JSKezATy4UZCq3QuWfeFHGyYJjw25HsV982Fpc8
PVohjf3Sm6LREyBXviDFCQdTqY30IhgFUl++buNOopHjiRrjDkJPzMZkjBuy
svHcqjqTuARfDW3oARGehMFgOP4MJE5OARen7dUcPnzY3aeDaEbodKby0roz
xsniBEZuDm+zT0R9tZts3GnJmgDyoSrLZXiNcSROTURrUFYIM2EUKJ8TRa4x
viy4dwNqjMtLnFhjvIkFMM1CIaf9f/k9P7NotZhazfuwF/ed9zGJBHJ6g8Tp
CZ4xXsmEyhjPzuP37mcjMNpHQVChJ3pxnU8L2jkrTof3HCTSR0TBHxDhYej1
+u3PQOLkFNBSHcIO4C93kbCOjHEbccLH/YeF5Izx+kb/4WfIQScw6DShTKpD
4tR0zJiJD50xfitn+9KgXoQ+/ZE8j859DJsx7qQa48B29LFxmFTa6CPoExJZ
f39J8vN88fRZrBdeNqSmwc81czjg3S1Yw9K3MIkUMmNceeCIbcb42k3QGeNC
yLiZ5t4DB08O/qWVaNSEBl0jwlNB4uQUkDghHGLNGGeIbcTpp4V3s7O4NmPH
3iiYuNORPxJqz5029/ZGHyROTsBaY1wAVWM8qdxvW9Rwwp3WhPWLLrkE6V0u
rjFuB+XBw7ghKI/94Zp3rM4YL4PKGI+JZ7/6NlljuO99ZEjNgMsYr7AY6nhs
0AbhiHG2JTfrciczj+eCO4No5iBxcgpInBAwmM0Ym6UgixOMIDVo9Bt+Ztn6
QJ3W8ScFwiEGk7ZKnAfjP4WcmNOpvxHu9Ftg94sZq0r4yTBz2dJCk6tqjNuH
81Z7Tpt3XPmOFgwzc3iQ4SPR+Mk2JqM6ewk2Y1yusH8mPDwn3NEwZGW75s4g
mjNInJwCEicEPHLZ0xrjQJzGz7h24s9km/Hzonv9IBxp4YpHteeOmnoZT38i
Z4wjGk2DMsbDGKeXk1oD74gelcMKg5lYIcpS6xu/0OYsBF8OEXw70vXvi6lU
RhpUxrjmhp+NyQiHj4X0LhOTbSdjnPdBTyhxysh05Z1BNE+QODkFJE6IBmEw
mMtLpXXmOIFx/VYOTHDpUUAdjVqmzrlF5I1XVcpNJlTTyQloDPJKUTaMAmUz
g31ixxHutDLkc//CI5DeJVSUYxZ3dg8RDh4mHDHWLW9tMZlNFVWwGeM9P3/O
Z/7+si44HEqfGMWYRlvnCYi/n876m6OluhdebkoiGcJjQOLkFJA4IRqKxWL5
deWjOsWpIE8wcrKD/PCJM6/X+aQeWZzAKKKLlIpmsQzU0rHWGJcVQyrQtexN
pEJPH51OXQRfY1xvVLvrGt0oTjhmkRgyY1y+abuN1ci37ITNGBeKagdjddGx
DhOcxD/+7JbbgmhuIHFyCkicEI1g2YbAhSsfArep7T8XL2faF6ch4y/43ct3
KE5Pa4yz66gxjmgEcg2/TJAGlTFecWdDxFeEO22KHJJYfhvOu9JkGp7LllnV
Fy8rjxzHB7dLd163nsSP6ivXXHMOZCw6vbGoFMZ/dGGR1s6/JLfhffSJITOH
2EHQdxDYgg9ut17cD3oSPwoGDKndaIb/yRf2xQklOCFwkDg5BSROiEYAxGnR
Gn+j0cyslNdWoNPnU6vLDtjTp537ovNy+A7FCYyyEolBT22rWS9Bb1RXinIg
M8ZPpswn3GlRYI8bOVuL4TLGuTKGCXNFhj+38/v1qQLvw14uOIHaNCxjfMIU
24zx0+fxl8QTpwmHjQVDMHgE+422rJf+Lfh6OL5FPOkHYyHDJmPcWFmFC5Lt
rah+2k40/nu33A1EM8SV4iSXy2/dunXnzh2XvaPLQOKEaARJaVWJqVX49zKp
jl6rxvhDf9pvq/yJliv9R5xZti7w7KX07368TrjTpFk3wsJLiCnXbubce1BQ
5yoeOL5IiDLGnQD4YBcpKyGX7UIZf64M+ZzQpz1x3+WxI2AmlgszNXoZ1ddi
MZksRmPdw+RO08YUSuA2MO6kvnjVRnUkcxaA7ao/Tsu37xGN/b4mMPWXVsIh
I2Trt4CXni7bsblEBSqLwSCeMsNal+Afr5KPxv9ioGjCZM3N2268G4hmhSvF
yYNB4oRoOjqtqaSu1sApyczJs2/OXHAnLZWFb8nO4q7eHEK405cjz574M7lO
Wao9qipkRqM7M5A9BpVOAtkaOJsVAnyJnDEeTD8J6V3A0JxYY7xlAeTNVF4J
lTGenmVTT4Dd6g12u3et4SOb6kx4+7m2nWumF5VYtDrwdmY2Wzx9FhiiSdN4
nw+w7taxi3DEWHyj5vpNd98PRHMBiZNTQOKEcApmM8Zh1dEaGFjTguUPbTZe
vZE9dOIlQp/ADsnJTBh3KqKLVKrGN5FHEJjMBo6UDqlAt3N9FgV2J/TpRPJc
yBrjTHGewVT3s2Aej7U1MHTGuGzVepiSAvhQ7D5QMzefZn2X0jJ+r8+JYc2G
+vhT4kfloaPuvhmI5oITxSk2NvbDRuHj4+Osc3AXSJwQTkQhf1royb44gQFM
6ZelDwh3+mbCxeu3ciBDT3yeCmWMNx3wyS7TcCHdKar4wsrQPoQ7bY78Nrni
LszEMkGaXCvw2mVWi1ZrLCqByhgPj4IUJ85bHQzZeeS5pooqixHlASIc40Rx
Cg8Pf7tRrF271lnn4C6QOCGci9FgriyXORQnMArzBUf+SBww8gyhTz77Ywry
BDDuVF4qNei9dBnIueiMqipxLowC0bixJ1MWEO60OOjj27k7Ib2LKysyuyRj
vBlizRhncyAzxgVfDYVxJ+Wh47ZzaUWYErZbMcJrcaI4CYXCkOcJDAwcOHAg
MIovvvjCx8cnMjIyLS0tOTn5ypUr8+bNa9++fadOnS5fvszn8511Du4CiRPC
6cxden/sD1dGTbkMxqDR574acw7/Hoy5i+/bKFB4eMmUn28S7jRjnl9UVBmM
O9ELhVKJly4DORdra2BFKaQCBdCOLgvuTejT3rhJkBnjFaIsrcFB9xAPBpMr
jIV0x2t2azY6Fqe/viiZ8XPdhZ44PAsKxiLqh9Icp61btwKdWLBggcFQR0IF
nU7/5JNP2rVrx2AwqDsH14DECeF0Tl9KO3gifs+R2E0+ERt3hJPHwaPxtRUo
N5vX6IxxNkthRjXGnYFSJyoXZsIoUBYzyCdmDOFOa8P6RxSfh84Yr/LeZTuD
0VRa4UCclq5qijhZR3GpRYcqxyLqhjpxEolErVu37tKli0pVb+QzODgY+Mas
WbMoOgeXgcQJQR02rYHtj/O+GV+PPU/o07L1gRnpHJiJxQyxRo0yxp2AwaRj
SQpg/KeYn3QlawM5Y/yP5HlFvESYueAtjCadu6/VPVgzxgVCO+Ik3+rjWJz+
0kr6y2/2BCyfhklQgxVEHVAnTrgUzZ071/5uHTp0aNu2bUv/6wmJE4JqFHK9
TcZ4fSMxoWrespqM8THTroSGFcNnjLf0/xmbA+AeilUs6Izxi2vDBhDutC16
RCYzCCpjXJiu0Ardfa1uA1NrjIziOp1HH5tgU1S8zqG588Dhqp+pkmmnNTDC
O6FOnO7cuQNcYubMmXb2Ab9e2rRpA3azE5VqESBxQrgAa2vgMimM/xTmC/Ye
iiMqZw4cffaP07DLduWlUp0OPVvkBHQGZYUoC0aBCjjR5GW7ZcGfPCo8DOld
fHmp92aMm82mKladwiMaM9GxON19CJVtTi/C1G5rIIhohlAnTtHR0cAlOnTo
IBAI6tsH94127dphWMvOr0DihHANFszC56ogFcg/gD5isi/uTj8tvPPL0gdJ
SVUoY9yVAKXhyUtg/KeEn3I/fz9QJkKfjiX9XMCJgcwY1xlb9t+eTQGTyowF
thnjuug41guvOHQn2cp1kE/qmXl8FIxF4FAnTmazuU+fPkAnpkyZolQqa+9Q
VFT02WefgR1WrVpF0Tm4DCROCFeiVhmK66oxXnskJzPnLL7//awbjSj0xGYp
MDP6pHACCq2gTJgOo0CplQ+2R48k3Gl9+KC40quQoSeJiuW1n+xmLs9UUmaj
Otz3P2a/9G+iWvhz35AGr2sPQ3oWjDuZSsstdT3ohPA2KH2qzs/PD6/U1L17
9zVr1vj7+ycnJyckJFy6dGnu3Llt27YFL3Xu3Lmqqoq6c3ANSJwQLsZsxphV
dbQGrnPZ7uTZlC9HnSWynrbsiszK5MLMLS2W6LROWLb782LqV2PP42PQmHMD
R58DX4ktqRmspr9FM8do0jHFeTD+w+AlnEtbSrgTGFey1pfAtQZmSQpc0xq4
WaH8/YhgwGDMaDRz+WTP0YZGaAJDFbsP8L8YxPrna6y/v8z/3xfyTds1j4Jq
twZW+16DCj0V0DGZ3N1XjHAzVLdcuXDhQseOHesrfdmtW7eUlBRKT8A1IHFC
uAWZ1LbGeH0jIrJ08uyaQk+jplwOCGJAhp6EgqYmeKRkMM9dScfHik1B4ASA
ShFbmGyv+CSqzhhnQoaPIorPrw7tS7jTxojB6VX+UMt2wky13vOfBZNv2ib4
aigYvP/1eVoJvMN71i1fDuF/NsCQlQskh/16m/pW6NhvtNFcv22zUfzDLMhl
OxOTjTLGvRkX9KqrqKjYvn37gAEDyMr05Zdf7t+/3wNKX+IgcUK4C73eVFos
gfGf3Bzeuq2hhDsNGHkGPmPc2hrY4JxPCr+H+eDddXovzT/X6GWQGeO57PCD
8dMId1oR8mkw/Q/7U9KrHoUXnQUjocIvjx+TL4gjD62xjpSJZosxv8AsFtf3
qmLnbtGo8cJvRrJffIPX/RPZ8tXAfPif9rNuHDHOWL1spzx8QrH3d3zIt++W
Llsj99mH/wheAjsYMnN4PT59Tp/++Zou5jGUPjFKMA3KA/RSXNnkl8fjFRQU
5Ofnczgcl72pU5DL5Xv37v3ss88+/PDDr7/++ujRo3r9c7XRkDgh3EiDCj3d
e1A4euoVQp/mL3uYAtcamEETKRVOKAno5eL0pLrGOFdWBBl68s1cQ162O5zw
I40bW9/OV7LWk3e2GeXSXHdfOiwWk8naEuXwMXv7YJhw6Cj2K28Zi4otZrPw
66Hs11ubyivwV81iCbk1sPLYKXBA7aPA2gqk2H3AJvQk37Qdyp3yaWaByGvz
yrwZV4pTC0Wj0fTp06dNmzZLliw5ePDgtGnTatenQuKEcDsKhb6IDrVsl5bK
nkdqDTxisi+wKfiMceBpTTlPJE44Mg0P0p2SKu5sjBhM+M+GiK/Aljr3zGNH
pFTex8e17M1g5xxOOEdZgg+DucUUzIQRJ8V2a5VLjd9d/Eczj8dp8w6/d1/L
s79qLTqdsajUoThZH8GLecx+9W2yOwn6fW3TArjeZbuySovR6/LKvBwnipNM
JgtqFAUFBc46Byq4cOECkKKAgABiy+LFi8EWGo1GbEHihGgOGI3mCuhCT4eO
J5AzxjfsCIfPGNc3odATEicCg0kD2RqYzov/PWE6OXzkm7mm2G7G+KPCQ2A3
oFJcWZHJ3MKeBXMoTrrwSNZfW0mXrHhuY0wc628vShcurjmOtTUw16E44UM0
aoJtoafrt6FCT4V0TNGSlkERTcSJ4pSWllZfErh91q5d66xzoIJ58+a9//77
5HgsXhTd19eX2ILECdFMsGYgizT0QqjwUWhY8dgfrhLuNHn2zYT4SpiJ4PgS
cSMTPJA4kQEf7CJlJWToKZB2fHnIp4Q77YgZncMKdShOeMa4Rt+SMvDti5OZ
zea83YHf58vaxQEUu/dVC89N8kZgNcoTpx2KExjqc5ds3EkyZwFkxnh1a+CW
XZAQAYkTxSk9Pb1x4rR+/XpnnQMVBAQEXL9+nbzl8uXLNjEoJE6IZoVOZyot
gcoYz8rkbtgRTrjT4HHnz/tmQC7bMSvlpoa3BkbiVBuVTgJZ6Cmt8iF52W51
aN+o4gsOxQkfImUVZmkZn+y4OMlWrjVkZtkMfWoav1cf9httTHXVsQF/OAhH
jme1el1z9z55luLgYRhxsmaMp2ZwO3cjuxOn9Tv6+CQofSoqtehazHoootGg
HKeGUlhY2K1bt+7du5Pzw5E4IZobGGbhcpSQCuR3N5/cGnjFhqD0NDbMxCK6
SKVsWMY4Eqc6MZn1HCkNxp1K+Ml/pv76G6k18Ln0ZbVbA9cWp1Jroad8Q0to
DYyLk72K32s31jfXVFlZ3yx9Ygpk+Ei2dJXNXPxBPKiMcbHElfcK4XqQOMGj
1Wr379/foUOHjz/+OC8vj/wSEidE80Qm1UEu20VFl82Y50cu9OQfSIf0Lh5X
BTwN8pSQONWHxYJJoFsDJ5TdXBPWj3CnLVFDE8tvE68yeAlXszaA7XGl12wm
lgnSmn9rYFycpAsX6yKibIY2KIT73kecNu+Y66lmI576I+uFV5R/nCbPku/Y
DQ5opDOqWwOXwCiQ9lGQjTsJh4w05ORDZYyj1sAejcvEyWw2i8ViDocDvjar
5ze5XO6Aeli4cCGxm7+/f69evdq2bbt58+baHWSQOCGaLQY9bMZ4QZ5g14EY
ojXwgBFn9h95nJfLh5lbVgKbMY7EyT4ag7xSlA3jTvmcqONJc8gZ46dTFwXQ
jvlmrlkR8hmxcXPkN/fy993N35dccZeYy5OXYFgjP9nz+DHxVbfrG0ZnJKLb
z3EylZSyX31bOGR47Zwi1UlrLhP4arNd+ygAFyfrwc2YicmGDD0JBw+30Sft
Q9v1PkNmjiEj23bk5JvFEtSixSNxgTglJyevXLmya9euRFLThx9+uHjxYqAi
zaG3r0QiWVEPx449/d92z5494LSnT59eVlZW50GQOCGaM9bED4EaMnwUEMQg
F3qaNudWbFwFVMY4TaiQO162Q+LkEPDBzodrDQzGvfy9S4P/R2jSItISns24
nr2FPBHoWeNaAx9O+slOtSjV/7N3HuBNHAkbvtzdf3fJ5XKVS7+US3KFQEhy
IaFDAgECJgQIJPSEkgSC6b3b9B5KwJjee3UvuPde5SbLsnrvXSv/Iy2I9aqN
7JUly/M+8/DYq5ndkWzYl5nZbwwU5JZ7fKpOc/O2NXBp3SbiQUNBIes3fxB/
Pd2xPlGccJxuDey0KHfvJ7mTdP5iYgXua/9muZgc5LzwWkANFCAowdfitGXL
FjfLwkeNGsXj8XzagfaDP0MH3MlNHSROiMBHqzVCZowXFrDnLb1HXDF+9kIx
pHd5DHpC4gSJQiukC6BWjGc1Xl2dOMiNzDwaehrq2FaqZnt7Z9ebNFqjEi+n
ipdtTvnM/i0olHgCTI6TNS38id/pYuPxbzGplPvqW7x/98RUTmzQUZysVzEY
TPWNMO6kT8tkP/N3ohHxe35gKCrFX1Vs3y1fuQ4v3Nf/w33pDfu3irDt1q2B
9WjcKajwqThFRkbigvThhx/u37//9u3bCQkJwDHCw8NHjBiBv/Tuu+9qtW0P
rr958+acOXNycnLc1ElOTl62bNmkSZOmTZu2e/fu+vp6ry4xYcKE999/n+OA
RqOx10HihOgUYGYLqxk2Y/zMheIhY07a9Wn5+riSYqigp/paMZA0V31A4gSP
waRplkBtDUzjpoenhHh0p0z6Zce2bGl1m4OezpasDksNofZdt0AmhxuNgj6D
OH99wdTcDGxNFDKO/dSfjZVVTis7FacW22AsaWtgN0U8caqboCfV8VPCYaNY
T/2F9bs/CT8eofo50lBW+fBVtDVwcOE7cTKZTN27dwc6sX79erOzZXL5+fk9
evQAFc6dO9e2S4Df+SFDhoAzXLlyxWkFpVIJZIk0zPXcc88BfYK/yj//+U+n
w2VXr16110HihOhEwK8YT0tjfDXrqt2dRk06Fx3jxdbATgcfkDh5hcWCiZRM
j+JUx89eGvehJ3Hqfih7ltPmjcJClb4tz4L5SJwA+rR0M5vtvg5QJiBO/N79
FVu2A41Rnz3vqiYmkYATWlz8Jx1TqY3VtTDupD55lhz0NG0W6ADryT9bv/3l
Uw+P275g/6Eb+9lXHq8YR1sDBwu+Eyd8huv9998nbetG5Pr166DOgAED2naJ
ixcv4g7jSpxmzZqFV5g6dSqoDAxt6NCh+JGjR49CXgVI0W1nNDc3E+sgcUJ0
InQ6Ex0u6Km8jL95e7Ldnfp/dnzPwczKcgFMW0ajjBj0pDeY7sfRZi+8Bc6z
+1BGRXWQ7PHdAWj0MuA2bsSpgHnX43ATKCsT+rs5iVDRiFm8u7P7TpzcI1u+
GugKKNy3euCuwrZFYuLFYvJay0ETE4MJ406G0gr+e33cpyU8LE88CQxKl5D8
uHlNvSt5Q3QifCdOu3fvBi4RFhbmpg74D+lLL70Eqpmgf89lMllqaurZs2cn
TpxoH/xxKk7x8fH4q5GRkfaDZrM5NDQUHPzHP/4hdr31trcgcUJ0OiyYhcdV
QQ4f3bhVSVwxPu2767m5LI+t1oUnrtgQp1ZZp4Gu3i7/ZOwp0BZ/aq/viAjw
5/QfrtMZ1oEOsxkDX8cl1/n7UwlcTJiRI6W5cp4cxg0YcVrhVpxAYYrL9CaN
5948wl/ipNy5Rzz+K7zw/t2T/adnRWO/tB9pgzi14NN2olZbA7spis3boNzp
F78TDPikVduKKrMQbQ3cufGdOO3YsQO4BPjTfbXXX38dVFM5W87nlNOnTzvO
mjkVJ9yshgwZQjrO5/OfffZZ8NLBgwchL+oRJE6ITopSqa+tgdoaOC+XRdwa
eOTEs3fuVbtvMnfhHaBY4IsjkTn2hsQC9OnT8acbm6QmMwa+vXSzzN+fR0AD
7rZSNZcuyHcUnlJWPIw4rU8e5nHWjy4okGm4kF3ylzgRsW5Ix+FQdjbt462B
3Rddcirrt3+EGXfSxSSQ2poa0dbAnRjfiRO+N+6kSZPc1GlqagJ1QB/gcwky
MzNDHzF37lxX4gRM7LnnngMvHTlyxPEkI0eOBC/NmDED8qIeQeKE6LyYjFhT
owxy6On4qYKBoyJx7ekz/NiWXSkVroOecHG6cr3cqTXZ3Snk6/M6g6nzipPB
rKWJsl0VvopB7eV0RpXTrYG3pIzxKE67MibBLDUHhSurMWGe7+yBIE6UY9sa
mAPjTrIVa2EGnWQLlzlpXlWDOUQCIjoFvhMniUTy8ssvA51ITU11VWfBggWg
wrRp09p2CYFA4EqcCgsL8ZdSUlIcGy5cuBC81KtXr7Zd1xEkTohOjXVrYLGm
Gm7FeHRs7eivHk/bTZ5zzVXQEy5O386/2Wd4hBt3AiUhtb7zihNQIzeucrVy
K+VXBDd2gYJOUp1o2iGYQaewlNFutgYmFoaoRGNQuO/JmeJVm1NGU/4GAwFM
rjBWeQh6ks6e93hBuKvyy6dANVdnQFsDd0Z8GkewbNkyoBMvvPBCWFhYVVWV
fVbXbDYXFBTYn3dLS0tr2/ndiBM4gr/kNCfq0KFD+KsKhYd/FiBB4oQIArQa
Y12NGMadigo5i1dH27VncMiJyNMFTsXpq1lX3CuTddBp+LEFK+93XnEymg1M
eRVeGqVlQE4ul4fbj0i1voqqU+nExBXj9fycZXF9YNxpcez7Nyu2Qw49iZRM
S+utgQXqJpaC9qDx3MYHIx4tnep3t+YAW1EL3q+3y8sDGYvRaGpguBOn+YtY
T3gacXIrTtZS12DRebfhI8K/+FScVCpVSEiIfSXSm2++OWjQoIEDB7722mv2
g2vWuNyr0SNuxGnfvn34S04bXr58GX+Vy4WdyncPLk4f2QBvcNEjMjMzKTk/
AtExmExYc5Mcctru1LmiIWMebw0cujKqsIBNEqcBnx33KE6gDLBN/3VScSJS
wU8FIrEp5bOOWf1rMGnZhK2Bt6WOWxHfb55DfviC6HfAn1tTvyAe3J3xVQ0v
E8adWJIqo/nxnX17+nj8hPNaXaX7/Ki351GUHB44WFeM84WunEd1/DTMVJ3q
4FEPs34V1ZgkqD63oOHGjRv43XzBggUfPcLX4yRGo3Hbtm14oBOJ9957r80J
TjhuxGn79u34YJfThuCjwBsymcz2dMAOLk7zbIBP+NwjamtrKTk/AtGRwAc9
pac3TZ37eGvgMZPP34+uIYrTx5+fhBGnT8aeDAJxkmp5y+P74iKR0HCyYy5q
nWZVNdsHnUApYN6NLFiIG9SmByOvloVXcVLq+Nn1/NzYmp+JWwMvi/sor+k2
jDtZg5501ucf+SrGj9E93AxnFXJiOuaNdyTWrYFpzoOeuP94y4M4/e6P+pJy
mBVTJiYLBT0FGnl5efjd/PTp0/Me0TETTOCvdn5+/t69ezdu3Lhhw4b9+/eX
lVHwL6Qbcdq1axc4/uyzzzptaB9xomrDFzRVhwgyDHoTA27FeGW5YPveNPvW
wKDs3JdeVSHAxWny7Kv9RnhY4NR3RMSaLQm+FqcbVTuzmDd8d34zZtyd+TXQ
EqmWe750HbCLeklhe05Ywks8V7oWsrLOqCJtDXy3ai/QmHJ2IkmBSppj1iV9
Yvec+VFvXy/fCpwKRp+EisaIggXu5wHXJH0clM/aA6UBYuNoO8q9Bz0POv32
j9qYeBh3MtLqgKT5+70iPNABm/z6DjfidPDgQfwlg7PNqfFMA/DeidumtAck
Tojgw6utge/cq/503Gm7C3374638PDa+OHzRqmiiVjktBSVsX4vTxgcjLpZt
8N35b1TtANpQKUhvsa560m9N+2J14iClvu1hcVG1hxfGvAtf32Q2cGU1HsXJ
NjCVeyxvPnE6D6hUBSfZoziVsGLdbCJsLxWCNi5bDXysWwM7BD1x3+jeKjbc
nn7ZWp/kqzdAuVN5lZkvDEr5DBooFKfi4uLXbUilHTRX60ac8NxyAKjj2HD1
6tXgpd69e1PVEyROiGBFrTLU0qCCngry2QtXRhFn3yZ9ewWIU2xcXV/Xg07A
qb6efZXVLO/U4lTCTQDCcLfmgP2IQN20JO6Dn3K+wSxtfGbKW3HCUWgFdGGB
e3HCS2JtJGmXlhjaYffidLtyt0drmh/19uUKd7nHnR2LXm+so7da6XTwqDR0
qWDIiMey9MSTggGfWJeO/98fiO7Ef6e3fWtgD9N2DQyLAQU9BSgUilN+fj7u
KqREbjqd/o0NI9V5X27Eic/n4y/du3fPseHnn38OXgJdoqonSJwQQYzJhDEZ
sEFPR47n9hv5WJOGTzhTUca/fK0MuJPjuBM4MmHGpfw8NqgDvj17udh378J3
4iRUM5fE9d6fM5P0QFkx1xpKeb/2UNtO2zZxarGuGNexJJUexQmUam7a1tSx
RO05mvdDHT/bVf2rZWEw4nShbL1XHTZhBpGm2VXRGANue1wL+ElzeXbJMZRV
GkorQNEmpfB6/o/7Vg9twgP8CHhJPGkaaehJc/Um1NBTFQ2j6LlvBLV0gDjZ
I5V0Oh1V18JxI06Anj17gpdCQ0NJx0E38H174ber8wguTiobVE3/IRCBg8Vi
kYg1kCvGo2NrJ35z+XHQ0+yrSckNt+5UTf3uGtGaBnx2fNXGeGBN+EKp5evj
rt+qFAmdbw3cfnwkTkazflv6uFWJAxV6keOr1yq3zo/qXi1sy9O1bRanFtvW
wIn1JzyKE16ulG0mms+imPdyGTddjDjtghpxKt/sVW+bZBVuTniv5qe2fQi+
BlMqjVU11qm61/7tanUTx7bJryriJOm49LsFsNN2bC4KegoQVI8IYnEKCwsD
L7300kt0Op14HF83Do5TvlfdKzYonAFEIAIKndZYXwe1NXBZCW/15gRC2sDx
E2cKwfH4hPrQFdbpvIiT+YUFHKdtmU1yo5H6Z4vWJw9bn/xpZNFiags4J7i5
14nznV7UjBk3p4wC/nMk/wdvzxyWGhIa/Y5X77GQExtZuAgvO9K/BB3bkzF5
f9Z0vBQw77lyJ2BKS2I/IOrKhZK1jtWKm2PmQaxxKueneNVtjVFexI3DS1bz
TXCGS+Wb7Ee4ynqvztaRWIOeGpsUYdtlS1c5LfIN4Q9HpfKLuK//p7VT/UOf
WwClT7UNFi3Fd0+EtwBfeuURFE4wBZo4SSSSN998s5stPyopKUmv1/P5/NWr
VwNXBAe3bdtGYU/QVB2ii4BhFj4PdmtgW9DT4ziCeUvvFRawDx217ltXWsxz
07CWJsK3BqaQdcnDVsT325HxJbUFXybEVjgPHrFYLNvSx/0Y3SM8dYy3Z16d
OMhbccpgXtuRMREv29O/3JY+fnvahPDUECBvoOQ23XIz7lTPz9mTOZnoP+Ep
o6s4KaRqezOneHqqbkibl3UBVAYZOIlPn3+kFmvQk1AMOXwkW7yCNPSk3PMT
VNuKarNY4u/3inhIEI84AbKzs/FtX0hMnjwZfnc8GJA4IboUcpmOVu1ZnK7f
qszKYk777jox6GnDliSP4oQXAZ/KaTsfTdVpjIr1ycM2pYzUmdSOr8bVRwAN
yGM7WWnpkfZM1RGxTrOqWDBpA7Yl5ftIIhRXc5RYIb/pDh506arks6Pa09tO
J044mEZrrKmDUSBdTALJnYRDhhtKK6BWjDOYFhMKevI/nVqclErlQhvg0q7q
1NfXz5w589VXX8X70L9//+PHj1NrTS1InBBdD4Pe1NggdaM9h47l9Bl+7Obt
qooy/o59aaQ0p+JCLsyYFYMuNRiouVP4bnE4U14VGvNOZNFi0vFacR5wjEvl
m9p2WqrECUdrUDSJS2Hcqbg5ZlncR0QXOpwzm1hhU/JIZxmY3fGkArlO2J5+
dlJxarEGPWGmZjbk0JPw05BW+vSbZ7T3YqDaVtdiKieKjuhIOrU4wWMymfh8
vlzuq6czkDghuiAWi0XAdz5tFx1Tgz9D9+n409nZzGpb0NPIL8/axWnSt1ce
PKDDuBOtSiiTatvfW5/GEaQ3XQG3+5TG8/YjwB9WJQ7cnj7eaG7jnCO14tRi
2xqYK6uFHHqKzA8letHCmPfsWwPnNd3KoF++WrZ5VcJA/NXFsR+cLlyW1Xg1
nX6pUVikNSjb3MnOK0441qCnSg9bA+NFuf8QaehJtmIt7IpxngAFPfmRLiJO
vgaJEyLouXanoqzSSdK+Wm2wbw18OCJ3yJgTg0Mi+42MmDDzUgND8vHYk+Br
cAQcv3S1zOnWwPejaw4cyXKvT6xmBWZu153C1wGYp4qXL4h+hyGzRlFhFvP+
7BlL4z4UaZrbfELKxQlHqRXRBQUw7pRcd5L8gFvVflKdQ9mz1iZ+4thWqma3
7c7e2cWpxRr0ZDDV02H8R5+ayfnri0R34r3Vw1BYAjVt19BocRbvjOgAkDhR
AhInRNDz8ecnj5128eyYGWM1W7cGvnefFrbjwZjJ5weOjqQzrGtZ03MYwJGm
zLkWvjMlNbUR1FmyOoY4ZwdUauvu1H4jIjwOPdXXijXqtt8pThYt9en+cXqT
ZnPq6LVJH6sNsru0/eDuX8pLbs8Js5tv/pRDWdYcEYNJ2yypgHGnSk6KfVjp
0YrxEOLWwIdz5qxLGuq0LVvaamtgSIJAnFqsQU+YmcuHHD6STPmGHPR04QpU
20oaJgu4kKuugC/Eae/evUcJrF27Fj9+6NCho87IyMigqg/+Ahen0TZmzJjh
7+4gENTjRpxwpBIt0Js9P2UAHYpOePyU2eFI62N0l66WPVz7ZHuqDqiU3Z2G
fXGqL4Q44UUs0gTsJAVXWb8o9n1cMG5W7/J3d9yBWcwiJRN22q5gIWnoKaX+
rEdxarBtDazWe7eRRHCIEw6mVBmrnW8NTCqa67dJ7iSZPhvSu0wstsWMgp58
jkajGf0IX8QReMuKFSuo6oO/wMUpx0ZRUZG/u4NAUI9HcQLkFDT3HR6xbV8q
8aDJjH23+M4nn59MT2fYxam4kLtlVwoxSzziZD6kOzHoUl8EPVFCTvNtcN9f
nTjIjJn83RfPqPUy4DYw7pTWcJ7kTsfy5nsUJ7wIFQxSprobgkmcABaTydTI
hPEfQ2EJ77/vEt2J/Zfn9Zk5UPpUU2/RUrAOEOEGs9mc8whfjDh1WXHydy8Q
CB/iUZwkMu3or85N+/663kB2BqFYPeLLM1/PulpeyifmON28XTn0i1N2d5o5
7wa+ktxj8UXQEyWYMSO479+vaeM2Kx2PyWzgSGkw7kTjpm+wpX3aS2hMr/1Z
0z2KEyjN4nK9CWpLhSATpxY86EkkNlZADR/JV64jBz3t3AflThVV4CoBOxgb
ZFAoTgaDgdsmFJ1/Ox4kToigZ/CYE/OW3Tt9qchpOXWxcPyMS4NCTjSznS+6
yC9mWbdfmXP1u0V3wBfb96TtOpAOStjOB0DJ7O40YsKZu/dpkENPXI4SwwLr
ToGLUxL9jL874gXgbitVcyGn7S6WrCMNPS2L6wPTkC4okGv4HjsTfOKEY9Fq
jTX1MAqkjYpj/er3RHcS9P/YUFIONW3X2GQxdYKhzs4OheLUlUHihAh6BoVE
9hl+rO+ICKcFvATK2KkXXDXX6U34rr727X3tBT8ycHSkXZ/CdjwoK/WckAkK
vUGi1/v5TmEw62iiHLxUCjJsO4Zsth/hqxj+7R4kOqOqSQQb9ETan8W66Qw/
B6YtV1brZhKzWV59rXIbONtPOd8Wc+M7xXQnPNagJxYHatqurFL02VjS0BN0
0FMNplL5+70GOUicKAGJEyLo8ThVdz+OBpzn4vVSp6+G734A/OrufZrjlis7
96f3GxGRkFAf8vV5uztN/OZyenoT1NBTlVAs9ufO2kCN3CRpX63c6se+eQWG
mfmKBo/yU8PLrOakbk8bR3qneYzbNG66x+YMUbHW0GqWAXyAW9PHhaeOmWfd
I7i7/c9ViQPBwUzmdX99IL4Ak8lhg54OHCEHPYUuhVwxbuby0bSd70DiRAlI
nBBBD8zi8PA9KUCBSh3inu7FWp1q36Es++JwR3ECXxQWsJeseRxWMDjkxNmL
xZDTds1MudlPzxYZzQamvNJVkWq5fulVm1Fohe5XjG9L+8KNKFawk2CGniQq
lv3OXsSNs8uSYzmS971/PxDKsRgMpoZGGP/RZ2Rz/v4y0Z24//yvIa8Qatqu
vtGiD8R1gEEAEidKQOKECHpgxEmnN0357lrI1+ekssfP+NTTxQNHWQMwx027
CMqICWf6joj4YuoF/FtQVqyPI+Y4nbtYAirb9Wn15oSSYqj9WeprxVqt0ccf
Q5fAfdBTXM3RG+Xb8HK1LNxx2o4Y9OSmsKXVRrPehBmWx/d1Y2KgNEiC7VFl
C2Yx8wWQw0eSWT+Qhp7UZy5Ata2kYVKZv99rEILEiRJwcdpm49ChTvNADQIB
D4w4AZgsGai5YNV9fNm2Wm2YMPPSZ5POrt2asDosfvGa6MWryWVNWAIpADMl
pfHr2Vft7jR2yoXEpAbIaTuhQG0JsBXjnRGLxQIf9HSycAm+pZ1dddLpF2Ea
NgoLM2y71bgt3SMLF/n78/AJmAo66OnSNZI7ib+aDuldpmYU9EQBer1+2yOQ
OFECLk57bERERPi7OwgE9YycePbkhUL3dUoreT+fzF2xKQ7YTuS5AnAEyFK/
kRHhex6A481sud7Z1sB7DmYOGXOCdLCkiLs2LNHuTuAkh47mwAc9mUzoTkEB
Gr2MISqGUaAcxo3NKaOIwnOiYBFMQ9vEn/NJOnuZH/W22hCcIyfWoCcGXNBT
USk56OmPz+oepEHpU009pkFBT+3CYDDseQQSJ0pAU3UIBODmPWsuEygDPjve
59NjS9dbFywNGh2JHywq5bRYVyBb+DznWwM7lqvXy4eNO23Xp2/n38zPY8E0
rKWJFPKg3eOpI7EFPVXDKFA9P3eLbYG3vSyN+7Ccnei+1Yr4fp5GnKyFq6z3
9yfhQ2xBT9UwCiRfu4k09KTYugvKnSqqzUKfBD3Jlq2SLVnhtKiO+3CTIz+C
xIkSkDghEESMRvP0H64D1dm4w/l+bXKZrqZaBKNA2dnM2aG3Hwc9fXnm2s0K
SO/ic1WBFvTUGbEFPbEhp+3uVe0nOc/ZopVu6q9M6A8jThxlnb8/Bt9i0emM
tQ0wCqSLT2I98WSroKc+g70IejJSHPLAef5Vzt9fxgvrN8+wf/8X+7fiSVOp
vVaAgMSJEpA4IRAkuHzld0vuaHUuV2sbDGbHaTunpaKMv+dg5oBRx+36tDYs
sbJcANMWXEKnC6o4IH+hNSiaRCUw7lTKivsxuge+PAnXnrVJH9fzc51W3pUx
ydXzdPayIPodrTH4s4ksGGzQEyjCT0NaDT395hldTAJU2+oaTOmrD5Pz6lvS
ufN8dPLAAYkTJSBxQiAc8TjaY7FYxCIN5PDRvfu0z6dcsLvT5DnXIIOeaNVC
qRQt8KAAM2biyeshh56O5v2wJnEI0X8KmHcdqyXURnhcHH6+dJ2/33rHgckV
kEFPquOnSNN28tUbIL3LR0FPrKf+LOg7mPLTBhpInCgBiRMC0Wa0WmN9rRhG
gUgrxgeHnDh2Ig/Su5qb5GjajhKUWhHk1sAp9WdJFnSxZL3DyqicVQkD3a8M
Zytq/f2mOxQvgp5yCzjPvdoq6OnlN/Q5+VDTdvV0i15PYbeVu/fhfTDkeX78
tlODxIkSkDghEO3BbMKamXJIBYo4mQ+Uya5PC1dGFRVyYBrW1Yo1GhT0RAFG
s44lqYRxp2pu2sqEASQXquKkEOsk1Z4gzusRlMl65GTRUn+/XT9g3RoYPujp
2+/IQU/nLkG19SboCZNIMJnLyvqMTNavfy/+cjLvXz24r7wFKjt5U3q9mcez
mM1t/FACBiROlIDECYFoPwq5jlYN5U4pKY3Tv79O3Br45u0qSO+yBj2h3Sja
jcWCiVSwQU/nilfjLrQkrjf+RUJtBHFN1PH8BXsyJs+PepsoTmEpo4/kzi3m
xPn7vfoNTKWGDXq6coPkTqLPv4T0LlvQk2eZEQz4RDT6C6cvmQUCzguv8Xv+
z7qXcVU1+/d/EY0a6/i3THsvCnTMSKuh4KPxK0icKAEXJ60NnQ49BI1AtBG9
3sSgQ60YrywX7NiXRtw1eOe+dMgV400MmdHY6f/bGwiooYOeMhutQZfH8ubb
vehg9rekOuXsxKtlYeCln7K/yW68Zj8uUDRili768/Iq6In/Xh+iO3H++qI+
LRNKn2rqPAY9uRInC4YJPxnBfqabse5hZIT6/EVrTsL2XaSanV2ctI9A4kQJ
uDi9ZOODDz7wd3cQiE6MBbPwuErI4aO7rVeMfzv/Zk5OM0zDGmvQE5ULPDop
cfXHb1XvdloS6adgzmAyG7iyGhh3quPnHMubRxxTWhL7QSXnAbFOBScZHL9d
uZvUliku0xv9uZWzH7FO24klkEFPshVrSUNPyj0HoNzJGvQkcjMY60qc5BvC
wFU0128SD0rnzmP96il9ahrxYKcWJ5VK9dIj0AQTJaCpOgSCWlQqQ10N1Irx
4iLuwpVRdncaPv7MrTuw03bA0Py1NXCAsD19/PL4PngJjekFiv3b3VmTIU9i
C3riNgjyYfTpevlW0lqm+9UHPIoTKHRBvlzD9+mnEchYtNBBT0mprF8+1Sro
qf/HhrJKqGk710FPTsVJF5/I+uWTstAl5N7q9fx3P+Q894qZ//hH1qnFiQga
caIEJE4IBOUYjeYmhgxSgX6OzOv/2XH7tB180BO9XoKCnnD258w8nDe3zc11
RhVTXAbjTsXN0aTlTHszp3gUJ7xwZbVmrIuu8Pcq6En0+Zethp6eeFIbHQfV
1kXQExAn4ScjTEymvehz89h/fp7/4QCL0clPxERvZD/zd0GfQcbGRry+6uRp
JE4IO0icEAhf4FXQU1x83ZjJ5+1DT9O+uw65NTCtSiiRoKCn9opTiy3oiS9v
gHGnen7uwexvSUNP+U13PIoTKAxRsdagoOpddzqsQU9VUEFP6sjTpGk72Yq1
kN5l5vJIm2Xz+w0hnQ0vxhqXYRGKsK1O6iNxQthA4oRA+A6Nxgg5bVdUyFmy
JsbuTgNGHT97sRjSu9gsRReftmu/OOEotSK6sABGn+JqjpLc6XLpRo/ihBeJ
imWxdNGfF3zQkyG3kPvSG0Rv4b3Vw5BfBKVPda2Cnvj9P+a/+6Hm8lV7kW/e
wvrVU5IZs512ElMqeW++zfn7y6oTp/D6smWrkDgh7CBxQiB8ismEsZoVkAoU
ebpg4OhIuz4tXRtTXMSFaQj0TKUy+Pu9+g2qxAlgNMEGPZWzE5fEfkDSp5sV
O2DasqRVRnMXXeHvVdCT9IdQctDTqXNQbQlBT07XOCn3HrCe7cRpxx6KJ01l
/fYZQ2GR/Qha44QggsQJgegApBIt5NbAWZnMr2dftbvTqEnnEhLqIb2rywY9
7c6aciDnG6rOZg16UjbB+A8oZ4tWktwps/EKTMNGYaFK5yRrsYvgRdDTjTsk
dxJPmgbpXaZmlsVsdvVUneiLiazf/dFQWkY8qDp8FFxC9XME8SASJwQRJE4I
RMdg0Jvp9RIY/ykr4a3fkmR3J2vQ0/70qgqoFeOMxi4X9IRZsGXxfVYk9KdW
GjUGOUNYBKNA2YzrJHcCNgXpXcKuHPRkNsMGPZWU83t+QHQn9h/+pktJh9Kn
mjpB38FOxQmTy7n//A/3jf9iiocLzwwFhazf/EH89XRSzXaKE6ZWt60h5SBx
ogQkTghEh4FZg55UkMNHV66VD/3ilF2f5i29l5/HhmlYUy2Sy7pQmG1U7WFc
V+LqIzzX9gYzZuTABT3ReBnrkj4hutPy+L4VnGSYttagJ1MXDXoCmEViyKAn
+fow0tCTYstOmIb89/oIh41y6tWG4hLW7/4oHv8V+BqTSrmvvsX7d09MRX40
rz3ipLlwSTDgE4spIB6AReJECUicEIgORqUy1NLgpu2ymN/+eOvx/ixfnrlx
qzKYpu10JnUZP1mpb/uMVbUwa35U96uVWy+Vb5of9XatOA++rVjDBld3P+AD
H/SEP1VHKsT9WdwWa9BT4P+8fIQXQU/xSSR3EvQdYiitcN9Kfeq8+vxla9CT
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
XJz2Zc+4WbWLVC6Urg+NeWd35mRX2+wC3QJtD+bOxusDMzmUOxf3nLLWI1R2
lDpxo7DQUXjK2Amg1b2q/fYj0dUH27bkCRSxqtkx6KkriBPAYjCa6AyoFeN5
hZwXXiO6E/eN7vrcAih9qmuw6DtiHSASJ0pA4oRAIIiYzRirWQGpQBEn84nu
NH/Zvfw8NtS0Xa1YE4xBT7g4LYp9f0VCP1JZEmeNWrpYtsFVW6a8ElQIjell
b7I8vh8uOTwV3VUro1nHklR6FCdQKjjJy1rnZG56MLKGlwnjTuASRnOrO3sX
EacWPOiJL4AcPpLOX0QaelKfvwzVtkOCnpA4UQISJwQC4YhUoq2phloxHhVd
M/Gby3Z3+mzi2Ws3um7Qk/upOiAb86O6VwuzHF/SGBXrH3y6KWWkzvT4iTaj
2eBRnFqsd3ZMrGr2KE54uVCyljT0lN5wAcadGoWFKp2E+F66iDjhYGq1kVYL
o0Dam3dJ7iSZMQfSu0xMlk+DnpA4UQISJwQC4RS93gQZ9FRZLti4LZk49LR9
bxpk0BMjuIKe3IuTCTPszJi0IqGfTMcnvWRd1BTzLltRSzwIKU44GoOcISr2
KE6g5DbdIrnT6cJlkNN2AgUdD3rqauIEsJjMpqZmqGm7knL+ux8R3Yn9h7/p
M3Og9KmmDtP4KugJiRMlIHFCIBCuwDALnwcb9HT9VmX/kcft7vTt/JtZWVD7
s9TSRCplkAQ9eXyqTqLlLIvvsydrCnGlUyL9FGiV3XyTVNkrcQKYzAaurMaj
OOErycNTRhPdaXl830rOAxh3YorL9EZ1FxQnHLNIAhv0tHkbaehJuecn2BXj
QpEvBmOROFECEicEAuEehUJfWwM1bZeS0jhz3k27Ow394tSlq2WQ3hUcQU8w
AZgVgjRQ52bVLvzbBknRj9E9zpWudazprTi12BbkyDQ8j+KEl+vlW0lDT3E1
R+GGnvLPlazpmuIEsGh1kEFPuoQHrF8/TXQn4ZDhhpJyqGm7xibKg56QOFEC
EicEAuERa9ATAyroqapCsPtARp/hj6ft1oQllBRzYdo21Em02o6OBKQWzGIG
OpHJvO6+2h3afmAppbwkpV6yOnHwlrSxBrOTPXZxcVoa96FQzfSqGwJVE4w4
gVLIvA+0jehOB7JmwLjT8fwFKxMGmLHO/fNqMxYMM7E4kMNHToKe7sdCta2q
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
sQOa059//llRUZGWlubk5NSqVav09HQ9204YC6WlpX369Bk4cKBMmujo6GnT
prVv3x4aEjQnaHgvXrzQlJiEU9MkMjISHkfe3t6aElRVVfn7+48cOdLc3Bwe
MoMGDfrrr78KCwv5NKNHj+7UqdNpES9fvtT/HRBGwb59+6AhCfZ685SUlGzc
uNHOzq5ly5Zt2rQZMWLE3r17y8vL+TTQkVlYWJw/f76ysvLTp0/Hjx+HJufs
7Kx/8wmjJjMzs3Xr1qB57t69K5kAwjt27KgSMXfuXN7zPLQrT09PFtu1a9er
V68a6iaIhufUqVPwvX/99deaEmzdurVZs2aCVtS8eXNN609IODVN3NzcoGH8
8ssvkrHQeY0dO1b8OIIukh8EYGdkCIDO1FD3QTQk0B9ZWVnBN759+3bJBNDx
WVtbi1uIvb09L8LT0tK+++47CGfPruHDh9OJGE2cDx8+uLq6YnuQFE75+fn4
CILXN+gZ37x5k5iY6OHhgVk2b94sSB8bG3v48GFICRkNcgeEUZCQkNCjRw8Z
4RQREYFtZsiQIdDSMjIybt26hQ8u0E6PHz8WZ4HG+e7dOz0bThgR8CIGKhrb
iSbhtHTpUkwwf/78pKSk9PT0gIAAaHUQ0r9/f7acCVpOthQlJSUGvCGiYSgv
L1+7di22E0nhBC3N2dkZYlu0aLFu3bpUNRs3boQ3NQgcP368IPHt27ehX4OW
Bt2foW6CMDpiYmJWr149depUc3NzprQlhdPy5cshCpIJJt28vb0h3MLCggRS
U+bkyZPQEhwdHVkrkhRO8OTBtzZ4WeMd6ZSVlQ0YMECldo1iQKsJ46KoqMjP
z8/T0xMbiYxwAqUk+coWHx+PAwI0oNSUSUtLW79+/ezZs/nxRknhdOHCBYwV
OEQ9e/YshkdHRxvKasJkWLlypXiIUiycKioqcJJOvN4A9DnmOnr0qKGsJoyO
gQMHClqRpHCCpoWxERERgijo6TCKRr+bLCkpKeLHkaRwgtc9iGrXrp144Ajn
7wYPHmwQkwlj5PLly+KGJCmcfvrpJ8nWAq943bt3V6kXohjEZMKUePLkyckv
sCFNsXD6999/MSoyMlJcSP/+/SFqwYIFBjGZMEbgfY01JJzzlRROvr6+ENW6
dWuxU6+XL19iG6MVcU2W4uLikxw45yspnGxsbCBq2rRp4ig8UaVFixZlZWX6
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

     "], {{0, 803}, {787, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{178.3333333333335, Automatic},
   ImageSizeRaw->{787, 803},
   PlotRange->{{0, 787}, {0, 803}}]}]], "Input",
 CellChangeTimes->{3.674646772049923*^9}],

Cell[TextData[{
 "Fitting data to an O2 repressor binding region (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Epsilon]", 
     RowBox[{"DNA", ",", "O2"}], 
     RowBox[{"(", "Hernan", ")"}]], "=", 
    RowBox[{
     RowBox[{"-", "13.9"}], 
     SubscriptBox["k", "B"], "T"}]}], TraditionalForm]]],
 ") assuming RBS 1027 has 130\[PlusMinus]20 repressors. Fold-change takes the \
form"
}], "Text",
 CellChangeTimes->{{3.674646398065282*^9, 3.674646429628355*^9}, 
   3.6746464921145425`*^9, {3.674646641429361*^9, 3.6746466472683697`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"fold", "-", "change"}], "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["c", 
             SubscriptBox["K", "A"]]}], ")"}], "2"], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], " ", 
             SubscriptBox["\[Epsilon]", "R"]}]]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["c", 
             SubscriptBox["K", "A"]]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], " ", 
             SubscriptBox["\[Epsilon]", "R"]}]], "(", 
           RowBox[{"1", "+", 
            FractionBox["c", 
             SubscriptBox["K", "I"]]}], ")"}], "2"]}]], 
       FractionBox[
        RowBox[{"2", "R"}], 
        SubscriptBox["N", "ns"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", 
         SubsuperscriptBox["\[Epsilon]", "DNA", 
          RowBox[{"(", "Hernan", ")"}]]}]]}]}]]}], TraditionalForm]]],
 "."
}], "TextNumbered",
 CellChangeTimes->{{3.6739250653286085`*^9, 3.6739250769902754`*^9}, {
  3.673925260339113*^9, 3.6739253224600873`*^9}, {3.673925478504051*^9, 
  3.67392548287746*^9}, {3.6739255723228226`*^9, 3.673925577900033*^9}, {
  3.673925912626058*^9, 3.673925943471718*^9}, {3.673929034136031*^9, 
  3.6739290496234612`*^9}, {3.6742337723013215`*^9, 3.6742337723013215`*^9}, {
  3.6746466514043765`*^9, 3.6746466530069003`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["2016-06-11 Fitting RBS 1027 alone", "Subsection",
 CellChangeTimes->{{3.675016383146525*^9, 3.675016406906884*^9}}],

Cell[CellGroupData[{

Cell["Fitting", "Subsubsection",
 CellChangeTimes->{{3.6746463804836864`*^9, 3.674646381065687*^9}, {
  3.67501637449303*^9, 3.675016385977687*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"RBS1027data", ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"R", "=", "130"}], ",", 
         RowBox[{"Nns", "=", 
          RowBox[{"4.6", " ", 
           SuperscriptBox["10", "6"]}]}], ",", 
         RowBox[{"\[Beta]\[Epsilon]O2", "=", 
          RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
       FractionBox["1.", 
        RowBox[{"1", "+", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["c", 
                SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["E", 
               RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["c", 
                SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], "+", 
            RowBox[{
             SuperscriptBox["E", 
              RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                FractionBox["c", 
                 SuperscriptBox["E", "KIlog"]]}], ")"}], "2"]}]}]], 
          FractionBox[
           RowBox[{"2", "R"}], "Nns"], 
          SuperscriptBox["E", 
           RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"KAlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "5"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KIlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.2", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "1.1", "]"}]}]}], "}"}]}], "}"}], ",", "c"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6746465500208545`*^9, 3.6746465539800806`*^9}, {
  3.6746466655155926`*^9, 3.674646673598607*^9}, {3.6746467904699707`*^9, 
  3.674646884013178*^9}, {3.674647064120705*^9, 3.6746470922667713`*^9}, {
  3.6750165240895863`*^9, 3.6750165383254004`*^9}}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"relabel", "@", 
      RowBox[{"LogLinearPlot", "[", 
       RowBox[{
        RowBox[{"Normal", "@", "fit"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "8"}]], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]]}], "}"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"font", "/@", 
          RowBox[{"{", 
           RowBox[{"\"\<[inducer] (M)\>\"", ",", "\"\<fold-change\>\""}], 
           "}"}]}]}], ",", "opts"}], "]"}]}], ",", 
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{"RBS1027data", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EdgeForm", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
               "}"}], "]"}], ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}], 
           "]"}], ",", "0.03"}], "}"}]}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6746465251814337`*^9, 3.6746465378721595`*^9}, {
   3.674647095546779*^9, 3.674647164771964*^9}, {3.6746472169730997`*^9, 
   3.674647285473316*^9}, 3.675016526906748*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["E", "KAlog"], ",", 
    SuperscriptBox["E", "KIlog"], ",", 
    SuperscriptBox["E", 
     RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], "}"}], "/.", 
  RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.674647319451411*^9, 3.6746473408634715`*^9}}],

Cell[BoxData[
 RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulate to see if we can un-crazify the parameters", "Subsubsection",
 CellChangeTimes->{{3.674647362935531*^9, 3.6746473707325497`*^9}}],

Cell[TextData[{
 "It seems that you can wiggle ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "R"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " way down without affecting the resulting fold-change form at all! That is \
a very bad sign for our hope of really nailing down this parameter."
}], "Text",
 CellChangeTimes->{{3.6746475661826572`*^9, 3.674647593480721*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"relabel", "@", 
        RowBox[{"LogLinearPlot", "[", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"R", "=", "130"}], ",", 
              RowBox[{"Nns", "=", 
               RowBox[{"4.6", " ", 
                SuperscriptBox["10", "6"]}]}], ",", 
              RowBox[{"\[Beta]\[Epsilon]O2", "=", 
               RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
            FractionBox["1.", 
             RowBox[{"1", "+", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    FractionBox["c", 
                    SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SuperscriptBox["E", 
                    RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    FractionBox["c", 
                    SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], "+", 
                 RowBox[{
                  SuperscriptBox["E", 
                   RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox["c", 
                    SuperscriptBox["E", "KIlog"]]}], ")"}], "2"]}]}]], 
               FractionBox[
                RowBox[{"2", "R"}], "Nns"], 
               SuperscriptBox["E", 
                RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "8"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]]}], "}"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"font", "/@", 
            RowBox[{"{", 
             RowBox[{"\"\<[inducer] (M)\>\"", ",", "\"\<fold-change\>\""}], 
             "}"}]}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "opts"}], 
         "]"}]}], ",", 
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{"RBS1027data", ",", 
         RowBox[{"PlotMarkers", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EdgeForm", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
                 "}"}], "]"}], ",", 
               RowBox[{"Disk", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], 
              "}"}], "]"}], ",", "0.03"}], "}"}]}]}], "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"KAlog", ",", 
       RowBox[{"-", "8.803200138715422`"}]}], "}"}], ",", 
     RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"KIlog", ",", 
       RowBox[{"-", "11.992524472359802`"}]}], "}"}], ",", 
     RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]\[Epsilon]R", ",", 
       RowBox[{"-", "35.99141676936049`"}]}], "}"}], ",", 
     RowBox[{"-", "36"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6746465251814337`*^9, 3.6746465378721595`*^9}, {
   3.674647095546779*^9, 3.674647164771964*^9}, {3.6746472169730997`*^9, 
   3.674647285473316*^9}, {3.6746473731765556`*^9, 3.6746474891084614`*^9}, 
   3.6750165707742567`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"RBS1027data", ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"R", "=", "130"}], ",", 
         RowBox[{"Nns", "=", 
          RowBox[{"4.6", " ", 
           SuperscriptBox["10", "6"]}]}], ",", 
         RowBox[{"\[Beta]\[Epsilon]O2", "=", 
          RowBox[{"-", "13.9"}]}], ",", 
         RowBox[{"\[Beta]\[Epsilon]R", "=", 
          RowBox[{"-", "4."}]}]}], "}"}], ",", 
       FractionBox["1.", 
        RowBox[{"1", "+", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["c", 
                SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["E", 
               RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["c", 
                SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], "+", 
            RowBox[{
             SuperscriptBox["E", 
              RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                FractionBox["c", 
                 SuperscriptBox["E", "KIlog"]]}], ")"}], "2"]}]}]], 
          FractionBox[
           RowBox[{"2", "R"}], "Nns"], 
          SuperscriptBox["E", 
           RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"KAlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "5"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KIlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.2", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]]}], "]"}]}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]\[Epsilon]R", ",", 
          RowBox[{"-", 
           RowBox[{"Log", "[", "1.1", "]"}]}]}], "}"}]}], "*)"}], "}"}], ",", 
     "c"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6746465500208545`*^9, 3.6746465539800806`*^9}, {
   3.6746466655155926`*^9, 3.674646673598607*^9}, {3.6746467904699707`*^9, 
   3.674646884013178*^9}, {3.674647064120705*^9, 3.6746470922667713`*^9}, {
   3.674647599088736*^9, 3.6746476140387664`*^9}, 3.6750165720083275`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["E", "KAlog"], ",", 
    SuperscriptBox["E", "KIlog"], ",", 
    SuperscriptBox["E", 
     RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"KAlog", "\[Rule]", 
     RowBox[{"-", "8.805296871016626`"}]}], ",", 
    RowBox[{"KIlog", "\[Rule]", 
     RowBox[{"-", "12.003247472604826`"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.674647319451411*^9, 3.6746473408634715`*^9}, 
   3.674648429771863*^9}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"relabel", "@", 
      RowBox[{"LogLinearPlot", "[", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"R", "=", "130"}], ",", 
            RowBox[{"Nns", "=", 
             RowBox[{"4.6", " ", 
              SuperscriptBox["10", "6"]}]}], ",", 
            RowBox[{"\[Beta]\[Epsilon]O2", "=", 
             RowBox[{"-", "13.9"}]}], ",", 
            RowBox[{"\[Beta]\[Epsilon]R", "=", 
             RowBox[{"-", "4."}]}], ",", 
            RowBox[{"KAlog", "=", 
             RowBox[{"-", "8.805296871016626`"}]}], ",", 
            RowBox[{"KIlog", "=", 
             RowBox[{"-", "12.003247472604826`"}]}]}], "}"}], ",", 
          FractionBox["1.", 
           RowBox[{"1", "+", 
            RowBox[{
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  FractionBox["c", 
                   SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["E", 
                  RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  FractionBox["c", 
                   SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], "+", 
               RowBox[{
                SuperscriptBox["E", 
                 RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   FractionBox["c", 
                    SuperscriptBox["E", "KIlog"]]}], ")"}], "2"]}]}]], 
             FractionBox[
              RowBox[{"2", "R"}], "Nns"], 
             SuperscriptBox["E", 
              RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "8"}]], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]]}], "}"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"font", "/@", 
          RowBox[{"{", 
           RowBox[{"\"\<[inducer] (M)\>\"", ",", "\"\<fold-change\>\""}], 
           "}"}]}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<RBS 1027\>\""}], ",", "opts"}], 
       "]"}]}], ",", 
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{"RBS1027data", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EdgeForm", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
               "}"}], "]"}], ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}], 
           "]"}], ",", "0.03"}], "}"}]}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6746478219106245`*^9, 3.674647844856075*^9}, 
   3.675016576361576*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2016-06-15 Fitting RBS 1027 and WT", "Subsection",
 CellChangeTimes->{{3.6750121656099477`*^9, 3.6750121679655523`*^9}, {
  3.675016408843995*^9, 3.67501641190117*^9}}],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
oWnEZNSk0FyFK8bVz0elH/3WgoHI0JYfa79b+QhRhkhEhkH90AanIYpMYdKx
dbPGONn0turT395lzPQlm49czVU9uKg1el7Lw0apksgEP/3cRnfUEWjpIjM7
yVRkHhQn7x3WEv/CfGKQ6hcoJAk6fBuketg0m7hfMPtdyTQvAmp2s9HlkJ+w
tg/+bbvJJ8RDIIK8S6t6yz+7iwoKZfImSNs32Ej2tuPHr+6FLjAtTPRBcVaE
72Ciy0UrMvTlx9bvVnEEcZSSyDCuH9rgNDSREWSFL3NAc/stu/Z3crbv27kN
qlKZWUcdo+e1PGyUqvgnmDjMWS5aH7nSZ77neJeeROu/jdPys7LjmYxFBm8G
xW1wIs5h5jhz9fbfQk6E/LZ7o9eUkZ4hmQoJLIZ8v2bHoWPHgvdu9ZkxyUcc
xkV/7RiMRkM68lbtDzkRGplK856MujcbXQ7zIuYSgy0WrvPX+23wnuHaxbgF
8WpIJw//87fyitEZl1t3tnWfv/qXgCNH/NfOcUKjTB1nHJe+cJJ/YWF3dESH
IZ6LF84c0w8/vPuUHwc0ZyAyDMqPpd/NVGQY1w9tcBqYyORH/YSXu7HdynDJ
nSEoSI44uO90mkSzdbwiRo9reRBslKrKBZKtzHsOmrRk9wXFV3TVEBm8cHJi
ts2wM5c9bzMLm+/DsikSmNsvlY5pFFzb62HZXHyg86EspQuI0Phmo8mhIDty
zYiO4o9bdB+xPPSvuM3OxGwSZu+fJnjAv+U/0cpU5lgL+5l74mUDS4C3XVwl
46xG3dxWhqYm+9szackwKD+2fjdDkWFcP7TBaVgiI3qpo9Xoo2S/19BXxDRI
qWpJcV5qQnTEmfCoKzfS8lRJsSjB2YiY+OQc5achP+tmTGRUvOpD2c8hP/uv
2AuX/sqTtOb4GfEXo+LTC6Tdb0Fh5l9xF8PDo+JTclVnEf2CiIvxqXmarf+i
LT+N0cmZ6euHNjgNTGQif0At3F4rLqlsp5CvuFC9gKSIfvWK0loe+nUf2tAg
pQoA2kAbnIYlMg9yz83tSnSCeZsvZCo9OMhXXKheQMKnX72i1NilX/ehDQ1T
qgCgBbTBaWAig3c2L/iKbm6szYA5ey5lKyqN6u4S2QIS2tUrZCJDs+5DUxqo
VAFAc2iD09BEBlF4M3iJawfxOOLgRUHXZUfUqEVGcQWOAkqrV0hFhmbdh6Y0
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
BY4T
     "], {{0, 252}, {375, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{186.11111111111114`, Automatic},
   ImageSizeRaw->{375, 252},
   PlotRange->{{0, 375}, {0, 252}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
JE4IO0icEAhf4FXQU1x83ZjJ5+1DT9O+uw65NTCtSiiRoKCn9opTiy3oiS9v
gHGnen7uwexvSUNP+U13PIoTKAxRsdagoOpddzqsQU9VUEFP6sjTpGk72Yq1
kN5l5vJIm2Xz+w0hnQ0vxhqXYRGKsK1O6iNxQthA4oRA+A6Nxgg5bVdUyFmy
JsbuTgNGHT97sRjSu9gsRReftmu/OOEotSK6sABGn+JqjpLc6XLpRo/ihBeJ
imWxdNGfF3zQkyG3kPvSG0Rv4b3Vw5BfBKVPda2Cnvj9P+a/+6Hm8lV7kW/e
wvrVU5IZs512ElMqeW++zfn7y6oTp/D6smWrkDgh7CBxQiB8ismEsZoVkAoU
ebpg4OhIuz4tXRtTXMSFaQj0TKUy+Pu9+g2qxAlgNMEGPZWzE5fEfkDSp5sV
O2DasqRVRnMXXeHvVdCT9IdQctDTqXNQbQlBT07XOCn3HrCe7cRpxx6KJ01l
/fYZQ2GR/Qha44QggsQJgegApBIt5NbAWZnMr2dftbvTqEnnEhLqIb2rywY9
7c6aciDnG6rOZg16UjbB+A8oZ4tWktwps/EKTMNGYaFK5yRrsYvgRdDTjTsk
dxJPmgbpXaZmlsVsdvVUneiLiazf/dFQWkY8qDp8FFxC9XME8SASJwQRJE4I
RMdg0Jvp9RIY/ykr4a3fkmR3J2vQ0/70qgqoFeOMxi4X9IRZsGXxfVYk9KdW
GjUGOUNYBKNA2YzrJHcCNgXpXcKuHPRkNsMGPZWU83t+QHQn9h/+pktJh9Kn
mjpB38FOxQmTy7n//A/3jf9iiocLzwwFhazf/EH89XRSzXaKE6ZWt60h5SBx
ogQkTghEh4FZg55UkMNHV66VD/3ilF2f5i29l5/HhmlYUy2Sy7pQmG1U7WFc
V+LqIzzX9gYzZuTABT3ReBnrkj4hutPy+L4VnGSYttagJ1MXDXoCmEViyKAn
+fow0tCTYstOmIb89/oIh41y6tWG4hLW7/4oHv8V+BqTSrmvvsX7d09MRX40
rz3ipLlwSTDgE4spIB6AReJECUicEIgORqUy1NLgpu2ymN/+eOvx/ixfnrlx
qzKYpu10JnUZP1mpb/uMVbUwa35U96uVWy+Vb5of9XatOA++rVjDBld3P+AD
H/SEP1VHKsT9WdwWa9BT4P+8fIQXQU/xSSR3EvQdYiitcN9Kfeq8+vxla9CT
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
XJz2Zc+4WbWLVC6Urg+NeWd35mRX2+wC3QJtD+bOxusDMzmUOxf3nLLWI1R2
lDpxo7DQUXjK2Amg1b2q/fYj0dUH27bkCRSxqtkx6KkriBPAYjCa6AyoFeN5
hZwXXiO6E/eN7vrcAih9qmuw6DtiHSASJ0pA4oRAIIiYzRirWQGpQBEn84nu
NH/Zvfw8NtS0Xa1YE4xBT7g4LYp9f0VCP1JZEmeNWrpYtsFVW6a8ElQIjell
b7I8vh8uOTwV3VUro1nHklR6FCdQKjjJy1rnZG56MLKGlwnjTuASRnOrO3sX
EacWPOiJL4AcPpLOX0QaelKfvwzVtkOCnpA4UQISJwQC4YhUoq2phloxHhVd
M/Gby3Z3+mzi2Ws3um7Qk/upOiAb86O6VwuzHF/SGBXrH3y6KWWkzvT4iTaj
2eBRnFqsd3ZMrGr2KE54uVCyljT0lN5wAcadGoWFKp2E+F66iDjhYGq1kVYL
o0Dam3dJ7iSZMQfSu0xMlk+DnpA4UQISJwQC4RS93gQZ9FRZLti4LZk49LR9
bxpk0BMjuIKe3IuTCTPszJi0IqGfTMcnvWRd1BTzLltRSzwIKU44GoOcISr2
KE6g5DbdIrnT6cJlkNN2AgUdD3rqauIEsJjMpqZmqGm7knL+ux8R3Yn9h7/p
M3Og9KmmDtP4KugJiRMlIHFCIBCuwDALnwcb9HT9VmX/kcft7vTt/JtZWVD7
s9TSRCplkAQ9eXyqTqLlLIvvsydrCnGlUyL9FGiV3XyTVNkrcQKYzAaurMaj
OOErycNTRhPdaXl830rOAxh3YorL9EZ1FxQnHLNIAhv0tHkbaehJuecn2BXj
QpEvBmOROFECEicEAuEehUJfWwM1bZeS0jhz3k27Ow394tSlq2WQ3hUcQU8w
AZgVgjRQ52bVLvzbBknRj9E9zpWudazprTi12BbkyDQ8j+KEl+vlW0lDT3E1
R+GGnvLPlazpmuIEsGh1kEFPuoQHrF8/TXQn4ZDhhpJyqGm7xibKg56QOFEC
EicEAuERa9ATAyroqapCsPtARp/hj6ft1oQllBRzYdo21Em02o6OBKQWzGIG
OpHJvO6+2h3afmAppbwkpV6yOnHwlrSxBrOTPXZxcVoa96FQzfSqGwJVE4w4
gVLIvA+0jehOB7JmwLjT8fwFKxMGmLHO/fNqMxYMM7E4kMNHToKe7sdCta2q
wZRUboWGxIkSglKcGhsbIyIivv/++zFjxoSEhEybNm3btm0JCQlm/+2uiGHY
3r1709PT/dWBIIPJZKalpZWXl7f/VEajMc0b1GrPu1EEJRaLRSRUQw4f3Y+u
GTP5vN2dwNepaQyYhrQqoULuRCGCDOBX+7NnLIp9f33yMFtmOMNpNVycHjSe
9/b8cp0QNEyoi4RcubQ/azrRnYBKlbDiPIrTivh+DFGx1qBo78fRabEGPVXS
YBRIdfgYOehp6SrYaTsun6qgJyROlBBk4iQQCObOnfvss892c8a77757+fJl
V20LCwvnzZs3evToYcOGjRs3bvfu3WVlZVR1LDY29he/+MUbb7zhR3mjnJyc
HGCnI0aMGDp06OzZsy9dumQyec6FBqJyAIK7d++6OQn46YAf6MSJE9v/LsRi
sdPfFlfQaLT2X7TzYg16qoMKeiosYM9deMfuToNGRx47kQ+5YpzDDoZpO/fg
bgOKPdPSkXaKUy7rrkIrpAsLYNwpruYoadrubtVej+KEfy1RsYLs6Uh4LAaD
qaERxn/0Ofncl/5JdCfem28bCoqhpu3q6RY9BfEdSJwoIZjEqa6u7r333rPf
4L788stNmzZt27Zt+fLl3bt3tx9funQp6e84uJXPmTPH6V1y2bJllKjOpEmT
fmHjypUr7T+b31EqlcAwHT+uwYMHNzU1uW+rVqth/AR8Ym5OQqE4SSSS5xyw
d8PxpZqamvZftFPjVdDTvkNZA0Y9XjH+3aI7JUVQ03Z1tWJ1MAY9EYkoCF0U
+76bCu0XJ+tJTLpmSQWMO1VwkpfGfUh0p/CU0a6CnojiBApbWu1mf5bgxhr0
xIMNepJM+YYc9HTqPFTbShomc57iDg8SJ0oIGnGSy+XvvvsufrMLDQ2l01ut
pQRqdOPGjZ49e+IV9uxpteXB+vXr8ePDhw+/ePFiTEzM4cOHP/roI/zg0aNH
29k3qVT629/+FhenXr16tfNsgcDkyZPxD2f69Ongg42Kilq7du3rr78Ojgwa
NEjj9llarVb7kVvwMy9cuNDNSSgUJ6d88cUX4Pz9+vXz0fmDAPigp8SkBuK0
3eivzl2/CRv0JBIGW9ATkWuVW1cnDnJTgRJxarEFPYmUTZDTdicLFpOGnvKa
bhErAJW6W7VvY/LwhTHvXirdYJ/UaxQWqvU+j3AMWDCV2lgNFfSkPn2e5E7i
SdMgvcvUzG7PtB0SJ0oIGnFaunQpfsPdunWrqzrApv71r3+BOs8//3x1dTV+
UCQSvfDCC+Dgpk2biJXB/f2TTz4Bx//3v/+185/uI0eOgCv+5z//wd0pNja2
PWfzO+np6fhHffLkSeLxmpoa3J0OHDjQ5pNHRESAM4BP3v1SIiROgYBeb6LX
S2D8p7SYt3BVFDHoKWznA0h3YjJk5iDdn6XDxAlHrZc1Cotg3Cmt4TzJnSLz
QxtsT+FtSP50cez/Wu8+3D08JWRL6pg6297BQgUDc9ifpYtgMZlMDCaM/xgK
ivk9PyC6E+fvL+vTMqH0qabeotW2rYdInCghOMRJIBCA3wfwRsaNG+decqKi
ovCb/saNG/Ejd+/eBd++8sorSiV5l+orV67glYFctad7QL1WrFhx5swZXJwG
DhzYnrP5nUWLFoHPpE+fPo4vrVy5Erz03nvvte3MQMmee+65V199tbGx0X1N
V+IklUprbYjF4rb1AQeJEyQYZuFylJAKdOFyKdGdvp1/My+XBdOwhiZSBkvQ
U6UgPY1xCS/7s2csiett/xYUknJQK04t1gROI1taDeNONbxM4EhEQVqTOGRD
0qckoSKWMlYC3rZZXG4wtfHO3tmxTtuJxMYKqOEj+cp1pKEn1c+RUO5UUQ2u
0ob/0SNxooTgEKdLly7hhnPzJjlBjgSGYf/9739Bzb59++JHdu7ciS/Ocawc
GxuLnxaIWZv7VllZCWSJRqOB/4sAPcPdKSvLyZ4LTuHxeImJiffu3XP0On/x
/vvvE82TiP0TY7PZ3p4WOM9//vMf0PbChQseKzsVJzqd3qNHD3B8yJAhSJw6
EoVcBzltl5xM/3Lm4/1Zho07ffFKKaR38XmqIFgxfjR/vhv3MGGtlglRLk4t
tju7RM2GnLa7WrbZTW9JZUfaBHtDuiBfoW37P5udHYtWa6yph1EgbVQcyZ1E
IeNhp+0YTAvE8zhEkDhRQnCI06xZs/AJOIXC84Ox9kk9fBlzc3NzTk5OVVWV
Y82FCxeCasAT2tM3cLmPPvoI//rQoUO4OI0ePdpjw9TU1PHjxz/99NNDhw6d
N28e8Ir2dINC8OlOp/NxoM/4Z5uUlOTtaRcvXgwaTpgwAaayozjV19fjjwAM
GzZMJpN5e3USSJy8xWg0M+hQ+7OUl/K37ErpNyICd6c+w63TduVlfJi2jQ1S
vd67O0WgYTTrdSa1q+JQmXpxwtEalE2iUhh3ctyfxU3Ja7pNbMuT1xMD0rsU
FvDOm9lQ03ZllcKhn7XSp18/rYtPgtKn6lpM5UXQExInSuhIceJyufv371+2
bNmqVavOnDmj8ubH7R78jhkSEgJT+datW/jNPTk52VUd0Leff/4Zn/4jreTx
CpPJ9Oyzz0ZERODfarVacE4gTk888URFRYWbhrt27cL9Si5v72MUlIOPOK1e
vdrxpcuXL+OfbWRkpFfnzM/PB61efvllJhMq6I8kTrW1tfjvwKhRoygZmkPi
1AYsmEUogA16unm7asSEM/ahp6++vZKY1ADTkFYtlEmDP+gJx3fi1GILOefJ
62DcqZ6fs+nBCI/WND+q+4mCRaS2TaISnZHKCMfOBSaVGyuh9mdRHYkgDT3J
N4RDDj2ZeQLIaTskTpTQMeKkUChmz54NFAL81J5//nn8ce9XXnll69atlDwy
89JLL4ETzpw5E6ZyQkICfnO/f/++46tvv/02uAXjy8XBnydOnGhPx+7evfvk
k08Sx8HAW8YHnaZMmeKqFbACUKFnz54wSQjDhw9/AYLNmze3540QAeqLr5nH
HB7umDRpEv7ZHjlyBP6E4Hdg6NChoNWaNWsgmxDFiUaj4XN8Y8eOpSqdEolT
m1GrDXU1UEFPRYWcOaG37e7UZ/ixC5dhp+04bKXZHPwrkH0qTjgKrYAuyPfo
TverD8CMOP2UPdNpc6maE8RPR7rHojeY6ukw/qPPymX/6TmiO/Hf6W0oLoOa
tmtotBg8x0EgcaKEDhAnoA3gtugqlHLRokXt/wuFm9jcuXNhKtvX4Th9ug0f
ZbID9CA3N7fNHQP3X5IgyeXyZ555BnjRr371K6dLoFksFngJVIiJiYG5xJAh
Q5x+sCTWr1/f5ndBAh8dAqxdu1avf7hk12g04jKD41WGA/5LCOyXzydvGe8K
uzhVVlb++9//7maL7dK29UkTR5A4tQeTCWMx5ZAKdOhoDnF/lsWro4vhgp6s
+7Nogny/jw4QJ4DBpGGKy6kQp+77Mqe6OgNHSuvSQU9cHuTwkeSbuaShJ82N
O1Btq2iY3MNiFSROlNAB4jRt2jRX1oTz888/t/MSr732WjdbphBM5YsXL+LX
dboBisRGQUEBuDXjD9fDPOTlFKFQ+H//93+Oq31WrlyJDzr98MMPjq3WrVsH
Xnr66aeBOMUSsCsKCTqdXgWBGyfRaDQlcNj7AJQJ/wzfeOONqVOngk/+zTff
BN/27t0b/1mcPw/7T73ZbAatQJMlS5ZANml5JE6g4VtvvYX3ZNasWfDNPYLE
qf1IxBpaFZQ73blXHfLVOeL+LDGxtVDTdlVCsUgTxEMZHSNOLdYtYDChotGN
OGU2XoERp9OFy9ycpFFYpNa3d/1h5wVTKo3VNTAKpI48TXIn6fxFsNN2bI6b
oCckTpTga3FqamoijeE40rNnT8dJH68AN7hu0E/BA13pZkuE9riEuLi4GO+h
0yfIPLJ///5XXnnF8V914DC/+93vgB2BPx195sUXXwQvge79h8D777/fzo/I
DcCIIIasrDQ0NNhbHT582B4oijN+/HhgmPjXOTk5kFdPTk7Gm9TV1cH3mTi6
hXsXAHKMDgYkTpSg05oa6qCCnooKOUvXxtjdqd+IiL0HMyHHrJqZclOQBj11
mDjhqHSSRmGhK+3ZmDzcozsVMu97nPUTKZssXTboyWgy0RlQK8bzi3hv9WgV
9PTi6+AglD7V1lt0ztcBInGiBFyc1DYonOmws23bNo/i1M3tOm0YwsPD8fPY
Yy3dgK8iHjNmDP6tRCIRi8U6F79mI0aMAJXBn23o1TvvvLNhwwanL82bNw8f
dFq5ciXxOLCjJ554ooN3ZikvL38VDtLIm9lszsjIuHHjxt27d/Go9tzcXPwH
Ab+m/bvvvsOly6s+28Xp+++/1+v1+Hzl22+/DfNYJQxInKjCbMY4bNj9Wc5e
KB76xSm7Ps0JvZ2fBxv0pFYF4TRQB4sTwGTWs6VVToUnuvqge2taGPNuNTcV
ZrV5s6SiSwc9CUWQw0eyZavJQU/HT0O1rajGJFL7f9vVj0DiRAm4OP3DBvif
O+XnB/c14s5frrh48WJ7rmIfGtqxY4f7mikpKXhN+/zgiy++CL7du3ev0/oz
Z87sZguybkOXgAK5muNjMBi//vWvgSA988wzRMcwmUy4UIGfC+SFLly4sBeC
1NRUb99CG9iyZUs328IwyPoqlQr84oEm586d8+pCuDgNHToUH4gDnzbu517N
97kBiRO1yGSwQU+ZGU1T516zu9Pw8WfuRdEgvUvAVwXZtF3Hi1MLHvSkYjkV
nvCUMR4HndIbLsC4E11YoNAK29A9CjlRtCSycJHTElt3zKeXxjQaI60ORoG0
92PJ+7NMmGwoq4RaMd7UbDGb8X9mcbp1/vShQMDXU3Xz5s2DEaezZ8+25yrg
bzq+UR34xSDtUkfEaDQOGjSom+2BPg6Hgx/Ej8yZM8dpk759+4JXZ8yY4W2X
FixY4DRU087UqVNxR9q2bRvxeK9evcBBe4KBRzp+cfjChQt79uy5bNkyx5fw
DzM8PBzyVPb1ZkKhd/+EOuY4rVixAj9VZmamV6dyChInyjHoTY0NUEFPleWC
rbtT7e7Ud0TE2rDECrigJwZdajRSsCt3gOCVOFUJM7amfYGXsJSQH6N7rEsa
aj+Swbzq1aW1BgVDVEyynTuVe7amfr4yoT/RlH6M6klyp+P5C2DcCRS+vAHD
/Pbz2pX51Y6MiXhZGPPeyoQB9m+vVbrcuosqgNKYmCyoabuySn7vAUR3Yj/T
TZeQDDX0RKvFCJuHohEnSvC1OO3fvx9mqg4+SdsVcXFx+Kl69+7tdLWMVqud
Pn06XocYMrB3715w5MUXX2QwGKQmN2/exOuDk9sPlpSU5OTkgD/ddMZgMPz1
r3/t0aPHV67p378/Lk7g8yFOkoJPDByE3yBv9erVkyCAX63tke3bt4PP5M03
3yTNx+G/S8CT8WRRHAzDcmw4FdrPP/+8my3o29s+OIqTQqHAJ2HBL0D7J52R
OPkC8Cst4Ksgh4+uXi//ZOxJuz5Nnn01M6MJcsW4Qt6Jg55EmuaND0bgZUPy
cOA/QFTsR65WbHHVsFFaeqp4uatSwkv0tidmzMiV1TraTj0/J6H2eHjK6EUx
792u3F3FSanj52xPG090pyWxH1Swk2DcqUlcGghBT+sffHqxfGPHXxeTSI0V
UEFPivAdpKEnxaatsCvG+UL8hoLEiRJ8LU58Pt/9iBP4OdqDtdtJWFiY/bTj
xo27e/cu0Jvq6uq8vLydO3fiUT/dbAEIxFZsNvvVV18Fx3v16gWECnRYqVSW
l5dv2rQJ7zkwHGKe0nvvvdfN00L0Gzdu/MIbDh8+bG8LpAt3KvtkIviFZ7FY
lHxElMBkMnEZnjp1Kr64XafTRUZGvvzyy+AgUBpiZZVKhX/s8+fPJ50H6A3+
uCV8fJMdp1uu2EW3/aFVSJx8h0plqKVBTdtlZzOnf3+duL3d6XNFkN7F5XTW
oCe5Tni+bJ2rktZ0uYP7I9PwGpwFPR3PX7Aivh/xyLXyLaShp+jqg3BDT/ky
Dde/06z+EieARac31jXA+I/uQRrryT+1CnrqPcBQUg41bUdnWIxGJE6U0AFx
BPjGJW64dOkSVdc6d+4cPo3rlBdeeIGoKHZiYmJc2R24dZK2XYMRp1GjRnkl
TsDcTIQth0QiEbhxg+MjRoz45ptvBg4c6DRyyo9ERETgnw/43Hr27ImbZzdb
JgAptNONOBUUFOAvedxh0BFXm/xOmDABHAc+Vlpa2mIbjnupNcDu3nzzzRkz
Zrif0esi4qRS66/frbCXC9dKiN+WlHN9dF2TCWM0yiCn7TZvT+43MsLuTqEr
o0qLeTBtG+okOl0X3e+DWvTWoKcyj+IESiHz/o/RPYjutC9rGuS0HVdWY8b8
FszlR3FqsabuY2YOF3L4SDR2ImnoSXsvBqptVQ0SJ0roAHEyGAxfffWVK5nZ
tWsXtZfj8/ngrvrxxx/jq7672fawGzJkSFhYGI/Hc9WqpqZmw4YN+FwP3gTc
lC9evOi4L8y+fftCQkLcL6Rvamqie4nRSP4Xo6ys7MKFC1FRUY4vBQIpKSmz
Z89+5ZVXutmGDUePHu10hT/46a+z4WhHxcXF+EvwuZfEq4OGjkvjGAwGfk68
M/i+hEOHDp32CPCraI8vcBodj3PmzBnw++BUs4MJJktGHM8hlb1HKFgt5gax
WAM5fHT3Pq3/yOOPtwb+4hQ4AjltJ5V20ae3qAWzmAUKukdxsk3k5R7IntmG
mAJQGKJijYGaB2O9xb/ihIPJFcBtYBRIdfwUyZ1kS1bCNETiRAkds+UKuHtu
3rwZj0a006tXr3auCXePyWQSCoUCgcAAEURPbOVxhcz27duHDx/evt4FD+Dj
Mnm5Q3eHgYvTrVu3SMcPHjzocdiwK2CxWLQ6I15Wh8fjWtLAEONHOmCVtVZj
hAx6Ki7iLlhxn+h1O/enQ3oXm6XopNN2gYZSJ6ILC9yLE16S6k6Q3OlqWRjk
0JNY1dzx03aBIE4Ai8FoaoAKetLnFnBefJ3oTtw3uhvyCpE4dQAducmvRqO5
cePGgQMHwH/kk5KSfJfo6FNUKtVHH320b98+f3cE4RlX4gR+9/AVWV5Jtb/g
8pUSmW+HTW7erwQqcvRU3siJZ2fMu2EwtEuZ5AodiwMb5AWUBn5/lr0HM/uN
eDxtN27axbxcqKCn+lpx0O/P0jEYzXqWpMKjOIFSxUlZmTCA6E6bHoys42fD
uBNLWgUu1JHvK0DEqQUPeuILIKftpD8uIboT79/vqE+dR+LkazpSnIKD4cOH
Dxo0iKqgRYRPcSVOwOFfeOGFN954o1PY+4SZl7bt92EMF61OOGDU8TVbEsDX
RWWcviMidhxIa88JI88VDBod6VUTOXTQ041blcPHn2nbinGhQB1kQU9+wWLB
xCqmR3HCy+nCZaShpwz6JRh3ahQWqnTiDntTgSNOOJhabayuhXEnzZUbDxeK
v/vRw6CnSdOQOPkUJE7ekpCQEJiLjhCOOBUnvV6Phz5RmG3lU3wqTkqV/otp
F7/85rJa83Dw7czlYmAjsUm1bT5nG8SpxfpspqmhHmrarrCA/d2iO0R3WrIm
prJcANPWGvTUvvE0BM7Fsg0w4gRKOv0SyZ1OFiyGnLYTKBqxDtmfZVl8n2MF
CzrgQvBYTCYTgwnjTobiMtGoL1oFPf3pOX1KBhInH4HECRHE4OLUu3fvEY8Y
MmTIP//5T3AwNDQ0YJdmkfCdOFkslmUbYoHk1DeKiQeXrIsZHHKisUnattO2
TZxarFOoFi5HCTl8dPJsYf/PHq8Y/3Tc6QcP6DANa2kihaJDp4GCkquVW9ck
DeZIaTD+U8vL2vRgJNGd1iZ9TOOmw7Rlisv0Jo3nDrWDBkmRNckzuofGCDvF
3DFYp+3EEsigJ/nKdeSgp+27kTj5AiROiCAGF6eePXv2f0Tfvn3xRK+XX375
yJEj/u4gFL4Tp/PXSoByRMXXkI7LFbqxUy9MmnVFq2vL4GqbxQlHqdBDBj0l
JTcAXyIOPR06lgPpXXyeCnhamzuJsInTEHBnl2m4ToOeHMv18q2koaeU+rNw
Q0/5co3Xz95CotRLVicOnh/VHfTn5/wfAnAy16LTGWvrYdxJGxXH+vXTRHcS
DBpG3J8FiRMlIHFCBDGu1jjl5ub+97//BS8lJnodp9zxjJ9xcVVYPJ0hobZE
J9T0HRGxZU+K04tW0gT9Pzu+ZF1MG86862D6wFHH2/OWjUYzgw61P0tJMXfJ
mhiiO3317ZWiQg5MW3qDVK/vHKOOAQguTvjXOqOqSVQCo0AFzHskdzqSOxdy
2o4rqzVjbfl5XakIv1W9x+lLmAU7mDtrcez/+CpGLusO6E98gxPnp0uK92RN
kWg5bbg6JVgwzMTiQE3blZQLh37WaujpN8/o4pOQOFEIEidEEONKnACXLl3q
5nqPwoBi7NQLbtKW2lk0WpdjSqGrotp82gGftUucWrzcnyXiZD6pA7fuVME0
pFUJZSjoqU0QxanFuj+LiS+vh1SgfZlTW+12F92jhBUL05AhKtYalN52dW/W
1J/zf3D6UlTtYWvMFOdhwvCFsvWgM/WSQlK1cv4DUI2ncrkRaseAyeTGShqM
PikPHCFN28nXhyFxogokToggxo04ZWVlgZfGjh3b8b3ylvEzLi5cHZWVx6S2
HDudZ40gOJ3n9KLNbPnHn5+c/sP1jJwmb8+8YXtSO0ec7KiU+vpaMYwCpaY2
jp9+iehOKzfGV1VArRhHQU9tgCROOAqtwB705L7E0I6Qhp5uV+6C9C6Jmu3V
hJorcaoWZs2P6k7c/s9o1m9LH7c6cZBS3+qBvgARJ4BFbzDVN8K4kz4rl/O3
l1rtz/J+HyROlIDECRHEuBEnfHPnVatWdXyvvMV3a5wOHMsGgpGdzyQd1+lN
U767FvL1OWmb8qPaucaJBFCaZrigJ6BJC1e2GiUbHHIiO5sJ09Ya9OR68A3h
iFNxAhhM2mZb0JPHUsFJXhr3IdGdtqeNr+VlwbRlS6tNZtgQNqfiJNMJViT0
25kxyYS1Oo9A3bQk7oOfcr4hPs0XOOLUgq8Y5/Fh3AkU6Zx5RHf6+9/+5u/u
BwNInBBBDC5O169fNxDg8Xg//fTTCy+88Pzzz1dVVfm7j57xnTiZzNicRbc/
HX+aL2i1tdCWvSn9RkSUVrRxrzpqxQlHItbQqqGm7c5eLCZN2505Xww55ScW
aQJwbXBg4kqcWmxBT0JlE+Tw0YmCRaShp2zGdZiGjcIitR7qwU9HcTJjJnBw
WXwfscbJsqVibjzoxv2ag/YjASVOOJhSZayG2p9Fc+3WY3FCt3sqQOKECGJw
cXLKq6++CoTK3x2Ewqc5TgKhaviEM7NCb5lMD9ONouJrgGycv1bS5nP6Qpxa
bEFP9XD7s+TnsT+beJboTt8vvgvpTk0MmcmEpu0840accIDVALeBUaAH9adJ
7nS2aCWkdwmVDIunoKc9mZOXxn24K3OSvaxKHAiuUsF3+dfqfNk6UGFzymd4
/U0pIwNNnAAWo8nU2AS5YpzX/T0kTlSBxAkRxJw/f36WA6GhoefOnXPcvjlg
8XVyeE5Bc5/hx/b9bN3St75RDJxn2YbY9gy8+EicWqzPFlnYLAWkAq0JSyAN
PaWmMWAa1taIVKpOsBePf/EoTi3WIU09W1oN4z/V3LS1SR8T3Wld0lAaLwOm
bbOkwmByN6e8J3PKyoSBEQUL7CU8dQy4RA7rtqsmxwsXggr7s2fg9Xdnfh2A
4tSCT9sJRZDTdorwHUicKAGJEwIR4HB5Pt+rLuKM9am0+3E0IGlfTLuoVLUr
H1Ku0DWzfRgkqFDo4fdnIbnTtj2pkN7F56ksKOjJNTDi1GK7s0vUbMjho3PF
q9sW9EQXFCi0Ald9cJyqA706VjB/Ycx7bIWThPz0pivWSzMu2I8E4FQdEYtW
a6TVwbgTWhxOCUicEAgEhlnmL7+HqwWtTujv7njGaDA3QgY9FXFHTTpHdKfx
0y+Vl/Fh2oJLtHO/4yAGUpxwtAYlAy7oKZdxk+ROx/MXQHoXX16PYU5+Xk4X
h2uMivXJwzaljNSZ1MTjTHllaMw7J4oWEw8GuDgBLGaziclC4tQxIHFCIBAA
oUgFpGJVWLy/OwKLLehJDTl8tGVXCmno6cq1cpiGNdUiuVzn7/caiHglTi3W
9dhGrqwWxn/q+Nm70icS3WlJ7Afl7ESYtk2iUp2RPAvvKo6AKa8iOZIrmwp8
ccLBpDL3+7MgcaIEJE4IRJeFy1dO+e4aXibPvdp3+LGQr8/Zj5y7UuzvDnpG
rTJA7s8Sn1BPcqfFq6MhvYvDVqL9WUh4K04tNteVa/h0uP1ZbpRvIw09xdAO
ww095UvVXOIiPTcBmKRZOXz+jqOsI1XrLOLUYt2fRW+soyNx8ilInBCILotY
otm4I8lViUl0svwjADGZsCaGDMZ/KssFPyy5S3SnIWNgg54a6iQ6Hdqf5TFt
ECccvVHNFJfBKFApKz40phfRnXZnfFXPz4Vpy5XVmLGHwVxRtYcTGk666s+p
4uULot9hyP6fvfMAayLpH/+1t7/vvb/3ff+8dj097/Usd3p66in2LmK/s/fe
e9ezYu+eDWwoYgHLWZAiCCpKkd4hhF5DQhLSG/y/ZM7cukk2A1kI4nyefXzM
7szs7CZkPpmZ/U4spDE3YzxblHgxco1QYXYaVZ2iXKfT5hcQcbKGiIiI06dP
nzp1KiAgQKmkz/kk4kQgEOoB/BJZUiJW95Hx+iyu17ECPSUn8vh8EujpN6ot
ThWVK8Rpi8VczJlL58OW0NZniczxwsmYWRIlU1p+SEGpke0KckSFu8Vuq94V
1UF0YrE6kR7oiYiTRTQazaxZs8CLmjZt2qJFC/hP586dudx3OhuJOBEIhPqB
TKZOxwv0FPQ8036YMy3QE+b6LDnZIhLoqcI6cUKUKfgZvAgcBfJJOUcbtrsb
vx/Tu/iSbIuBngrKOJUzqXy6qrVWPU9qICL/yb2kI+Y2lbaWZs2Vq9UabiYR
pypx8eJFkKLjx4+jjqZHjx41bNhw7ty51DREnAgEQr1Bp8UN9ASaBLJE63ry
epKCkzcthS+TfuiBnqwXp4rKteEUuYIEHP9JzA/c8rQ/1Z2cgkZjrs8Cp1Br
LLjKBr9eFyPXWHk5Bm7E7Vzv2wNtq550Xub1jeElbDK1mK0TWaQy0FMRj4gT
Po6Ojr1796bu+fHHH9u3b0/dQ8SJQCDUM4SlimS8Ybtr7tFImXoM/c2dlm94
hDljnFcs/ZCH7VgRpwp9y86XZGN2H7lGbqB1Pb3KuI2TMYMXUabgM1Tj52dD
3ON2WH85xjxIPr7Gp2tNlIyPTipVJ6cSccLhzJkzN27coO7p379/z549qXuI
OBEIhPcRrVanMbPBIZVKm5GOFegpNrpwxMRrk+bepnY9xcYU4uTNzBCq1R9o
oCe2xAkhU4kzS6JwFOh1hgfNncCmML2rWMzVlZt+v2pUnFZ7d6mJkqtEZaCn
rBwiTvgkJSW9fv169erV4Ej377/zyAARJwKB8D4yZvp12kCbYZs491aFviuj
IL8Ms/vI+VI4bXm7K9cicTKmJJWIRexMjHm/YFecAI1OnS9MwfGftKIQp6DR
VHfa4NszMT8QJ282P1aplhmfvebE6UTI7KWPO6i0NRv8HxMiTvj07dsXLWza
v3//lJQU6iEiTgQC4X3koXfyjbuxaPtx1g2QJcNLL7/fAymUYa/PYhzoaep8
D0zvAkP70AI9sS5OFXrXFUoL0vECPd1POETrevJLdcHregoXyYpop64hceII
In7rFoveyHrh1YCIk0QiuWSGx48fU1PyeDwul+vu7t6mTZsOHTpQlzetl+JU
UFDg5ua2Zs2aSZMmTZw4ccGCBcePH3/58uWHPCHhQyYuLi4yMlIkYmH1NPho
RWLD4XCsPyMBhyXrH67a4mXuqEqlzcRbnyUhrnjS3Nt9HC9Q9SkyIh8nL5cj
UCo/oEBPNSFOCIVakoW3Psub7AdLHrenutMvIXMxh+0KhKla3e/vF444ZQnj
qhTKqUwp2Py0356gUT4cZ6jby2wPi1mkKmFGaaxGV1OPHhBxysrKsjPD8OHD
TWZxcXGBow8fPjTsqWfiVFpaunr16saNG5u8LT/88MODBw/M5QW9PHHixLRp
0wYPHuzg4LBw4UJfX1+Nhp1vQrVa/f/+3//79ttvWSmtrvHo0aO5c+cGBgaa
SyAUCsFdp06dOmrUqB9//HH79u3Pnz/XaqswOaSsrMzZ2RlMeOTIkVOmTDl5
8mRubi5m3q+//hrefR8fH/zTmWPv3r3m/uiMGTdunPVnJODALE4V+q4MXjHu
+iyublH2w98JVnDq3GvMYTthaZ0YkakFak6cKioXT9QWiTg4/sMpCj3xehYt
0FNMri9O3sySKLnqtwfccMRpxZOOXmlncS+hXHcydM4an67F0ix46RKxcsWT
TjmiJOZcEfnecAl8WT7mWaoKEacKfaQmk0CTlJOTA1/d+/bto6Z/+vQp7Lx9
+7ZhT30Sp8zMzO7duxuarREjRmzYsGHr1q1Lly796quvDPu3bTMR4uz+/fvN
mzc3bvu+//57KNb6ut27d+8jPV5eTF/v7yngmXCvLl0yHZsXZPWLL74wvrcg
qIWFhTjlwyfWuIQWLVq4u7vjZCfiVO+xKE4ImVTNSeXjKNCLF1m9hruAMvUe
4YLcadKcW5jelZcr1mrrf6CnGhUnhFjO4xa/wVEg7+QztGG7XxOOYHY9CSS5
4NWsi9Pj1NNQjciC37525GrJjmfDtj8bKleXMeQi4sRMfn5+aGhoSUkJc7Lk
5GRfX1/4Lc/nMz1KaQx8Ejp27Dho0CDq+BSaH56RkWHYU2/ESSKRdOvWDTVY
8+bNi4+Ppx6Vy+Vubm7t2rVDCU6dOkU9+urVK/g4wf6WLVseOnTo0aNH0FLP
mDEDJba3t1corI1XNnLkSCROvXr1srKougY4J7pRJsUpOjq6YcOGcLR169ZO
Tk537ty5cuXK2LFjURZHR0eL5YeEhDRo0AASt2/f/sCBA6CgZ86c6d27N+yB
d83f399iCSyKE/wkUb5LbGys4fJph9RqtfVnJOAwe9ndBat/xUkJSpOTJcIc
tpu/4v6E2beoXU8+vmk4eUHP5LJ6/u7XgjgBKo08RxCP4z/x+QHrfXtS3enQ
iwmY67PklSb+HDCYRXFK4r1a+rg93CLqzlxx8oonnZzfLGfISMSJmQULFsCX
7a1bt8wlCAgI6Nq1K/UH7MSJE6s0awLaF8j1448/enp63r17d/78+fBy0aJF
1DT1Rpy2bNmC7pLJDiVEamoqNN+QpkmTJmlpvy/jiDpMvv/+e5qdOjs7ozKp
fXTVoKio6LPPPvvb3/6G3Only5fWlFYXEIvFQUFBV69enTRpEnJOc+I0efJk
OAROC1mo+3ft2oVyxcXFMZ9r4MCBkKxnz56lpaWGnRqNZvbs2bC/U6dOFodT
WRQnYxITE9GFwN2oifIJFpHKVP1GXRww+pJCgeUq8FuyVCDHDPR079dE2ozx
bXueYnU9JfJKePU50FPtiFNF5ful45VlYnYfOYcvo3U9veTewMm4+Wnfq9Gb
mGuCKU5CRdEGP/uDLycaT1UKzvaEKvlzXc3lJeLEQEZGRqNGjRjEycPDA7VH
TZs2hYajX79+6GWbNm2g9cc/0S+//NK5c2f0xd6lS5dDhw7RfgXXD3EqKSlB
nRKOjo46HVMnuaF7ZPfu3WgPNOhoz82bN2mJtVpt+/btkXxaU70jR460bNkS
3gskTuBp1pRWF7hz547xyJSxOMGHDQ2AGptnWVkZessuXrzIcCIul4sKN9Ye
wyFvb2/m2poTJxDaPD3MnxlmiDjZnK17nyKl2XkwAD+XQqHhcrDWZwkNyek3
8iL4ksGdhoy7khCHtT5LdqawPq3PUqbk82V5aLsavXnT0z6Gl7DV6KmlSmEG
LxJHgYLSr9Hc6VbsLhxxOhe2GAyNYX2W5V7fXovZmsZ/w7CllIQ6BY1e5/uD
QG5aflyjNy3z+iYo86bJ7GiAj4gTDfiK9vX17dOnD/qyNSlO+fn50M7a6Wfp
GJaWCwkJ+f777+30IQWq9Cum8gFPPSaP1g9xgnYZs2sIXAjkE1LCW4D2BAUF
obzFxSYel5g6dSrqMLGmemBfO3fulMvl8KFF7hQbG2tNgTYnIiJixVuWLl1q
TpxA8tEhkz2l8KMADrm4uDCcCC0b1KRJE+P1qQHUJcvQx4gwKU6oZGDv3r3m
MuJAxMkaBKWys5dCc/Kq/8Cjx6/xYDJ3HybcuhcH//nVy8LkWyqxCYWHT76I
iynCUaCzF8LGz7xB7XoKCsrAyZiaUiKR1JP1Wc6FL6U5CXWjPqRWE2i0qrzS
JBx3Si58udV/ALVu2/wHphQGWxQn+E8OP06lMT3Df7nXNwyXT90YFgsWK0ss
ZifiZAB+F3fv3h2aAOqPdJPitHXrVjjUqlUr2sjRixcvMH9i41M/xAmNQjZs
2NCcH1JZuXIluo3osSy4qyCojo6OJh/yGjZsGKTs169ftesWHh7+8ccfoxnm
+/btQ+I0efJknLwgHqtWrerSpcv//vc/hmfWbItUKjUnThKJxF+PSkVvOF69
eoVyvXnzhqHw48ePo45Wk0dRgDKL/YHG4mQYhD127BhzXosQcbIGTgYfDOR1
eHb1sickF/dycNm+/7d5bpt2+/YZcSE13cLEUQN3HibA2YuKJJiBnoyH7fYd
CcKcMV5UKKkHgZ7SBZER+d7mtloYl4RTCKR5mMN27tE/04TkGcfVojjBxi1+
I5bzjM++3Ovb67HbM0pjGbZ0QfT+Fz+u8enGk5r+VF+MXAPlvM65bzL7k7Tz
RJyoXLlyxXh0w1icdDodmsO8efNm40I6deoEh9auXctWrWpTnLR8vuTUGeG6
TaJN22TXb5Sb6kOoHmhADWemcQVlmCkgwELHvmHe74EDB6pdt8WLFw8YMAD9
XyQS/fOf/wRx+vTTT9PT0xlyicViuBxIBpoXHBwMBlJnJ0swiJM5QCbR84/D
hw9nvq4LFy5AssaNGxvPz4eM6H0HsWQ+HU2czp49iyoM/8GsMANEnKzBGnES
iRVjpl2fOPeW/O3UJqlU9eOsG7BJ8VbgReIkk6vVKm0GXqAn8IZRU9xo+oTZ
Z5WRXqpSfqDrs7CLvHJ9FqxAT2FZ92judD5siUVxQluRiKPTvfN+Yc5xEitL
Nj3ts+/FOLWW/jkMynSHOjzPvGEyYwWZ42SERqORvsUQgslYnKA9RYdoa6Mg
0ITYQYMGsVWr2hEnnVQqmLso9w//yP3oz7mf/q1y++jPef9qJN5/iJXy0aDP
rFmzcBL7+vqiO0wLE0ojJSWlY8eOdvrH3gsKCqpXMaVS+a9//cvNzc2wB3wY
dTotXLjQXC6wph9++AHS4ExKHzt27FcY0AJTsAi+OMG1d+vWrW3btij99OnT
LfYQpqWlmetlff36NTpEW7faGKo4nTp1qqqaxwwRJ2uotjiBNq/Z9qTfyIsZ
WaXU/Wnp/D4jLmzc5YtTiEGcUIHFRRLM7qPDJ15CRjiRwZ0ePU7GyZiSVCIS
WvuILgHQ6jSFojQcd0orCjn0YgLVndZ4d43J9dF3SW27Hr0Vbau9v9/1zMHw
8nHSSUiQVRKtUP8eLxr/qbo0fvjSxx1uxO2k7swSxi336ng5ah1DRiJODBQX
F5sTJ/h6R4eSkkwM1js5Odnpp3yw9aRzLYgTWFNxrwG5H/+l0pqMttIVLPSe
oWnGCxYswElsuMPmRjzh3p44cQLNagZrstgxxQC8v59//rlc/vuIObz1f/nL
X0CK/vSnP5nzMQcHB0gwevRonFMMGDDAuCfTGIsTgaoNvjihEVUDX3zxBY69
DB48GBJ37do1O/v35hWECtwSlfPNN98wl2AQJzTwB18dmAGgcCDiZA3VFifX
m1GQ0dvfxJMyv3olwaGbdy1PI6SKE0IqUaWlYAV68vXjTF3gQe132rU/ANO7
8vPEOm0d7UB+vxDJirh467N4xu01CvR0eLnXt8u8vkEbeA5shpeHX04y5BVK
C1DHeJXiOKFo4WF5v4WblqlF2wIG7QocodBIGXIRcWKAQZwM4wjG00IANzc3
dLSoiL7UTvVA4nRXz8OHD+PeUtWwUQzwJ0w1Z01ok5w+Z+UpUHTEGTNm4CS+
ceMGuofPnz83Purv729okfv06WPlLO6hQ4eCLdB2Ll26FHU6rV+/3jgLCDM6
GhoainMKaLjDMcjJyTFXgkKhSMbD5GcSX5zgQ5WXlwe39MKFCz169EC5rl27
xpwL0oO+QkrQ4/Hjxy9btmzkyJEob79+/ez0AeGZS0DiBCKKcsFXB+a9xYGI
kzUgcdq02/eUy2v8bauTH+Taf8LE3y9i58EASLB9/1PmcpZtfEQTp4rKoQFd
Nnagp59m3aS60/AJV8PDcnHypqcJFIoPaH2WmkOpkeXw43DcKSrHa8WTTlR3
OvjiJ05RCE7efGGyRquqkjiBa50JX7TKu0tBGQf+fzZ88connfPLLAQUYlGc
8vPzUWseExNz9y31VZwOHjxop5/nbDKjp6cnysjQDlYJJE7N9LRs2bL/WxiW
JqkSmpyc3E+YrCn34z8XtPiflRN4UCvctWtXnMTQ8qJWmCaH2dnZKOgQ8NVX
X7m4uFRpTRBjQBI++eST169f0/ZnZWV99tlnoEb/+Mc/jMeqoHpInDq8CzTQ
1lSGgejoaJw+K8DkvKxqzHECZDIZClhqcYZShf4hPkdHR2pNWrVqBca1YcMG
O/2QH3N2JE5Ao0aN0LQo+MCYfEyvGhBxsgYkTgPHXB72kyv+1m/kRcjlF2i2
Dfr1SWWnU79RF5nL6T/qorE4VeibPH6JDLP76NyFMNqUp1secVh5E3kCvqzO
zl18j9CVa4vFGZgzxk++nk11p6WPO0TmPMbJmMmL5JSEi5W4jx5U6Bee2xYw
cGegw8OUk3Cu0FzLMVplanGOKEmrY2FE6cSJE6g179u3b7O32L3Pz4IxiNOB
Awfs9LNhTWY0PHcPjTIrNanpoTrxzj3M3U1oUzyt/nAYsHPnTnRbcIJcgYTY
Gc0kDw0NhbYYta3btm3DeTrPIvv27YMm2+QhaOuRHTk5OdEOdezYEfaPGzfu
8buwtWqeMfB75L94GIJjUGEQJ7VaLZfLTfZTAadPn0YZ4ZcRTj3hzb1586ab
m5uvry8a/USRS43vIQ0kTvA35e3tbYg+wdakLyJO1lC9oTqtVrd43QPQrbwC
sfHRzOxSMKJVW7wsOonxUB0VuVzNScMK9BT8MsuwMgva1m59guldOVmi+hTo
yYZIFPwMXgSOAvmlOtOG7e7E7cP0Lr4kmyHQkzGZwliLAQpqk/ra43Ts2DF0
yGRQPnd3d3SUraG0mhYnwbTZaCo48ya9ZDaSKg7h4eHothw9epQ5peEp+F9+
+cWwMywsDA0GgZlTI4pbyVdffWXucTxobT/++GMQJDgpdQYUAP4G+/Gf47t3
754zBiEhIdZejxkYxGnJkiXorprMaAhGWr3VAAUCAYoKS1202iRInFxdf/uM
oaD9YMisdOIRcbKGas9x4gtkDhOvzlxyR6V6p1tYoVBPmX975BQ3kdjyHGxm
carQG1perhjHfxLjixeveUB1px5Dz4NQ4eRNS+XL8B4DJDCj1ipzBQk4/pNY
ELTh3fVZdjwbxhzoybDBKdSaKszwPxUyd+njDlC3mrtwfOqrOBlmMUkkEuOM
hw8fttMPJLFVkzoiThIXqx5xgp+W33zzjZ1+vjF1CjENrVaL1u9o2rQpdawT
hQMaNGiQyXtePYKDgz/99FOGvpQxY8agTifawnnoeTr8udx1eXI4+rjCm2Ky
0wkdbdy4McNtj4qK6q7HeFKfh4cHKlwmkzHXkBaOAP76vvzySzv9KsNWjsZW
EHGyDmvCEUTG5vcc5nzg3ZlOuw89sx/uEpeItXi0RXFCCEsVmIGebtyOpQ3b
nbsQhtn1xCuuz+uz1Brl5Tq+JAez++hq5EZa19MLvPVZMngRZQrcMbsHycdX
e39fo1eNT30Vp/j4eHQoMjLSOCMKRzBq1Ci2alLjQ3W792IN1QUEWnkidCFA
r169TE4AU6vVqKvB7t0APiEhIXb6SWUpKSk4J0pOTo6NjYV/mZPNmzevS5cu
keY5f/48EqfmzZtTn5E8evQo7IQ2He+6KxduHokB88om1sAgTnCXzB0qKSlB
042ok+fh7yJWj8GFwJfQI5O0EhQKBVrnd+PGjRZraBwAE0oz/iRUDyJO1mBl
AMy3z9b91kv8wDsZXt64E4OZHVOcKirjimgy0rECPUVHFoyf8U6A8ekLPeNi
sQI9ZWYI1WoS6IkFZCpRJt76LMEZt2judCliDaZ3FYu5unLL7xeI0xofrPm3
tUB9FSeNRoMehD9+/LhxRjSfdsuWLWzVpKbFSZuXl/vJXxknh/+loFVbVn5q
bdq0Cd1VaGqnTZvm6+sLDXdGRkZcXNzJkydRUCZg4cKF1NOBqMDO1q1bbzDP
6dOnDenR2n/wL0NNoN3/xz/+8RE2hlGkCr1RNGrUCHb6+/tbf09qAebJ4egJ
uGbNmu3evTs7Oxs+3gKBAD72aLUUeKeokcNPnDhh/Kth+vTpdvrg4cHBwWgP
KO7YsWNhZ4cOHagr/5rDWJx0Ot2QIUNgJ/ytVW+g0AARJ2vIKxDPX3U/Ibma
zwhTozlxuPy+jhc27KzCUs6BwRlwdoUSa/agTldeVIgb6MnpUCCt6+mRVwpO
xpSkErG4TozpvO9odOp8YQqO/6QUBm8PGEJ1p/W+PePzA3DyZvNjlWoLPd5E
nNiCQZyAiRMnwqHu3bvTdAL1jQDh4eFs1QSJ01I9LPoYFf6UWRbCEZy/wMqJ
4HadO3eucePG5oar4DNz8OBB2l1Fq9ExM3ToUEN6HHG6du0avjUB7dq1o9YK
3t+///3vDRs29PDwSEtLu3379v79+1m5RTUBszjl5eWhcPfGwDvl6elJTWxS
nEC30DgsAEWhkON2+gFr4ycWTWJyrTrQadSXNW7cOHipUqnaGNG+fft+/fqd
OXNGJDK7mBoRJ9uC4oc7Tr7mMPHquBnuEmnNWoekTJmajDVs5+2TSnOnY7+8
wvSugvyyerA+i82pXKdVWpCOF+jpVuwuWteTd/IZvK6ncJGMaWjY5uKkUCiW
vsWunj5VV0ERpCVLlhgemk5NTUWL/Do4OLBYEyRON/WwFYKARrlczus/1Jw7
CdebWFnGGqCd3bVr1w8//IBmDiOgtd20aZPJvoWTJ0+usQSkMaR3cnIaNmwY
87K/Fy5cWFRFMjIyqCUUFRWtXLnyu+++g5ofPnxYLDbx9FAdAZQD3aVXr16Z
TMDj8U6dOmUI3GSnD0EA75HxcGdAQAAqijZRraCgYMeOHYY+w9atW8M3AH5E
DsgLZSYkJND2X7lyBZ2Ow+HAH5qdfsb42LeMGTNm8ODByMP79u1rvOYLorCw
EBVSc9PvCcwkJBcjM0lOM7G+GOuo1dqsDCGO/8TFFE2d/06QTHC86KgCnLxc
jkCJ1xVGYEaplmbxY3AUKCL7Ec2dzoQuxBy2KxCmUtc4jizwAV9C2+HgKcu9
OhpewqbS1mr0eLVaffMt9bjHCUABaoDevXuvXr16zpw5DRs2RE0GrYW1ktpZ
cgXcqXTJytw//1+lLH3yVyRR+f9tVnbspOXM1UUqlWbqYXHKN+LgwYP4c5AI
BuAd4fP51X474PcjCKRAILB+RrcxSJyMw0eA9aHxcZBh1k9KYIsfZ92YPM/y
+kRsAR/FEh5uoKfjZ17Rup7u3EvAyZicxBOWkvVZWECn0xaJ0nH8h1MUcvjl
ZKo7Lff6Nlq/PovFLbMkSq767Reue9yONT7d0Lba+/tV3l0ML2GTqW32Q7h+
i5NOp4Of5PD7lzq0YW9vb2Uga2Nqc5FfnUgkcbkk2rZTvHOPzPNueY0FJqpR
5HJ5r169Dh1iZ5U9Qh3BnDgBly9fhkPr1jGtMEWwLUvWP1y1xauWTyqV4q7P
8io4236YM9Wd1m3zxvSu3ByxVksCPbGAWM7jFr/BUaAnyWdoXU/3Ew5jdj0J
JLl1+enI91qcKvRf1IDJYE0G8vLy3N3d9+3bd+zYseDgYLbWp6NSm+JUP3B0
dPzhhx9w5iQT3iMYxMnZ2RkO7d27t/ZrRcDEJuJUoQ/0BGKD4z8JccWzltyh
ulPvES6vX2fj5OWk8mUy9r/8P0BUGnmOIB7Hf+LzA9Z4d6W6077nYzHXZ8kr
TawjUZuMed/FqY5AxKmqwB2jhawk1APMiRP8eOncuXPjxo0xo1UQbIKtxKlC
P2wn4MuSE7G6j1yvR9GG7ZwvhWN2PfFLyPosLFBerispy8LsProcsZbW9fQ6
0xMnYwYvQqqsiz+uiTixAhEnAqHirTiBIP34lvHjxw8ePLhhw4atWrV6+vSp
rStIYMKG4oSQy9VcDtb6LJXDdsPfGbZbsvZhQlwxTt5ssj4LS4DVZOAFenrJ
vUFzJ7eoLZjexSvL1FVlfZZagIgTKyBxuqfH29vb1tUhEGwDEif4VulMoX37
9ihkwbBhw7KysmxdR4JZbC5OFfpAT/l5ZZjdR2u2PKF1Pfn4puFkTE0ukUjI
+iwsoNGq8kqTcPwnqeA5LdDTlqf9MddnyeHHqTQ2HqHQaDT33kLEiRWQOM3T
s379eltXh0CwDeaG6gQCwebNm+30EeltUjECDnVBnBAiYfXXZ9l/9DmmdxUX
SciwnfVUDrNK8zC7j9yittC6np6nu+Fk5Ba/EctrI1CGOeRy+by3kAEmViBD
dQRCBePkcJ1O16dPHzgaFRVV+xUj4FB3xKmiMrKZNoOLtT5LZET+2GnuVHea
usAjJqoQJy+cgrbAMaF6yFXizJJoHAUKy7pPc6eLb1ZheleRiEMN9GQrSI8T
KxBxIhAqGMUJmDlzJhwlY9l1Ci+/VI9f49H20+ybk+beMrz0CUizbd3Ky8uL
i3DXZ9l3JIjW9fTwUTJOxsr1WUQk0BMLgNIUitJw/IdTFHrgxU9Ud1rn80Nc
3lOcvFklMQo1y0EFqwoRJ1Yg4kQgVDCKk0qlQuvscDic2q8YwRxjpl+n+YZh
mzjXdHy8WkYqVWGuz+Ljm0a7hG17nmJ6V34eWZ+FHUSyIi7e+iyPkk7Qup58
U87jdT2Fl0rzbTjMSsSJFYg4EQgV5sUpPj4erTI8atQom1SMYA6lSqNQqE1u
cMjWtfsNjUaXnSXC8Z+EuOKZi98J9DR8wtWIN/k4edPTBApFXbnk9xqlRpbN
j8VRoJhcn5VPOlPd6WjwVMxhu3xhikZrmxn+RJxYgYgTgVDxVpyAhhQMyx32
6tWrqKjI1nUkvK/wS2RJbwM9ed5LOH8x3Nx26WoErevpyrVIHHdKTuQJ+DJb
X2h9QFeuLRZnYCrQ2dBFtK6nyJzHOBkzS6JkSmHtXx0RJ1Yg4kQgVOjXwZxo
xNSpU1esWBEYGEieYCJYiVym5qRVrs+yaPUDcyOMsMXFFAU849LWZ5m/8j7m
sF1OtkhLAj2xgUTB5/Kw1mfxT7tEc6fbsbsxvYsvya7l7xYiTqyAxImnRyAQ
2Lo6BAKBUD/RanV5ueKoyILwsDy0TV3gYT/cOTQk17DHMGy3apMX1Z1ApV6+
zMJxp7QUvkxKAj2xgFqrzBUk4PhPYn7get+eVHfaHTgCM9ATnKKm12cBN+O9
hYgTKyBxaqOnT58+tq4OgUAg1GeEpYrkpErDeeyVgqRoz8FAkwrkdiOa1h91
7kIYZtcTr1hKukmtp3J9Fkk2ZvfRlYh1tK6noPRrOBkzeBFlCn7NXYVEImnz
FjLAxApkqI5AIBBYJDdfJJEy9SEolZrY2MIRE69NmHPzwInnYES3PONM+k9I
SM6A0Zeo7jR9oSfm+ixZGUK1mgR6YgGZUphZEoWjQC+47jR3uh69FdO7isVc
XXmNv1+kx4kViDgRCAQCW2i0OtCbG3djGdKUl5ev3vqk38iLGVmlkH7eyvuD
xl4ONjMS534rxngqlLcP7vosZeKaHQb6QNDo1PnCFBz/SSkM3vlsONWdNvn1
Tip4jpM3mx+rVNfsDH8iTqxAxIlAIBDYAkecrt6MqpQf/1T0spgnGTr+ypT5
HnGxRebEydUtkuZOx34Jxhy2KywggZ5YAHS3VFqQjhfoySPOidb19DT1Al7X
U7hIVlRzw6xEnFiBiBOBQCCwhUVxiozN7znMed/xIOrO0IicHkNNB71E4hQQ
wI2NKZw87zbVncbPuBEdVYDjThnppUolCfTEAgq1JIsfg6NAEdmPaO506vUc
TlEoTt5CYZpWp66J+hNxYgUiTgQCgcAWzOIkKJWNmHRtxmJP4xCdzq7hkPGa
e7Q5cUIvj/3yitb1dPd+Io47JSfyhKXymr8B9R+dTlsk4uD4D2jSiVczqe60
9HH7qJwnOHkzS6LkqjLWK0/EiRWIOBEIBAJbIHE6cyk0K0dI2zKySueuuDdw
zKXcfJFxRp2ufOmGh31HXvS4Gx/wjGvYTjuHUMUJtqCgDJo7bd2Nuz5LXq5Y
qyWBnlhALOdxi7ECPT1MPE7reroTtw9zxrhAmsfusB0RJ1Yg4kQgEAhsgcSJ
YTt9IcRc3oLCMnO5qOIEW2J88dzl96gJ+jpeMDe9nLZxUvkyWY0MA31oqDTy
HEE8jv/E5Pqu9u5CdafDLyelFYXg5M0rTWJxfRYiTqxAxIlAIBDYAomT09HA
F68zaZt/EGf01OujpriJxAqTeXcfftZzmLPz5fAbt2Pcb/227Tn0zFic0Obq
FkXzK+ORPtNbIq+EJyOBnqxHV67llWVhdh+dD1tC63oKy7qHkzGDFylVlrJS
YSJOrIDE6ZCec+fO2bo6BAKB8B7DPMcpM7u038iLq7Z4GUvLQ+/kyox3YuD/
CoUmnSMwOceJtoW8zuk/6p1AT8vXP8IctsvOFGrUZNiOBcBqwG1wFOgZ5wrN
nW7EbMf0Ll5ZZnl5dd4vlUp16C1EnFgBidMBPWfOnLF1dQgEAuE9xuJTdT4B
aZVL97pHUndyuPy+jhc27vQx7NHpyvPzyiyKE9rWbfOmdT0FBmbguFNqcomk
jKzPwgIarSqvNAnHf5ILXmz1H0B1p23+A2EnTt4cQbxKU+UZ/kql8sBbiDix
Qr0cqgPBDgsLc3Z23rFjx/bt248dO+bt7U1Wt/9gkclkEolEq2UhKi98tCTY
KBSmR2QI9RicOE4HT77oOcw5IjoPvZRKVT/OujF+5g3jeONikeLm7ViL4gSb
570Emjv9cj4Es+upqFBChu2sB+6hQJKL2X10M2YHrevpGecKTkYu741Yzqt2
JYk4sUI9Eye1Wn3+/PkOHTrYGdGgQYOZM2fGxcVZLCQvL+/gwYMPHjxgt24T
Jkzo2LEjyD+7xdYFQkJC4I5FRUWZPFpYWPjcPHI51g8oeGc9PT137dq1YcMG
kOH79+8LhULM6n399dfwAfDx8bGc1BJ79+41/miZY9y4cdafkfB+gSNOKpV2
5tI7wydcLeFL4eXm3b59RlxI4ZSYTBzwgosjTrBFRuQP+8mV6k6T592ONxVU
03jLSC+FWtXIHfnAkKvKMNdnCc/6leZO58OWYHpXkShdp6vO+0XEiRXqkziJ
xWJoqgzNVtu2bUePHg26MmjQIPi0oJ1NmjS5fv06czm//PILpJw7dy6LdcvO
zv7kk08++ugjZ2dnFoutI0yZMgXu2KVLl0wePXLkCINdcLlci+X7+vp+8803
xiYMHqXTWR70J+JEqDXKy8tfh2cXFFmIwJNfKB409vKiNb/euFM5EnffK9Fc
ylKhHArMyhJidh8dOfmS1vXk44u1PktKUolIRPpIWUCrUxcIU3H8J7Xw1Z5A
R6o7rfXpHpvnh5M3ix+jVEurWjciTqxQb8RJo9GMGDECNVgDBgy4e/euWv37
I7cZGRlbt25t2rQpSnD//n1z5YB9oXaWXXHas2fPR3q+/PJLVsaM6g7h4eHo
rpoTp6VLl8LRxo0bNzMFvDXM5YeFhTVq1AiVsGjRon379q1evRq9R8Du3bst
1pBFcSoqKop9F/QXBIBT0Q7hOCHhg+XF60wkNjsPBuCkl5QpU5NLcBTI60kK
zZ32HQnC9K6CfLI+CwuAP4tkRVy89VnuxO2jdT15p5zF63oKL5UWVGmYlYgT
K9QbcTp58iRqv6ZNm6ZSmZ7u+OzZM2h8IU3r1q1pU55EIlFMTMz58+c7d+6M
ymFRnOCDDb702WefIXe6desWWyXbELiBoaGhO3fu/OKLL5jFycHBAY4+f/68
eidC2Xv06JGXl2fYCX7r6OgI+1u1aiWRSJhLYFGcjElMTESXf/Xq1Zoon1CP
mbnkTi8HF4UCN6qSWq3NysTqeoqLLZo634PqTgNGXwp5nYOTN50jUCjI+iws
oFTLsvmxOAoUnfNkmdc3VHc68Wom5vos+cIUDfb6LEScWKF+iBM0nc2bN4cL
sbe3l8mYVpc+e/YsauaOHTtm2Jmfn288zsKiOIEzfPrpp2fOnEHi1KlTJ7ZK
thV37941vmPmxKlt27ZwFG5yNU7E5/NR4b6+vrRDYWFh6BD4MHMhRJwIdZPD
v7wc/pNrlbLArzB+iQyz++i0cyit6+nG7VicjMmJPAGfrM/CArpybbGYizlz
6dTrObSup4jsRzgZM0uiZCoT4eiNIeLECvVDnLy8vJjbbgNyubxFixaQcvjw
4YadPB5vKAWUgEVxmj17toODA3zjtWvXDrnTkydP2CrcJoCrGG7X4MGDGW5+
WVkZHPriiy+q99hOQEAAKtx4DnlxcTE65O3tzVyISXHy9/dv3bo1vNcrVqzA
mShlDiJOhCqRmV0am1CIti17/Ib+6Gp4CRvmn4lcruak8nEU6MWLLJo7bd7l
h+ldOdkijYYEemKBMgWfy8NanyUg7RLNne7G78f0Lr4kx2KgJyJOrFA/xGn1
6tWo8SooKLCYGIwIUsLnh8/nm0wwcOBAFsVJKpX+/e9/9/T0hP9D24rEqXfv
3jh5FQqFq6vrhAkTQE7q7AAfXCCDOMXGxtrpZ51V6H8sSyQSoVCIP8uLy+We
PXvWxcXF+BCIEDqvxalExuLk5+fXpEkT2Ll48WIrp5wRcSJUiXXb6TGXqJta
jftp1Gp1ebliHP9JjC9euu4h9Sx9HC+EhGAN26WlkPVZ2EGtVeYKEnD8J6ng
+Ua/3lR32vFsWFrRa5y8uYJEOBFDNYg4sUJtipOuXJdcEvI6525o7oMcURKL
JXfp0gWuAoQHJ7G7uztq6QIDA00mYFecrly58p///AdNu9JoNC1atEDuFBwc
zJzxwIEDkNHe3v78+fMxMTEiEVZPbO3DLE7oAzZt2jQnJydDmIhWrVqtWbMG
JzSEOTIzM7t37w5FjR492mJimjh5e3ujqW4rV660pq8JQcSJUCUys0tjEgrN
bVXtmBWWKpITsbqPLl+NpEnaqXOvMbueSnhSEujJeuAelkiyMbuP3KI207qe
XnJv4GTk8t5IFKb7BCqIOLEEatei9MTHx9fQWUCZ/LmutHCpB17+FFOI9TiJ
RdAEpxkzZuAkhnYTtXReXl4mE7ArTn369Fm+fLnh5enTp5E4OTo6MuRat24d
pJk3b57F/hBo/R0xuHDhAiuXYwyzOB0/ftx4NhSiUaNGILFVOtfPP/88ffp0
BweHBg0aIGsqKTEd/YYKVZzgTUfP6G3YsIGVtoCIE8G2KJUabroAx39CQnKG
jn8n0NOcZfcS4opx8mZlCPF7wwgMyJSiTLz1WYLSr9Hc6XLEGkzvKhZn6Mp/
e7/g52HUW4g4sQISp0F6Jk2aVBOnAGu6Gk2XZ9iWPm4P/77IYmEECjWjCxYs
wEns5+dXa+LE5XI//vhjamRIuVwOH12QIthvrsvl4MGDkKBp06Y4wSEHDBhg
zkyobNu2zfrLMQmzOK1YsQINjG7evDknJwdcRSwWu7m5tWvXDu232PNGxTCf
CjFixAgc2zeI08OHDxs2bAj/BwGrwhUyQsSJYHN0uvLCAglm99HW3U9pXU9P
/dNxMqYml5SV1cP4vbWPRqvKL03G8Z+UwuDd7wZ62vK0X1JBEE7ebH6sUlP5
qBR8RQ96i937PzOnLlALQ3V3Eg8aWxN1iy7ws/IU6In4WbNmYdXnzh3U0tXC
UB000B07dqTt3LdvH+p0mjJlinEWlUqFzOrkyZM4pwD9c8MgIiLC+ssxCbM4
nTp1aubMmcY9S5mZma1atYJckydPxj9XWFiYv7//9evXly5diiYpNWvWDNSF
ORcSJ8iCrAn+ZTHCEhEnQh1BLFamJGEFerr/IKnagZ4KC8rKSaAnq4GfkKXS
fMzuo9uxe2iNZkDaZaxhu+JwkeydwDukx4kValqcpCrhcq+ODNa09HH7fS+s
DbCMgi/169cPJ/HGjRtRS5ebm2syAVvipNPpmjdvfuLECdp+kUj0+eefgxp9
+umnxi04WAHSql69eo2g4OdnrV6aIyYmBqfPys7MNGxmcWJgw4YNqNMJZ7jN
mISEBDRVCcSMOaUhWiYSLfh31KhRbM3ZIOJEqDuo1drMDKxAT7HRheOmu1Pd
CV5GRuTj5OWmC5RKEuiJBRRqSVZJNI4CRWQ/ojWdZ0MXYnpXoShNq/vt/SLi
xAo1LU7+3CvM3U1oyyhlWtrJIuvWrUONFzVGojnQpGIGy2JLnJ4+ffqHP/zB
pBVs2rQJ2dGiRYtoh6ZPnw7727Zte+ZdqhcHCYfo6GhMcUpPTzfOXm1xevDg
AcqYmppavZrD3bPTxzpgTmYQJ7iNt27dQv93da1a/BxzEHEi1CngFwGvWIrZ
fXT8zCta19Ojx8k4GZOTeMJSsj4LC4DSFIo4OP7DKQo9FjyN2m4u9/oWd32W
kmi5qnIZICJOrFDT4uQavYkWENXk9jLbw5qzPHv2DDVeFy9eZE6ZnJyMUu7f
v99cGrbEaerUqeZWKysqKvrzn/8MgvSnP/2psLCQemjkyJGwf9q0aZhniYqK
YlhC1wDD4JRCoUjDg7qKjQHrxSkzM9NcmtmzZ3fu3Hn9+vUmjxpmnjM/HIfE
6dChQ+jl6NGj4WXLli1xgldYhIgToQ4ilarSUrACPYEp0dxp3TZvTO/KyxWT
9VlYQSwvxlyf5UnyaVrr+SDxKGbXk0CaR8SJFWpanC5HrV/2uINFcXqdc9ea
s0CD/uWXX8KFtG/fnvmx/YkTJ6LhIYaJMayIE1TjL3/5y6NHj8wlWLJkCep0
2rhxI3U/KBPs/PHHHzFPVJcnh9+7d69du3bwppic5Q46hN4yBu2ZM2cOpOnf
v7/Jo5s3b7bTL6DDXENaOAIOh4PG+MBsmTPiQMSJUDfRanQ5WSIc/4mLLZq+
0JPqTkPGXQkPy8XJy0njy+Uk0BMLqDTybH4cjv/E5vmt8en2ziPqL37EXJ+F
iBMr1LQ43Us6shRDnGKLrI1LcObMGdR+jR8/Xqk0/ejHoUOHUJqtW7cyFMUs
TiqVCso3txyeAWdn5//85z9FRUV8M0RERHzyySfgSJ9//jlV9jw9PWEntPWY
k3DGjRv3PwwYetishEGcDFJx/vx52qHi4mIQHji0ZcsWw06tVqvUY7h2w0z+
2Fj6YK5QKEQlrFu3jrmGxgEw9+3bh4plWO4ZEyJOhLqMQCDHDPR04cobWteT
6/UozK4nfomMBHqyHl25jleWidl9dCF8Ba0ZDc26R8SpdqhpcSoo41i0pvV+
9lrsNQrNAX+2kyZNQk0YNJROTk7Z2dnobxkkx8/Pb+zYsejo8OHDFQqm0Xlm
cUIT0eFf5vr06NHjI2z27t1ryAi1bdWqFey8du1a1W+DDWAeqpsyZYqdfkr2
vXv3DDGpIiMj0YOxLVq0oI4hnjhxAhUFCdAeiUQC1gd7unXr5u3tjd5QnU73
6tWrvn37wv4GDRokJCQw19BYnOAD0LVrV9jZtm3b0tJSay6fiBOhjqOQq9PT
sAI9vX6d3dfxAtWdlqx9mBiPFegpJ4usz8IOUmVpBi8Cx50C0i7TGtM7cfuI
ONUCtRCO4ETIbOZOp8epp1k5kVwuN6y9goAPCXpo3QDoEPMqwBVsiFNycjK+
NQF2767FBm3xP//5T9j58OFDtVoNL8EDq3FDagdmcQIv6tSpk0Fo+/Xrh4wF
Oc+DBw+oiY3FqUI/xx6FEUAldO/eHakUKgEnhKbJteoMq+AtWbKkQj/aO8qI
cePGLViwwN/fn+HXNBEnQt1HpyvPzyvD8R/QJJAlqjv1GHo+4BkXJ29aCl8q
tdAVT8BBo1XllSbiuFNywYvNT/u+nSvecb1vj13PHFILXxFxqlFqQZxECt6O
Z8PMudP5N8us726i8vz58ylTphiaWgS8HDt2LDTBOCWsWrXK0dHx4MGDJo+C
UHXp0uX7779nKOHWrVvDqwgtqFR2dvb8+fOh5v/+97/hcowHquoOCoUCBSc3
F1BUKBRu3brVsN6Knf45uJUrV1LjgiI8PT1RUbTn7F69ejVz5kwU8RvRokWL
efPmhYSE4NRw6tSpUGZYWBht/7Zt29DpOByOUqlEpt2eAooPBkycONHcRKzM
zExUCE3MCIS6hkiowAz05HkvodrrsxQXSciwnfXAPeRLcjGH7a5Hb4XGdEfA
MEPDGsy9ScSp5qidterAnY6+nq6P2tRh6eP2eomq/Nctdhu71mQA2sG4uDg/
Pz9fX19ooJnH5qrK8ePHzU1XJpgDvgdSUlIiIyOTkpKkUmk1ShAIBBEREa9f
v4Y31GK3YVVB4vT111/T9oeHh7dt2xYOeXhY9eAngVAXUCo1GemlOP4THVkw
eup1qjtNW+ARF1OEkzeTW6pSkfVZWECuEmeWROG4U2jmXVqnxKU3q4k41RC1
uchvrjjZI2Gf85vlFyJXP049LVQU18552QUEwNHRcfPmzbauCIFNzIlThX55
QThEe/iRQHhPgW+wokLc9Vm27aGvz+Ltk4qTMSWpRCwigZ5YQKtTFwhTcdwp
rShk3/OxVHda4901Pj+AiBPr1KY41Q8WLlzYqlWr7OxsW1eEwCYM4nT16lU7
Vpe3IxBsjkSiSk3GGrYzDvS052AgpncV5JeRQE/WA64rlBWm4wV6up9wiNb1
5J18hogTuyBxOqbHxcXF1tV5Dzh+/HjNBfEm2Apz4iSXy/v37w+HjKdIEQjv
NWq1NjsTa32WuJiiCbNvUt1p5GQ33PVZOAKFgqzPwgJKtTSbH4vjTtE5T1ZQ
Vjpb9GvbH1f13Lp79bbda0g/CSsgcXLSc+rUKVtXh0CwDUicmjVrtvktmzZt
WrZsWfv27Zs2bers7GzrChII7FNeXl7Ck2F2H511CaV1PXneS8DJmJzIEwhM
hMAlVBWdTlss5mLOGDesz7Lwftves1v0ndNyxca5RJxYgQzVEQgVb8XJJI0b
N16xYkVZWZmt60gg1AhymTotFWt9lqCgDJo7rd36BNO7cnPEWi0J9MQCZYoS
Lu8NjjsZr8/y3/+S5p4FiDgRCBWUoTo5BbFY/ObNGxTDc+zYsbauI4FQU4DS
gNhgKtDy9Y+o7mQ/3PnVq2ycjJxUvowEemIDlUaRK0jAcaf4PP+1Pt0N4mRH
xIkNiDgRCBWMk8PBoLp06QJHU1JSar9iBELtUF5eXlqKuz7L1etRtK4n50vh
mN5VwpOSQE/WU16uKynLxhy2uxSxhogTixBxIhAqGMUJmDVrFhx98uRJLdeK
QKhllAoNl4O1PktoaO7Q8a5Ud5q77F5CHNb6LFkZQrWaBHpiAalSmMGLxHGn
F1x3Ik5sQcSJQKhgFCf4ddy7d284GhMTU/sVIxBqGZ2uvCAfa30W2Hbs86d1
PQUEYK3PkppcUlZmejV2QpXQ6NT5pUk47pRa+IqEI2AFIk4EQoV5cRKLxTt2
7IBD9vb2NqkYgWATxGIl5vosd+8n0tzp2C+vML2rqEBiw0BPz19lBgVnmNzi
EgttVatqUDnMKs3HCfRExIkViDgRCBVvxalBgwZ9KIAsNWvWDPa3bt06MTHR
1nUkEGoVtUqbycVanyUyIn/ExGtUdxo7zR1zfZaM9FKV0jbDdj2Gnqcpn2Fb
semxTapkDQp1WVZJNBGnWoCIE4EAqFSq74zo1q3b8OHDXVxcRCKRrStIINiA
8vLy4iIpZvfRweMvaPrx2CsFJ2NKUomw1Abrs+TkiQzbqKlu2/Y+Nbzk8auz
nqbN0eo0hSIOEaeahogTgUAgEBiQSlRpKViBnvz8ODR32r7XH9O78nJtGehp
3Az3/See2+rs7CKSF3OLTQd6IuLECkScCAQCgcCMRqPLyRLh+E9CXPGUebep
7jR43JXQkBycvOlpArlcbZMLHDv9er0RJ0CpkeXw44g41RBEnAgEAoGAg4Av
wwz0dP5iOK3r6ZZnHE7GyvVZ+LLav7T+oy4uXveg9s9bc+jKdTxxBhGnmoCI
E4FAIBAwUcg16WlYgZ6eP8+kudOqTV6Yw3Y5WSKNpvaG7e4+SkA1TM8U1NpJ
aweJQpDBiyDixC5EnAgEAoGAj05Xnp+Huz7LsnfXZ4Ht5cssnIxpKXwpS+uz
qNVajcbsg3vJabzeI1xWbHo8Ztr1n2bflMpMnBQuWanSvKcBz9VaZV5pIhEn
FiHiRCAQCISqIhIqMAM9ud+KobnTaedQTO8qLmJhfZaFa35d+7PpsP9lEuXY
6e7Il5BBbXXyM072IqSy9ywzu9TKmtiK8nKdQJJLxIktiDgRCAQCoRqolFrM
9VnCw/KGjLtCdaep8z3iYrECPWVyS9UqqwI9MYjT+h3efR0vcDL46CUas/P4
NZ6W7H0XJ4RMJSLixApEnAgEAoFQPXS68sICCWb30c79AbSupyfeqTgZU5JK
xOLqr89iTpyue1R2hT32fWfx7u37/Xs5uCQkF1N31g9xAog4sQISp8V6Nm/e
bOvqEAgEAuE9Q1KmTE2u5vosR04FY3pXQX5Z9dZnMSlOMfEF9sOcnY4G0vbL
FeqJc2+NmXZdJP49Jud7LU4KhWLxW0g/CSsgcbqt5+HDh7auDoFAIBDeP9Rq
bVamEMd/YqMLx013p7rTmKnXo6MKcPJyOQKlUlPVuoE4rdz8WCpVGbbcPNGI
iVenLvRQmCotI6u038iLkEUiUaL0foGc91ec1Gr17beQHidWIEN1BAKBQLCe
8vLyEp4Ms/voyKlgWtfTnXsJOBmTE3mlAnmVKjZ/1X2TC9JxzQcfcLlKj0P1
/ooTFSJOrEDEiUAgEAhsIZOq01Kx1mcJCODSzGTdNm9M78rNqcL6LAtW35+y
4PbdRwmG7djZSm07cvqlyfRKlWbqQo9BYy9fux2F0h889YKIE8FAvRQnrVYb
Fxd37dq1AwcO7N+//+zZs4GBgaWlLHzmoWS+HuuL4vF4cnnVfjcRCARC3QeU
Jicbd32What+pbrTwDGXXgVn4+TlpPIx12cxOcfpolsEnO5pULpx+r1HA+2H
OUfHFRj2vNdznKgQcWKFeiZOIDZXr17t0qWLnRGNGjVatGhRSkqKca7WrVtD
gsuXL1ssH3wMlaZSWRWZLTU19aOPPhozZow1hdRl/P39z5w5U1hYSNufl5cX
hkFZWRnOWeDdBCt2cnI6ffp0eHg4ZryX4uJi9Cbm5uZW+cKMmDFjhvGHzRzb
tm2z/owEwntBqUCOvT5LGK3ryf1WDGbXUwlPZvEP36Q46XTlKzY9HjD6Unau
kLrfyy8VKnDtdjR1JxEnApX6JE5SqXTy5MmGRurLL78cMmSIo6Ojvb29YWfz
5s3v3LlDy1j74rR582YQp48//jgxMdGacuomOp2uW7ducJdCQkJoh/bv348j
GK9evWI+hVgsNjaWoUOHcjgci9UrKipC6XNycqp/kW+ZPn06vjht3brV+jMS
CO8LCoUmHS/Q08uXWX0dL1Ddadn6RwlxxTh5szOFajVToCdz4QhKhfKRk69N
XfD7FPH0TEHfkRfX/exNkzEiTgQq9UacoLEeO3Ysap569+59/fp16kBYUlLS
mjVrGjdujBJ4eXlR84LGrFy50mJjXcGSOEFVmzRp8pEeaP2rXU6d5ebNm+gu
VVucwsPDGcrXarXDhg1DKUGM4e1buHBhw4YN4WWHDh0s9iOxK05paWmh73Lo
0CFU/tWrV2mHsrOzrT8jgfAeodOVF+SXYXYfrd7sRet68vXj4GRMTSmRlJn9
TmYIgBmTUGg/zHn34Wfwf5lcH4hg+nVxGT1mFBEnApV6I07nz59HrdXEiRMV
CoXJND4+Pqh5bdOmTUlJSTXOwoo4QTX++Mc//u1vfwNx+uyzz7KysqpdVJ0C
bikID2gMaKE5cZJIJEXmGTlyJORat24d84lOnz6Nynd3dzfsjImJAWuCnbNm
zWLOzq44GXP37l0c/SMQPhzEIiXm+iy3PeNo7vTL+RBM7yoqlJSbCvQUHJoV
FmH295S7Z2UYzIfeyT/ve9rLwSUptdg4TVGx5IF3skRa/SCcdQQiTqxQP8RJ
JpN98cUXcCHdu3eHppkh5YkTJ1Cjdvz4cZySobTs7GzDXB1WxAnU7qefflqz
Zg3qdFq2bFm1i6o7ODk5GXccGYsTAwcOHLDTD7dpNExxWrRaLRKkhQsX0g65
uLig82ZkZDCUQMSJQKh9VCptJrcUx3+iIgscJ12jutOkObdiowtx8makl6qU
VV6fZcNOH3Qizwf0xVbqGUScWKF+iJOPjw9qqqDpZE4JitW8eXM0xGPYOWTI
EDAuaO+oKfPy8tatW2cY3evYseOlS5esF6fS0tI//elPT548gfL/+Mc/gjj9
5S9/4fF41Sut7nDu3Lleb/n++++rKk7+/v6QHuyX2XmA169fo8LhP7RDcBuN
e6KMMSdObm5u7du3b9eu3enTpzGrbRIiTgSCScrLy4uLcNdn2Xs4iNb19OvD
JJyMKUklIqHpQQdzSKTK3g4u42YyfW/UD4g4sUL9EKe1a9eipgrnOalZs2ZB
ygYNGhgCFBhPDk9OTkZdWMBXX3313Xffof/PnDnTSnE6c+YMyJhWW/mbaN68
eajTCWfOsE6ne/DgwfDhwyF706ZNa6i3hBVAGKokTmCznTt3xvHeCv0NRIWb
7FoE84FDmzZtYijBpDi5urqinXv37sWpMwNEnAgEBiQSVWoK1rCdrx+H5k7b
9jzF9K78PHGV1mcZOfnaniOBNXbRdQUiTqxQy+IUl1j4NJDz7AWX3Vl2qIuj
f//+OInd3d1RuxYUFIT20MRJo9H07t0b9nz99ddwf8BYKvQBBAyTz60Rp65d
u27cuBH9Py0t7ZNPPgFx+r//+z/mB/Dj4+Nbtmz5r3/9C9SioKCAIWVdoKri
hIb5HBwc0K1mZvXq1ZAYVNbkUTRLasSIEQwlGIvTpUuX0J6jR4/iVJgZIk4E
AjMajS4be32WKfM9qO40eNyV8LBcnLzpaQKFHHd9lnEz3PefeF6jV10XIOLE
CrUjTuXl5fceJ/40+yb1879o7YPQCHa6TVq0aAFXgfmEmre3N2rXnjz57TkL
mjihhg8+YGFhYdSMMpmse/fu1ohTQkICaBI1ltSECRNQp9PBgwfN5ULjg59/
/jmIFs5ZJk2aNAEDgzeyTpXEicvlNmrUCBJHRETgFD5u3DhIbC4E1sKFC+Fo
z549GUqgiZNhZpSVI3QGiDgRCBaBRoFfIkvCC/R0/MwrWtfTLc84nIzJiTwB
HyvOMBEnAj61IE7wB3LwZGW8+h5D3/nk9xzm3GPI+cd+JiJSVpUGDRrAVSxY
sAAnsZ+fH2rXDEEJaOIE5ZjrtTh+/Lg14rR27doePXpQ90RHRyNxatiwocmH
AZVKJXgFJNi/fz/mWdDdsMjNmzercQk4VEmc5s6dCyl/+uknzMIdHBzs9M9O
mjy6fPlyONq1a1eGEqjidO7cOfT/CxcuYFbAIkScCARM5HI1B299lufPM2nu
tHLjY8xhu5xskUZjoTebiBMBn1oQp7OXQ00usIg2cKeXIdY+j496nGbPno2T
2NCuBQYGoj1UcQLN++qrr+Dl4cOHjfNGRUVVW5w0Gg0ojfE0nuHDhyN3gkbc
ONe1a9fQBHLmpwWpgAO4YIDZf1UN8MUJvBFfsRAgtAzitGTJEjj6ww8/MJRg
EKfNmzej/3zzzTcsLn9DxIlAwEer1eXlinH8JzG+eNHqB9Tmo5eDy4sXmTh5
01L4MinTlzYRJwI+NS1OEqmyz7vxYOniNPT8rKX0UN5VpVOnTnAVAwYMwEls
aC4N0Qip4gR+go7eunXLOG9eXl61xenhw4d//etfxWIxbf+LFy+QOLVq1QpN
GqcCDgCHPv300/9SaNKkSY2uc3f79u0vMGjTpo3J7PjihDr3Bg0ahF83NNNs
5MiRJo/OmzfPYoEGcbLTPyMA9xP+s2PHDvw6MEPEiUCoKsJSBeb6LDdux9Ia
kfMXwzC7nnjFUnPrs7ArTnuOBPYZcQFtvR1ceg13MbyEzTjAZq1BxIkValqc
bt+nRzMzuSWnWfU8/qpVq1BTZbw4mjE9e/a000cXN+yhipNQKERFgTwY583N
za22OEGLP23aNJOH7O3tkTvduHGDuh/+xkGZYP+uXbveUIiLi6vq2auEYf48
M+BvJrNjihM4arNmzSCZh4cHft1WrFgBWQYOHGjyKOyHo0uXLmUowSBODRs2
hM//xo0bkUFFR0cz5MKHiBOBUA2USg0Xb32W4GD6+ixT5ntgrs+SmfH7+izj
Z94YM/062sBnBo69ZHi561CANdcSFJxx0S0CbQvX/Np7hIvhJWxKFe6UddYh
4sQKNS1Ouw89sx/mbFGcfn2SZM1ZUBQgO/0iF8wpORwOSunk5GTYSRUnMCKU
wGSEzLCwsOqJU0lJyR/+8IeAANN/jI8fP0bi9O2331L3KxQKtB8S4J8L2muc
hXQZYqfz+fwoDGJiYsxVAEeckJ6BO0mlUvyru3LlCnI24z43rVaLTOzMmTMM
JRjE6d69e/CyrKwMBTHo27evWo212DozRJwIhOqh05UXFuCuz7Jjnz+tHXnq
n46TMSWppExc2edz6NSLgydNb/CTn62LOnc5bMCYS2yVZiVEnFihpsXp531P
e2KI00PvZGvOAhrTsmVLuJBOnToxzwUyLMlK7bShTQ5H66BNmDDBOPvRo0er
J04nTpz44osvGFbx7tixo0lH+ve//w07mSM60nhfJoej0AHwjlSp8NjYWFQ4
2DLtUHJyMjrEvOygcTiC+/fvoz3Hjh2rUmVMQsSJQLAGsJqUZKxAT3fvJ9Ka
kiOngjG9q7BAUqVAT9WGiFP9o6bF6aTz655DLYtTULCFeNEWMTzvNmXKFHNr
dpw6dQql2bBhA3U/TZzQUmiNGjXicrnUZEql8ocffqieOIEXjR079ol5li5d
isTJ3t6emnHx4sWwE/OBQQQYWlMMPD09q3QJ+OCIU3Z2Nkpz5cqVKhUOby6K
Rzp58mTaIbiHsL9Lly4MglphJgAmeDLqyLJ+zjwRJwLBStRqbVYGVqCnmKjC
8TNuUFuTcdPdYSdOXi5HoFTW+KgZEaf6R02LE4fLt2hNg8ddUamqvLoQDZ1O
hyL8AN9+++2RI0eKi39fq/HFixfQzqKjAwcOlMlk1Lw0cSosLPzyyy/t9LPN
k5J+G0Pk8/lz5swxdNcYxEkqlaIJ2zNnzjRXt6ioqI+qwsuXLw15U1NTP//8
888++yw52apOudoER5wM0ZM4HA5DUeCNDfRQTfX69esoLxxFMRwkEsmePXvQ
Tou9cybFKSMjA2TSTh+Ggtm7LELEiUCwHvgz5BVLMbuPjv1CD/SEuT5LchJP
WFqDD9pUEHGqj9RCOIKFq39lHq07dyXMcikYQOu5aNEi6mhUs2bNQIGoQ1dT
p041jtFtvOSKv78/isoIDBkyZOzYsWgocPv27TRxMjyFZ27id4U+uFCVxMnB
wYGa3dvb+69//Stcy40bNwIDA3fv3n3pUl35MzQJjjihuAFw55ktBT12ByiV
vz+HAlnmz5+P9n/99df9+/dH7yAAxVqsnrm16gzjsCimE5fLnWTEjBkztm3b
xiyxRJwIBLaQSVVpKViBngKecWktC/76LHm5Yq3W8rIF1YOIU/2jFsSpqFgy
etp1c+60YtNj67ubqPj4+IwZM8bOiKFDhz548MBkMz169GhofOEodSc0+o6O
jobsbdq0cXZ2lkql/fUYRgPlcjm8/Oqrrxjilp86dWpHVdi5cydt5nNhYeG6
desGDx48YcKER48eWdklUtMkJCSgu8Tw9N+8efMgwZo1a5iLcnJyQkXRpm3D
/T98+DCK34Vo1arVyZMnjeM5GCMQCFCZYFDU/SDDP/30E+yH9x3sGsWYAus2
hF+A06HYBcCBAwfMlR8QEIDKh/tgsTIEAoEZjUaXmy3C8Z+42KIZizyp7Uv/
URcx12fhpPHlchaeDTEGxKn/6Is1UXI1IOLECrWz5Aq404wllZ9ngz71GFoZ
+nLbXj92rckANHxgPvf1vHz50jh6EiZJSUlBQUFv3ryh9ngYs2DBgmXLllXv
FIRqA6oTHh7u6+sLb5C5iW3VBonT2LFjqTvhY+Dh4YGiPyUmJrJ7RgKBYI5S
gRwz0NNF1wjaz/Or16Owup4SefwSGes/S1dv8YKGzxADwbYQcWIFJE4H9DA/
xG09cYmF+44Frdj0ePVWr19cQvIKqikzdQ2FQvHNN9+4urrauiIENjEpTgi0
Ih55xwmE2kSh0KTjBXp6FZxNC7y8fMOjxHisQE/ZmUKL67Pgk8IpQRU4/MtL
y6lrBvi5d+AtRJxYAYnTIT0ml/wgMKNSqRwcHLp06UKbcE5432EQJxR83s3N
rfZrRSB8yOh05fl5uIGeNm73obpTr+FVWJ9FIjHx3HROnkgkNrGiqDkkUuW4
Ge7jZ9446fy6MsxUINODMAipTJWVI9SwOuEKGqlDbyHixAq1M1RXj1EoFDt2
7BAKhbauCIFlzIkTvNft2rVr3LgxTph6AoHAOiKhIiUJK9DTTQ/6+izOl8Ix
vau4SEIbtus9wuXS9Qj8em7c6dPX8QKHywffW7Hpcf9RF0GKmLM8DUqHShYU
0Z9gYgsiTqxAxIlAMAkSp++++87pLbt37161atXXX3/dsmVL+MOxdQUJhA8X
lUqbkV6K4z8Rb/KGjnd9Z32Webcx12fJ4JaqKbNwqyRON+7EwLkevI3tLBTJ
R05xmzL/tkLBNAWdiNN7AREnAsEkSJxM0qZNmxMnTuh0NfX8MoFAsEh5eXlR
oQSz+2jPwUBa15OPbxpOxpSkErHotyeD8MUpNqHQfpjz7kPPLO6kQcTpvYCI
E4FgEiROI0eOFFDIy8t7+PBh79694dCuXbtsXUcC4UNHIlGl4q3P4uWdSnOn
3QefYXpXQV6ZTleOKU4MnUu0bihjiDi9FxBxIhBMwjA5PDMzs2nTpi1btkRx
ywkEgg3RaHTZmVjrs8TFFk1d4EF1p1FT3CLe5OPkTU8T9BrufOiXFxwun2FL
5ZTMX3W//2iz05k27PTpM+JCwPN0k9ndbkcTcar7EHEiEEzCIE5A9+7d4SgY
VO1WikAgmKC8vLyEJ8PsPjp6KpjW9XTv10ScjPYYC9ajzelooLmqCkplFrMT
carjEHEiEEzCIE5SqbRly5YNGzasdmBVAoHAOjKZmpOKtz5LAH19ls07fXHE
afVmr0deya/CskLe5JjcXoZkTZhzc+iPrsUlUpOV3Hc8qMfQ824e0Sazn70c
RsSp7kPEiUAwiTlxEggEaElEhkV2CASCTdBqdXm5Yhx3SowvnrfiPtWdwGdC
Q5nWZ+k13OXAsefwn7RUvkxq9uE40J4h468sWHXfOByTl1/lPKurN6PM5SVz
nN4LiDgRCCZB4tSqVavhFAYNGtSkSRMUpoDEcSIQ6ialpbjrs1y+Fknrerro
GmFRnNBWwpOaW5/lVVg2FHXK5TV1Z3qmoO/Ii+t+9mZY1YWI03sBEScCwSTx
8fH/M6JDhw5Dhw69cuWKRCKxdQUJBIJZlAoNF299lpCQnP6jLlLdadaSO/Gx
RRbFCbasTKG5RejOXgqFop6/ykQvZXL1xLm3xky/Li5jWvaUiNN7AREnAoFA
INQ/dLrywnzc9Vk27fCldT35+nEsihNsqcklZaZcSKvVLV73YNDYy/mFlTMh
t+192svBJTGlmLnORJzeC4g4EQgEAqG+UiZWYq7Pcvd+Is2dzriEUhM8f575
JjzPZN7CAvr6LABfIHOYeHX6Ys8bdytXfvF8EG+xtnKFOjdfxO5adVSIOLEC
EScCgUAg1GPUKm0mF2t9lsiIfIcJV6nuNGH2rbgYE8N2xltGeqlKqaGdOjIm
H5Wzde9Tm1w7DSJOrEDEiUAgEAj1m/Ly8uIiKeawndNh+vosDx4l42RMSSoR
CelBcRevfdBzmLNMzrREXa1BxIkViDgRCAQC4UNAKlGlpWAFevLxTaO507Y9
TzG9Ky9XrNP+Pmx39lJov1EXbXjVVIg4sQIRJwKBQCB8IGg0upwsEY7/xMUW
TV/oSXWnwWMvh4cxBXoybJw0gfxtF9O5y2EDxlyy7VUbIOLECkScCAQCgfDh
UF5ezi+RYQZ6On8xjNb15Ho9CicjlC/gy+BcRJzqH0ScCAQCgfChIZer09Ow
Aj0Fv8zqNdyF6k6L1zzAHLbLzhKduRhKxKmeQcSJQCAQCB8gWq0uPw93fZZF
qx9Q3anPiAvBwVk4efceDhowmohTvYKIE4FAIBA+WISlCsxAT1fdo2jDds6X
wi3m2nMwsN/Ii8VFZtdnqU2IOLECEae6Q3FxMYfDEQqFtq5IdQgPD79//767
uzv8C1dh6+oQcImPj+dyubauRZWBNig6Ojo/P9/WFSHUB5RKTUY6VqCn8LDc
IeOuUN1p5mLT67PQxAn+k5lRqlKZXp+l1iDixAq1L04pKSk1sc5Xv3792hvR
oUOHbt26zZo1y9XVVaGgh9eoO8TFxTk4ONjpOXTokK2rUwWkUunly5ft7e3t
3qVNmzbbt28XCAS2rV5BQQH6JMTExNi2JuyyZcsWuKjVq1dbWU5gYCC8WZcu
0ccR4I3z9vY+derU8ePH4f3NyclhKKSoqOj27dsXL16ELxO44Tjnff369Z07
d0QikcWUcrkcUgYFBRkfmjBhQufOnWUyGc4ZCQRmynXlRQUSzJlLO/b5W1yf
xVickvSBnsRiprXqahoiTqxQy+JUVlYGJjN37lzWS27Xrp0dI9DQhISEWHOK
sLCwxYsXr1ixgq06G+jbty+qZPPmzaGpYr38GoLL5Xbs2JF6h+HNbd26tWEP
iGtiYqINawgtPqpJeHi4TSoQHBwMn5k1a9awW+zSpUvhombPnm1NIfBTAt6v
b7/9VqVSGXZqtdo9e/Y0a9aM9uczZswY445E+AW0aNEiWkrYU1paynBenU73
3XffQcqEhASLlfTx8YGUjo6OxoeioqLg0K5du/Aul0CwjKRMmZqMNWz32CuF
5k5OhwMtihPaCvLLdDrbDNsRcaoS8MOtX79+8O1H21/L4gRf9ejb1cXFhd2S
kTjBF6w/BfjV7OrqOmjQIHTSRo0awU/sap/Cw8MDCmnSpAl7ta4E3hpUvWPH
jrFbco2Sl5cHXgTVbtCgAbSVcXFxaH95eTn8f/PmzfAXitypJjoYMeHxeBP1
pKWl2aQC165dg5vQsmVLdotlRZwOHDgAhVy8+E5oPlQy6jNcuHDh8uXLu3fv
btDgoqIiQ0qNRjN06FB0CMx/zpw5w4cPRy8HDhzI8KbfvHkTJbMoTvBZGjJk
iDlxAqZOndqwYUPbyjmhnqFWa7MyhTjuFBVZMH7mDao7jZ56PTIi36I4wcbl
CJRG67PUAkScqsT69evh+8fBwYG2vzbFydnZGc519epVaGcbN24cGRnJYuFI
nMz1ZQUFBbVo0QL1ijD/HGaghsSppKQEtSNhYWHsllyjjB8/HlnTgwcPTCa4
desWuq6dO3fWct3qDnVWnAoKCuCT/PXXXyuVvw8cwJ8JesvWrl1bVvb7+uzu
7u5oP3Vw8Pjx47AHvocvXbpkmPV679695s2bm3zTdTpdZmbm4cOH0V8iszhJ
pdIXL16A8aKU5sQpJCQEjo4ePboad4BAMAd8nkt4uOuzHDz+gtb1dP9BkkVx
StIHeioVyGv50og44fPkyZOmTZuCWthQnN68edOoUaMlS5ZU6L8V7e3tO3Xq
VG2HMYZZnIAbN26gL2H4oW0ygVqtzsnJyc7OlstNf5gtihNkhOxQCHXswyI8
Hg9VLDo62lwaaHTgxz7UkLa/uLgYWp+UlBRzdaYhkUigHI3mnV868C0BbwT4
G20/A0+fPsXpJZswYQKkgYbSXMlVvWMiPbSdcFHJycnx8fFVnVev1Wpzc3Oh
AtXuE4NbByeFWwdFmUxQPXGCtzsvL4+hYtaL0/bt26GEbdu2UXeuWLECdnbr
1s34/ZozZw4c+uKLL+CPt6JyMq3yq6++gj3GI9dbt25FKcVisWGnk5MT/Fai
DeqZFCc4ddu2bWkpzYkT8MMPP0ACa3qSCQSTyGTqtFSs9Vn8nnJo7rR2q7ev
Hwdt63/26et4wfAStoS4YkPe3ByxVqurtYsi4oQJ/LT83//+5+zsPHDgQFuJ
k0Ag6NixY69evQwzOaGth/Z00qRJbD2haVGc4ERdu3aFNP3796cdgt+tU6ZM
ga96w4jekCFDXFxcDK1hUlIS5OrcuTNK0F9PVlaWoQQvL6+xY8eCU6EEoKkj
R44E0bJY7XHjxkGjgHINHjx4zJgxt27dqtDPjYFTwP2p0AsbmhNCLfDZs2eG
3+NAq1atNmzYQHs8CppdVFW42zExMVB4gwYNIHHr1q03b94MrgIN9OXLl1Hh
dvrRmXPnzlG7IMyxYMECdJnMU3PBrwboMX5u69GjR1AfQ2ParFmzUaNGeXp6
0pL99NNPUP/Q0FAwHHS9w4YNMxwFu4Bm2vDGwdXBzYSTGhKAWI7RA3eAWmxc
XBx8VL788kuUEb5M+vXrBxKI/wQB3Fv4m/r+++9RCXAh8+fPp54FbjjUHH4d
oPLRG0Ed6jIJuARUzDBPDDL27dv38OHDtPtspThB5dFNA9uk7u/Rowfs3L9/
v3EW9KvBoPd+fn7opWGI1gBcODoEH1HDTjC01m8xvF/mxKk1BfhjZBano0eP
QoKZM2dW5QYQCFiA0uRmY63PAi40Z+ldmj6Z28LD8qh5Oal8kLTauSIiTjhA
ywgNOrQ+oA22Eic4NTR58G1Jm2cCrSScmq250BbFCVi1ahX6xqY++2MYhmjY
sKG9vT38gDV8scOvbJQmIiLCzghDK4nmiqDWv3fv3vCD3TC31uIolXGx6Kk6
MDH4P9jmlStXDIcM4gRp0J7mzZtDnQ3Nd8uWLcG4DIWLRCK0/+TJkyA5SC0M
pa1cudJwQ6hYnMkMTRtSjsmTJzOnNAc0zebu2O7du6kp27dvb6cf3jXYnUGc
EhMT4RcB2gnvPnWaOrynKI3JyeHQ6KPmGL5DQBV69uxpMKgRI0bgmDwIW5cu
XQz3HIQT/R+KdXV1RWngjTC+t9nZ2QzFgmkYTBJVzGBQINXwt2xIaaU4oVFU
uKW0/ehD4ubmZpzl7t27qCZRUVHwcu/evXZ6c6bWCqFWq+FPyc78n7a/vz8q
CmdyOPyisWMUJyjETi+uOM/oEQhVpbJDXiDHXJ/F9To90NPuA8887sTTNhPh
CxJ5JTxZLQR6IuKEw4kTJ6BxQb9zbSVO8EMeTgFfvMaH1q5dC005ta2vNjji
dOfOHfSNff/+fbQHvuS//fZblLG4uBjthF/3e/bsQSnRRCxQBT6fjxymSZMm
fD2oPwr+gxr9rVu3GqaFCIXCJUuWoO/zwsJChioJBALwSXSuly9fQmlo0A2J
EygcnA5qeOTIEXinUB/Xw4cPUfoNG/5/e+fhFsX19fG/YsVYEGOPJfb8lCoa
NGpAETURO4ixksQGakQNsStq7AUbFhSwIxIVEAvGjlJEAUEElCYgSuc9757H
+9zMzM4OsLvswvk8Pj7sbXPm7t2537nl3MWQHsu5e/eunZ2dSj30xJzbMOEE
PxYHBwfcVAj2gOBhXbmLiwt0hfCDhVwYDr0eqwpJ7t+/j3n9/f3lvxRJcnJy
sMb++OMPvsZmzZqF1csPy6Bw6ty5M1jl7u4OYht3pkNGlC6Q4OrVq5g4JSUF
lA8G4tyfpHAaNGgQhDg7O7958wZDoBns2rULU4aGhsrb//nzZ6xqEB5waXzW
xcfH44AY2IljMlAmfDu7d+/G7xHbjFhm8OBCaCcnJ7b9Hxrevn370DB+LVk9
hdPcuXMlfyzQGsFIyWlTNlWHs4f4UTx4i+D0mSbzdCucoEpR70k+YQhCJ5R+
rlB4PkvM3XSbkft57eTheS7u2TsledNSCyrK9TttR8JJK9DpwyvwpUuX8GOD
CKebN29C+YsWLZKMLS0ttbe379Kli9YpDK0oEU6sxz9y5AiG3LlzBztrwWIS
EEVYIP/2LbnGCZdO9ezZU9AnFhYW4rWgBuQtZ2uc+FkPFE448iB4lUbfBdBN
C8qBOsSxsm3btmEIE06gMfgbTEhIwPCBAwfy66ZAeGA4XF3GYNwhDoSHhwui
MjMzk6SAe2RpcIivd+/eghoD7YTF8kIahRMAcpFPzAbiBFNFIAtRlaE2Fgun
5ORkDBEP/tjY2ED4xo0bZe4dOHz4sEq9cAuqiw+HmrSyslL9dyBO+RonUHFo
mHhaE365EL5mzRoWUk/hBD86yO7r66swfWBgINoGWh1DUHyyIVkBY8eOhdgf
f/xRMla3wgmwtrZWqd9ctJZGEHWmqqo6M6NI4YrxpavCBUNPN24kK8n4IiGn
uLgWS2RrCwmnjIyMnhqYMmXKp0+f+vXrB2/xn78AT8sffvgB/uBXfupbOM2c
OVPcu/Fs2rQJErAJjjqjRDiBGfjEZh7/oGMFERUSEiJOjKtToINmIZLCKT4+
Hkrg19UgoAlxPz6/0kMSeeF08eJFPnFqaqpYXTBw6s3Ozg4/MuEk8HUDIgrD
ofL5cJCLGA4dpYzBUF2aNOHkyZNVUnh5ebE0cXFxUGPQewryQo1hYt7bIQon
Z2dnQWJcdj569GixefPnz4duHUfDxMIpNzcXrs7m8nhwc73kCh8euKhKalF0
zReZBPKVrY5TLpzy8/PBMMlpMlwF9+eff7KQ+ggnsA2HaCQrQQA0leXLl2Md
Wlpast0c6KMA93qIQbUD9SkZq3PhhMNfoNa0lkYQ9aTwQ6nC81lOBD4VaKct
f99WqLuys4qr9ePoiYQTPMSWaWDfvn2vX7+W7MIAb29vVoi+hZN4WTjPixcv
dLVEvFYjTpq6DNAwDx8+PH/+/IIFCzClVuHEA3eRlZV17969oKAg5rGqnsJJ
sFwZXTpAxye5hJvtHMStT0w4CXQdlInhAk8CTDjJd6mQC5Ndv35dEOXu7t76
v6B65IUTD9ZYTEzMmTNnpk6dqkk47dq1i88FbQnXAkFtyNhZo8ABJrTPJ0+e
XLhwAbQlppQXTvCjw3ViUNUlInB3PAD6FtPX2R0BXOjp06cgm9mssa6EE7xw
afr6BMCX0r17d0wM2pXfA4vCCcyQzAi/aJWU8xNE58IJ9/GBSVpLI4j6U1ZW
mZqs6HyWhw/e/jD2CK+dJrgHxsqez8L+pbzSy/ksJJzkgcf4pf8yQA38wfuL
M8AaJ94RAY9unRIoEU64HB148OABC4R3atCZDg4OzL0MjxLhlJOTs3nzZltb
W3yRF1BP4SRI7OPjA4E2NjaSRcGXi7lwkRITTgKX6Uw4sWlcRKFwYh3fyZMn
5W+t5sv8l0A4sRpj+xB5xMKJ/xZqODkkOVQomZIXTqA5AwICoC8GPSO+urxw
wqXIWmGeJWolnMrKykCPOTo6fv311+IydSWcXr16hQVGR0drSsOfAQRfgXi3
I36tmqbqXFxcVOrlc5KxOhdOKHp79OihtTSC0AnwxpedpfR8ltXrbwiGni6H
JirJmBif86FAxyeFmbpwgiekq6urzLOrqqoKXoRnzZoFDw143Vu5cqXMhJcS
hqsRBBrGHcGePXvgKtCJ8IFwayCoeA1TH5QIpyVLlqjUW5/YcM3bt2+ZY2QQ
ToMHD4a+YN26dSD2xF22pHB69uwZczvTrl27YcOGeXh4+Pn5SW7KlqRWwsnb
21ul9swsWdTFixcxF2pRPQknpkY0DTjwYDXywgluU7LGQGxgoFbhxLr+K1eu
yF9dLJwKCgqYJ3kQunZ2dlOmTAFNcvPmTVxKJC+c2NcK7yAOmomPj8f0yoVT
YWEhVAUzDFTl5MmTV69eDbWBHrl1JZz4zQiSCbZu3Yqjaubm5vBbkPQlhSvh
xQvtkP79+6v+O7LNo3PhhINy3377rdbSCEKHfCwuS0pU5Ogp7GqScLfd+hsK
ddfbjKKqSp1N25m0cAJRhOtI0WmPmLy8PHxr44FbFmzWrhUNKJyAqVOnQnfA
tMGRI0dUCqZalKNVOFVUVOA+rBEjRrBA7IAsLCygHgRrlRUKJ1x/AokFLviY
ONGtcPL19VVJbSRH0Jlz69atcRmbnoRTjfpIZUjWvXt3+WTMjQMvnHDjW7du
3QQnt7KjZ7QKp8zMTEwpvxarRko4YScLwgAkjcChqBLhxFSHVs2GKBdO6NQC
fuP+/v6CfW26FU7yU3VsZhD0JNueKQYdSsCXKI4qKSnB+dmAgADJvDoXTujM
E9Sa1tIIQrdUVFSlKTuf5Xnsuwnugbx2chhzSHw+i+S/V0l5nz/r5nwWkxZO
Bw4cwEeHJuGEjwtg5syZ58+fDw4O/vHHHzEE3gfrdtF7agSBBhNO8ELdr18/
eLgVFRWBQgARpWmcv25oFU5sWzff2+IOLPH2IhBReHKEvHDKysrCMsV9RHZ2
tj6EExtTYlvpeVxdXVXcri79CSfmSEqwdl0Ajo/xwonVmPgSLEqrcKqurkav
TQsWLBBf1NHREYTK33//XSMlnNDn1bx588QZMUpeOIHWQo/ZvIxhgCY5duwY
f2vKhRM6n5w1a5amKF0JJxDV6MZK/BVcvXoVqwudicnAUrKxNQZbSahphFzn
wgndsWoa/iIIvQKPo9ycEoXDRzv23BUMPZ0IfKokY0Lc+zxdnM9icsIJ+sfQ
0NBdu3YxT9GahBNz1MM/2eDbwfPmQHLIu9mpFYY8qw71krOzM/RQqKB0WLi8
cIL+HTUS9EFsUyF0gljPzDsBgylbeeH08uVLcV+P4FuwzoUTvM6johOfdQJS
DZdMsz2D+hNOYDOuwwFhw3sT5YH+kblzZMKJjdiId+Sx3VtahROwdOlSvLpg
0wH7Rm7fvl0jJZzQWeX69esFBbIK17qrztPTU6XhXJKFCxeq/uvdSLlwwhOT
xRqenW6jK+EEWFpaqqS8s+KjSYlfU2ha6PtCPB+HMsbKykpTXp0LJ/R/Jdg6
ShCG5NOn8pfKzme5cSNZoJ1+876sUHelv/5QWVEvR08mJ5x4F9DywgmkhUrt
K1gQDr2VvEveOmBI4VTzpR9Ric56qD8onBwdHSM54BF98uRJUFN4UejrBd7L
0VPf0KFDWf8LAvXs2bNs2fC+fftYYrabjHmd+vTpE+oH6MJ4PQa6i/noZu4Z
NVEr4VTz5UAxkKCCs0Vw2QnUA1tsrz/hBBw7dgwTg3qBBsmfE/fixQvolKGt
QiXgchcmnKCesW6nT5/O9uxDje3fv5/VGH9fmoRTfHw8qjLoppmfq6ysLJwB
ZxvhxcJp1KhRKHt4g6GdMIdRWmfD7927h1NReGwNBlZVVbEfOF+r6AEJqiIv
L0++WHSw0KdPH+bUtEbtS5zta/vjjz9YuFg4Xb9+vZcaJXOImH3ixIl8YGFh
Id4XvNxFaoadioiTepCFjYGXlpaidxHVf48HEqBz4YQO5MUr2AnCkFRWVmW8
KVQogeYtvshrJ5uR++/cSVOSMSkxt+Rj3R09mZxwgs5r8Rew75MUTvD4wh5k
z5494kLwlXDSpEm6ssrAwgmYPXu2pLOaeoLCSQbQSPfv3xfkYr0/9Dhz586d
OXMmztcMGTLEyckJVQHbDxgXF4eJzc3NIf2rV69qviw6Uqm93MDXOmPGDLTE
1dUVVRkU6OPjI2N5bYVTUVER7mlSqdW1p6cnmI2v/9BB8/6R9CqcgL///hu7
WtWXw1+g3vBAQJV6ET70nqCIVP9d4wTKhK8xd3d3XCsOrRpVFpTABkM0Caea
L8vkVOoV5tC9wusGzkC1adMmJiYG04iFEztkDS4K3+ysWbNw+AUujU6o2rdv
D5aIz1Pm2blzJxYC5kGzgbtgJ7AIZg8fPXqE4WAVtJmMjAxNZYJGwpSdO3ee
rQb9OkLJ6NoCJDoYhrpFLJzYHG5QUJDsl/b/YOsSbENjekYe5p/z48eP0Pww
0M7ODnQ7O/VGk38nwYV0IpzS0tKwNJm6JQiDUZD/WeH5LIeOPhQMPfkffahQ
d71/97FuPnxMTjjxvHv3Dn/sYuEET3iMioqKEmf87bffxE+8+mB44STfJdUZ
KyurziJAw0C/M3369KNHj2o6u9bPz493RAC98Lp160pKSqD+MbxDhw4s8apV
q9gO+pcvX9aoxQaoAv7kd+hM9+3bV1FRceLECezKQU7IWJ6bm4vW8stFoHNB
+yWz5OTkQAeNc3YM6LkEXjFBYmHJeHAMA6oCwwX+naqqqjBc+ekV0FxBe7CT
5hijRo1CHZiYmAgF8jNQUGNLliwR1xiEg2DDMVU23AoSEbJr8nsAagGdYCOQ
18XFhe+O3759i3fE/APUqIc92eF0KrXkW7ZsGYhMMJidDSd57AgPVBGObjE6
deoEdyF+mnl7e+PNwiNLvnOH28cFVMwwyFtQUJCQkMDCcY8bNDm4Kd4JJ3yV
eKfyq84QUM5YA7xWh2eR+Bckhj/bmh2Uw4AGv2bNGvnai46OxqIEJy9LAuVD
SsHgGA+uXYT2prUogjAMpaUVya+Uns9i73SQ104zPM8qPJ8lNaWgvLzWjp4a
q3CCPgKjJE8hYa+6ujrR0vDCyQiBzig0NBS6wuvXr6PrSCQ/Px96FsEkCySA
7phPVqPeBXnhwoWQkJCbN2/yyhC+RChBckN3/YFu6/z589Dbnj17Foe/GorC
wsLLly8fVwN1qKRxQo2B8VBj0I3Ws8aePn0aHh4eERGhdTqMAdIRlEZQUBD8
z1sL14WrKz8A6O7du6fUxMTEyKgFKBbajKQPWAFQCGhmNIyfTKytYVrBRWL8
9F+dyczMhMcIyNGwsDA9NXUZ8PAXrRPiBGFIqqqqszIVn8+yuu7nsxQVSg8I
aKKxCqfNmzdjlGRGJqs0rcitLSiccHVE//79Pb4gXu1MEESjISsry9zcvHPn
zlrH1owZ0Mzw+LK2tjbAsfIEUVtA1YC2USKBQs7FCbTTxm3RCnVXVqb0+Swn
TpzA3tzNza3XF0x6nERGOKGDFE3nesCrKGZk56fXExROuPJq+fLlQV8QnzRK
EERjAt/R9LHg0GDgKXX0lkcYLeXllakpihw9PX2cNWbyCV47jZ168smjLCV5
k1/mlZYKN/k+fvwYe/PAwEC2vrqxCif0kGNmZiaZkR1GBi+MOrGEpuoIomlS
VlaGZx6Z6KBTfHy8Sr2tsqENIQg5qqur37/7qHD4aO3mKMHQ05mQ50oyJsS9
L8jXfj5LY52q2759O0ZJLmY+ePAgrjJlm4LrCQkngmiyxMTEwM//wIEDDW1I
XXBzc2vXrp0OndoRhP74+LHu57P4boxQqLsy3hTKn8/SWIUTc8kruRDUy8tL
pdNzwEk4EURT5uHDh/U8BLOhuHXrlpJ9eQRhJFRUVKWnfVCif549zXb1OM1r
JyfXgAf3FZ3P8vJF7qdPGreuN1bhxKJA0ogzoh8n+aNsawUJJ4IgCIIwDHm5
JQodPe3af48JJ9uR++H/46eeKBx6ys0pkdwx0ViFE4BL38VO5D5+/Ihel3l3
1vUEhdMDNSb64kkQBEEQpsLnT+WvkhQ5eroV/dpq+L5x006NmXwcFdSs388/
j1Xk6CntdUGF+nyWysrKB19oxMJpzZo1uLFOMBCNLpfbtGnDO3ipJ+jfwEHN
hAkTdFUs0dR48uRJREREQ1tBmDzwKpeamtrQVhAmz/79+w3vVUw5VVXVbzOU
ns8Scu65YNVTZGSKkowvEnM+FpeVlJQ4fMGkJ5jkhRPoIjyEom3bthcvXoSP
8CTBo0VVUqe71gc8zVaHBRJNk3379vHnqhBE3Rg/fjx/bBBB1I1u3brpytuh
/vhQ8DkxXpGjp1NnYgXaaevO2wp117vsYjZt14hHnGrUKzbx9DEBbm5uunX1
RsKJ0AkknAidQMKJ0AkmIZyAstKKlOR8JfrnXswbhzGHeO00dXaQwmm71OT8
8rL/P5/FpIVTcXGxt5pHjx5pSpOenj5nzpzOnTuj/4GhQ4cGBATo3BISToRO
IOFE6AQSToROMBXhVKOetsvOKlY4fLT8z38EQ09XwpKUZEyMzyn88NmkhZNy
qqurQWXpz0Pdpk2bTEs4LV68+PTp0/q+SnR09KRJk3RSVLt27aqqqmqbC770
7t27K0//66+/Sm7DFDB//vzz58/LJDh79uxvv/2mKTYiImLatGmSUe7u7vb2
9loNMB4cHR0NsBvi4MGDf/75Z/3LefnyJTv4uFbA1+3p6ak8/YgRI+Li4rQm
GzZsmLwrgHXr1u3Zs0dT7IoVK44ePSoZ9c033+h2NYJeeffuXf/+/Q1woYkT
JwqO8K4be/fuXbt2bR0ybtiwYdeuXQoTZ2VlDRgwQGuyjIwMKysr+TQODg5J
SUmaYseNG/fvv/9KRjVv3vzp06dabTASoqKiJkyYqPB8lvMXE+rm6Onxw3TT
6u6Nlo0bN5pWTULXf/z4cX1fBRTCmDFjdFIUKPzKylqfYV1UVGRhYaE8/S+/
/KJET86YMSM4OFgmQWBg4KxZszTF/vPPP+PHj5eMAkFlY2Oj1QDjYfDgwY8f
P9b3VXbv3r1s2bL6lwMqZeDAgXXIGBQUVCvf2nZ2dkr0pLW1tby+WrVq1bZt
2zTFwuuPJq+bnTp1grc5rQYYCdnZ2V27djXAhZydnXVyssz27dtXrlxZh4yg
//38/BQmfvv2rZL3vvT09J49e8qnsbS0TEhI0BQ7cuTIu3fvSkaZmZkZ4Aeu
K65fvz527NiK8qrXqYrOZ3nyKGvctJO8dho+7sjDB1ocPT16kGZa3b3RQsJJ
EhJOkpBwqi0knCQh4VRbSDhJ0siEU416jinnfUm8MkdP23bdEQw9PXqYScLJ
AJw6dYpffN7M6DGYnbq6Sp3LqVVGhYm1JtNavZpiTaX9MAzWiqgh1SqWGpJe
r1Ln6q1tRh02pLrFmlYrala/H7jWDpzv5RtadDQSDh8+jOcme3t7byEIgiAI
orGwefPmxV8wwHwNQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRBNk+rq6jdv3rx//76hDSFMnvLy8ry8vIa2gjBtMjMzExIS6IlE
1IeysrL09HTo2qCDa2hbiMZGeHh49+7d0X3W6NGjlZxmRRCaOHjw4FdffdXQ
VhCmSmxsrIuLC3PoB0+kV69eNbRRhOkBD6KuXbtiK4I/1q9fT/KJ0BXXr183
MzMbNmzYlStXQkJC+vbt265du+zs7Ia2izBJ4uPje/ToQcKJqBsFBQWdO3fu
1q3bkSNHbt++vWfPntatW8NDSX8noRONkjNnzoBe+umnn6BfCwsLGzNmDHw8
fPhwQ9tFNBIcHR2/+eabjx8/4sfExERoYHU78Ihoyhw4cKBXr174fkfCiagb
u3fvhvZz584dFrJz504IuXTpUgNaRZgc9vb2VlZWVVVV+BGEd5cuXaCza1ir
iMZBbm5us2bNFi1axAcOGDDg+++/byiTCBPl7t27e9TY2dmRcCLqxvz589u0
acOHxMTEgHDaunVrA1lEmCQ2NjarV6/mQywtLUeMGNFQ9hCNiWvXrsFDyd/f
nw90d3dv2bIl0+oEUSumT59OwomoG6mpqc+ePeNDdu3aBc+o0NDQhjKJMHWq
q6sDAwOhFfn5+TW0LURj4Ny5c9CcwsLC+EB46YPA4uLihrKKMGlIOBG6Ijg4
GF7ibGxsKisrG9oWwiSxtbXt0KED9Ghjx46tqKhoaHOIxgCuoAsPD+cDf//9
dxJORJ0h4UTUn+Tk5J9//hkeRE5OTjk5OQ1tDmGqHDx4cNOmTcOHD4e2tHDh
woY2h2gMhIaGQnM6f/48Hzhjxgxzc3OaqiPqBgknoj5UVFT4+vpCE+rZs2dQ
UFBDm0M0EiZOnAidHbm2IOpPWlqaeObXxsaGFocTdYaEE1FnKisrp0yZYmZm
tmHDhs+fPze0OYRJkpiY6ObmduvWLT7w6NGj0NlFRUU1lFVEY6Jbt24ODg7s
Y3Z2NvR6K1asaECTCJOGhBNRZ3ARb3BwcEMbQpgwGRkZ0Ip8fHz4QOjUIDA5
ObmBjCKMhTlz5oDsefTokaYEb9688fLy6tWrV4sWLTp06DB+/PjLly8L0uzY
sQOa059//llRUZGWlubk5NSqVav09HQ9204YC6WlpX369Bk4cKBMmujo6GnT
prVv3x4aEjQnaHgvXrzQlJiEU9MkMjISHkfe3t6aElRVVfn7+48cOdLc3Bwe
MoMGDfrrr78KCwv5NKNHj+7UqdNpES9fvtT/HRBGwb59+6AhCfZ685SUlGzc
uNHOzq5ly5Zt2rQZMWLE3r17y8vL+TTQkVlYWJw/f76ysvLTp0/Hjx+HJufs
7Kx/8wmjJjMzs3Xr1qB57t69K5kAwjt27KgSMXfuXN7zPLQrT09PFtu1a9er
V68a6iaIhufUqVPwvX/99deaEmzdurVZs2aCVtS8eXNN609IODVN3NzcoGH8
8ssvkrHQeY0dO1b8OIIukh8EYGdkCIDO1FD3QTQk0B9ZWVnBN759+3bJBNDx
WVtbi1uIvb09L8LT0tK+++47CGfPruHDh9OJGE2cDx8+uLq6YnuQFE75+fn4
CILXN+gZ37x5k5iY6OHhgVk2b94sSB8bG3v48GFICRkNcgeEUZCQkNCjRw8Z
4RQREYFtZsiQIdDSMjIybt26hQ8u0E6PHz8WZ4HG+e7dOz0bThgR8CIGKhrb
iSbhtHTpUkwwf/78pKSk9PT0gIAAaHUQ0r9/f7acCVpOthQlJSUGvCGiYSgv
L1+7di22E0nhBC3N2dkZYlu0aLFu3bpUNRs3boQ3NQgcP368IPHt27ehX4OW
Bt2foW6CMDpiYmJWr149depUc3NzprQlhdPy5cshCpIJJt28vb0h3MLCggRS
U+bkyZPQEhwdHVkrkhRO8OTBtzZ4WeMd6ZSVlQ0YMECldo1iQKsJ46KoqMjP
z8/T0xMbiYxwAqUk+coWHx+PAwI0oNSUSUtLW79+/ezZs/nxRknhdOHCBYwV
OEQ9e/YshkdHRxvKasJkWLlypXiIUiycKioqcJJOvN4A9DnmOnr0qKGsJoyO
gQMHClqRpHCCpoWxERERgijo6TCKRr+bLCkpKeLHkaRwgtc9iGrXrp144Ajn
7wYPHmwQkwlj5PLly+KGJCmcfvrpJ8nWAq943bt3V6kXohjEZMKUePLkyckv
sCFNsXD6999/MSoyMlJcSP/+/SFqwYIFBjGZMEbgfY01JJzzlRROvr6+ENW6
dWuxU6+XL19iG6MVcU2W4uLikxw45yspnGxsbCBq2rRp4ig8UaVFixZlZWX6
N5kwRjIyMviGpEk4QQuBdgJRGzZsEBcCkgmirK2tDWIyYaowdSQWTgEBATKj
ASjahwwZYhAzCWMH1ZGkcJo8ebJKvepSHFVeXt68eXNNDzGiCYLqSCycQHVj
f7du3TpxLhDe+LCCt0KDmEkYO5qE04sXLzBK4LEZ8fPzgygzM7NPnz4ZxEzC
JJERTjij1759e8mMy5YtU6mXOenfRsIEkBFOOKM3e/ZsyYw4dOnh4aFnAwnT
QJNwYssDzp07J8716tUrjD1z5oxBzCSMHU3Cic3oSfpCATWFsXFxcQYxkzBJ
ZIQTDlpCvyaZEd77VOotUfq3kTABZIQTrpQDpS2Z0d7eHmKnTJmiX/sIE0GT
cGJPKkmnzdnZ2RgbEBBgEDMJY0eTcDp8+DBGvX//Xpzrxo0bGCvj2JAgZIQT
PLsgXJNLw40bN6rU3i30byNhAsgIp7Zt20LUypUrJTMOGTIEYidNmqRnAwnT
QJNwunPnDj6p4A9xLugEMZa2qxCIJuF04MABjCooKBDnioyMxNj79+8bxEzC
JJERTvPmzYPwvn37Smb866+/VOoVv/q3kTABtI44afIFbWdnB7Fubm56NpAw
DbSOOIn3Ztao/Rli7KlTpwxhJWH0aBJOR44cwSjJtbvXrl3D2NjYWIOYSZgk
MsIJnTV17dpVMqOXl5fMRB7R1JARTn369IGoX3/9VTJj7969ZSbyiKaGJuEU
Hx+PTyqB7x0kMTFRZiKPaIJoEk7BwcEYlZqaKs4VEhKCsTk5OYawkjBNtO6q
a9myZWlpqTgjuj2cOnWqQcwkjB2tu+p+/vlncVRxcTE2v+PHj+vfRsIE0CSc
ysvLW7VqBVGHDh0S52KuC3Nzcw1hJWH0aBJOTGPHxMSIc+Fz7JtvvjGIjYSp
IiOcnj9/jlE3b94UZ+zQoYOKdpETX5ARTrjDt23bthUVFYIo1vxoFzmBaBJO
wLBhwzTN6mLz0zQ8TjRBNAmnqqoqXHW5adMmca4JEyZAlIuLi0FsJEwVGeFU
WVlpYWEBUYsXLxZEPX78mFbQETwywik6Ohpby7Vr1wRR69evx/5OrKmIpomM
cMIToKDXKy4uFkThFgNy+EwwNAknYMyYMRBlZ2cnCId2hQMCO3fuNIiNhKki
I5wAHx8fiGrTpg0kY4GlpaUODg4qOuCA4JARTtXV1ZaWliq1D0x+JiUpKQmV
OcgnA1pKGDUywik5OdnMzAxilyxZwnuhP3ToED7EJE+LJpomMsKJuXLy9/fn
w6FdqegMVkIB8sIJ2g8emNiyZcsdO3ZERkYeP368b9++KvXpBvfu3TO8wYRx
IiOcari9Kr179w4JCYGGtG7dOhDkEPLdd98VFRUZ2FrCaJERTsDSpUuxIU2Y
MCE8PBzalZubG4Zo2n1ANE1khBMwevRoTLB48eLr169funRp5MiRGEJHRRNa
kRdOQFxcHH/YNGJubh4UFGRgUwljRl441ah3AX/11VeChtSvX7+kpCRD2kkY
OfLCqbKy0t3dXSVi0qRJdEodwSMvnD58+IDzJgJ8fHwMayZhkuTm5p5RI7P7
sqioyM/Pb9SoUQMGDIDGtmrVqpSUFEMaSRg/z549g1YkefwTAzSSl5fXkCFD
oCG5uLjs2rVLfMw90cT5559/oCHJj2aHhYXNnDnTysrK0tLSw8Pj4sWLBjOP
MBXg1R4akuS5KgiI8OPHj0+cOBEeR7a2tr/99pum0QOCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIBoZJSUl29Q8fPiwQQx4
+/YtGvDy5UvluXJycjZv3jxq1KiOHTu2aNGibdu2dnZ2EJKcnKw/U3VLUFAQ
3nhcXJymNBCFaRrK/9KWLVtWr14dHx/fIFcnCIIgCGPj/fv38k7w9M2dO3fQ
AHn3VjyHDh1q3bq12C8fsmzZMv6oEaOFOWG2tbXVdArh8ePHMY344DnD0KVL
l1p9NQRBEATRuDE54bRq1SpMb2Zm5ubmdunSpdu3b1+7ds3X17dPnz4Y5enp
qW+z6w8TTirN56WScCIIgiAIo8K0hBOkwcSDBg1KS0sTxJaUlEyaNAkTXL9+
XT/26gxeOFlYWGRkZIjTkHAiCIIgCKPChIRTWVlZx44dIWW3bt00HX5UVFSE
ff3QoUP1YKwuQeEECrBly5bwx+TJk8VpSDgRBEEQhFFRB+EEogU69Dlz5ri6
uk6fPn3Tpk0yx1elpKQsXbrU2dnZ0dFx/vz5Fy5cEKxzVi6c/vnnH0x54sQJ
mWRwI5hMPIYTERHh4eHh5OQE9vzxxx/io5Pz8/ND1VRXV3/69CkgIGDmzJmT
Jk2CW3j16hWf8urVqydPngwPD5e0ISgoCGIfPHggYycKJ6jAjRs3osFhYWGC
NGLhVFBQcFJNYWGhIHFMTAyE37p1i4U8evQIQiIjI+FvqA0/Pz83N7e5c+cG
BgaWl5djGvjuFi9eDOHz5s27du2aoEwmnCorK4ODg2fMmDF+/HiokytXrmha
SAbhly5dgu8ayvz999/Pnj3LrsV4/vw5GBYdHY2G+fr6QuLMzEyZ6iIIgiAI
Y6C2wgm0RJs2bcRLskGN5Obm8ikrKio8PT2bNWsmSGljY/PmzRuWTLlw+vXX
XzEl2CyTDDTGMzWgfFggyB5ra2ux2dBf82cog4rA8NjY2H79+gkSL1iwgKkF
kFIQ0qpVK/FYEFxayR0x4QRKcsCAAfB3r169BAc6i4UTKzwhIUFQICgiCJ8y
ZQoLWbZsGYSMHTsWpKDgW/vxxx/hWiCBBPc4btw4fqU6Cqf9+/cPGjRIkLJ/
//7ijZA3btwQ1xuEoHhjoFacOHEiaMt27dphMtq7RxAEQRg/tRJOKSkpZmZm
kBg6/cDAwJs3b4aFhS1evBgD4Q8+MdM548ePP3fu3OXLl729vXFaCrpylky5
cMJO3N7evrb3mJOT06NHD8jbvn17Pz8/6MTDw8NnzJiB13VxcWFSgQmn7t27
w035+PiEhISAVrS1tcVw0EuY8tGjRxgSHBwsuNxff/0F4V9//XVpaamMVUw4
8ZWwatUqPo1OhNO3334L1Q6qbP369SCBQDJhCQMHDoT///e//23YsGHHjh0s
/NChQ6wErHPcw+jo6Hj06NGgoKDZs2ejHu7Zs2deXh5LDLWH3y9oqp07d0LV
bdmyBWdXIfzx48csJQqnoUOHomrq27fviBEjoHXJVBdBEARBGAO1Ek7YEX//
/feVlZV8OPS8EN62bVsWApoKi4Uukk8J3S6GM+dFCoXT58+fMdnChQtrcXtq
5syZAxk7d+6cnZ3Nh1+8eFFwaSacLCws+PnHsrKy+fPnYxTr30FywMepU6cK
LofhWnf28cIJwPKbN2/OD7zoRDgBY8aMYeNv1dXVdnZ2GO7u7s5EI4Q7ODio
1INRrAQUTir1oBN/rdDQUAzftGkTqyJQm6iT+dnYoqIivBwoXrgEBrLZSZBV
ERER8hVFEARBEMZDrYTTokWLLC0t+REJJCoqSqX2D8BCFixYgCMSYg9F/fv3
h6gdO3bgR4XCKT8/H5OtWLFCyX0xSktLQQVBxr1794pjnZycVNzCbCacQHII
Un748MHc3Jy3HDQDjsZ8/PiRJQNBiCXgAh4ZBMIJbhCkHYSMGDGCCQxdCSeB
j00Wnpqayof7+vrieBELQeE0evRosf0gkFTcAODVq1dR+L17906QEqQRXo4t
KmPCiZadEwRBEKZF/XfVVVVVoW+lZs2aYQj0+127dlWJJp4Q6PFBn7x+/Ro/
1lY4SZYpA1tSnp6eLo719/dXqSeScFqNCaeYmBhxYtBXKvWMFX6EWxBbvnbt
Wgjp0aMHEz+aEAgn4PTp01jgsWPHMERXU3WClDiZ2KdPH0H4unXr0HgWwtY4
ie0/ePAgWoJKCYf1xo0bJ04JVdGqVSuIhRvEEBROHTt21OT5kyAIgiCMkzoI
p8TExL1793p5ef38889WVlZs1TETTm/fvsWQM2fOaC1NoXCqrKz86quvINmS
JUsU2ongNGL37t0lY9lsHc7iMeEkWKSN+Pj4QNSAAQNYyPDhw1XqFeYsBJd5
r1y5UqthYuEEjBkzBgI7dOiAK+11IpzgQoKUKJxsbGwE4Sic+LpC4SQpI9kq
L5xbxIHE7777zlMKHPTbsmUL5kXhZGtrq7WWCIIgCMKoqJVwysrKwp6dB6SC
q6srL5ySkpIwSry/XozyxeG4dsjBwUHrHS1T8+TJE/gIGkamj2bjUei7gAkn
ycQ4msTPZOGAFagCXEEEYgazg7yRN7JGg3BKSUnBldiggmpqKZxmz54tKZxG
jRolSFlb4QQaSWw/m5SMjY2FjzjGKA9UIOZF4WRnZ6e1lgiCIAjCqFAunKqr
q62srFTqPfheXl4XLlx4/vw5duiXLl3ihVNycrI+hJObmxteReD3QMCZM2ew
QBwnwXU7AwcOlEwcGBiIiQsKCmo44STppAhHnAYNGsRC8vLycBwMagA+rl+/
XlKQSCIpnAA/Pz+04fbt27USTtOmTdOTcOJ9QzGgetESPFgZ9y3C7dzTDHND
QcKJIAiCMFGUCye2xPfy5cuCqLNnz/LCCXp5lBNbt24VlwNiYO3atVFRUfhR
uXBi560cPnxYJhkuWv72229x/QwuxQF7+CXcDG9vbxU3iMSEk2D/HYIb9idM
mMAH4mibh4cH/G1paQl/b9u2Tf5GEE3Cqby8HF1Ogdg7cuSIcuH0/fff60k4
sTVXPLt374aoTp06ocgcNmwYfITaUHLvJJwIgiAIE0W5cMKOsmXLluIoLy8v
XjjVfFEvTk5OgpRlZWW43OXkyZMYolw4ff78GeeDOnbsmJWVJZkmLCwMS2Pq
JSMjA0NCQ0MFiaurq3H6j3lnYsJJvHOwsLCwRYsWEBUQEMCHnzt3TqWerYuN
jcVKePv2rfyNIJqEE3Dv3j00A5UYL5zYNOj9+/f5LJmZmehbSR/Cife7xRg3
bhxEzZo1Cz+iw/Y2bdqIvVeBbVA/5ubmzGYSTgRBEISJolw4sWkjgaPCmJgY
dIDJCyeWWHDYLq44at++PVMCtTrk98KFC5jY1tZWfKDJ5cuXO3TooFLvC8Op
NwSHYqytrXlf4jWcUynmsokJpz59+gj8k4NCwJErwUQhyLm2bduq1IuvVGp3
mlrvApERTjVf/DkwWHXl5eVhiI+PD0sMWsXd3R3D9SGcgIsXL/Ipr127huFX
rlzBkLS0NAwReO6qqqoCk1AECvw4kXAiCIIgTA4mnKD376oB9NUDUgTXLQ8c
ODA8PDw+Pj4qKmr+/PnNmzfv1asXFgJSBP0MVFZW4sRWq1atoPuOjIwMCwvz
8PAQ9621Ek7AihUrmJwYMWLEtm3bDh48CP8PHjwYA0GV4XJlBsghMBL77tOn
TyckJDx+/HjRokUYOG/ePD4lFgJRHTt29Pf3B1kYGhrq6OiI4czfIw/zjamS
ciSuCXnh9OHDB365NX+wCw71gEwFy8+ePXvs2DEcmMJ9bfoQTlCl8P+cOXNA
JoFkgqrDqdhJkybx2VevXo3Wzp07F2oyMTERhC7eJkjrmzdvspQknAiCIAgT
hQknGbp164aJT5w4gYNLPK6urtnZ2ayXX7NmDSYGoYWdpgAvLy9+6XVthVON
ei8bO+BMAKi158+fi7OAwED3lQKmTp3KTy0x4XT06FE8PYQHBIPAZTrC3KR3
6NBB/pgVHnnhVPNl5RjCC6cXL17gSmwe0EioRvQhnEJCQnr37i24orOzs+Cc
vurq6uXLl4sr2cLC4ty5c3xKEk4EQRCEiQIdfbA2+NVBT548Wbhw4dChQ6Hf
nzt3LvPwk5iYuGTJkgULFvAnldSopcjs2bNdXFx++ukn6C7FS5pzcnLwKugQ
QLnZILRA9tjb21tbWw8fPnzp0qWgKGSyfPjwYefOnWC2ra3tsGHD4C7E6Zlw
ys/Phzvy9vb+4YcfIDFIpnv37mkqGXQgOv1ma6WUEBUVBXct6SKJcenSJawc
gaNIuH1Qj25ubqBaQas8fPiwRu0MAVLy9R8bGwsh/FAPEhcXB+HXrl0ThMfH
xwu+bjQgLy+vsLBw+/bt48ePB2k6Y8YMwbfMk5ycDPU2ZMgQqOexY8du3rwZ
vmJBGjRVbABBEARBECYEL5yU53r9+jUuzBbLQoIgCIIgiMZK3YQTnjgzbNgw
/RlGEARBEARhbNRKOCUnJ2dnZ9+8eRMdLCjx9kkQBEEQBNFoqJVwwiNOkNGj
RxvAPIIgCIIgCOMhNjZ2kJqioiKtiVetWmVhYdGlS5eFCxe+e/fOAOYRBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQDc7/ATBuByM=

     "], {{0, 803}, {787, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{178.3333333333335, Automatic},
   ImageSizeRaw->{787, 803},
   PlotRange->{{0, 787}, {0, 803}}]}]], "Input",
 CellChangeTimes->{3.674646772049923*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"combinedData", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{"#", ",", "130"}], "]"}], "&"}], "/@", "RBS1027data"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{"#", ",", "11"}], "]"}], "&"}], "/@", "WTdata"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6750166115055866`*^9, 3.6750166665547347`*^9}, 
   3.6750167131604004`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"combinedData", ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"R", "=", "130"}], ","}], "*)"}], 
        RowBox[{
         RowBox[{"Nns", "=", 
          RowBox[{"4.6", " ", 
           SuperscriptBox["10", "6"]}]}], ",", 
         RowBox[{"\[Beta]\[Epsilon]O2", "=", 
          RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
       FractionBox["1.", 
        RowBox[{"1", "+", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["c", 
                SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["E", 
               RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["c", 
                SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], "+", 
            RowBox[{
             SuperscriptBox["E", 
              RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                FractionBox["c", 
                 SuperscriptBox["E", "KIlog"]]}], ")"}], "2"]}]}]], 
          FractionBox[
           RowBox[{"2", "R"}], "Nns"], 
          SuperscriptBox["E", 
           RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"KAlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "5"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KIlog", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"1.2", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]\[Epsilon]R", ",", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "1.1", "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "c"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<RSquared\>\"", ",", "\"\<BestFitParameters\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6746465500208545`*^9, 3.6746465539800806`*^9}, {
  3.6746466655155926`*^9, 3.674646673598607*^9}, {3.6746467904699707`*^9, 
  3.674646884013178*^9}, {3.674647064120705*^9, 3.6746470922667713`*^9}, {
  3.6750165240895863`*^9, 3.6750165383254004`*^9}, {3.675016663270547*^9, 
  3.675016684637769*^9}}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"relabel", "@", 
      RowBox[{"LogLinearPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"R", "=", "11"}], "}"}], ",", 
            RowBox[{"Normal", "@", "fit"}]}], "]"}], ",", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"R", "=", "130"}], "}"}], ",", 
            RowBox[{"Normal", "@", "fit"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "8"}]], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]]}], "}"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"font", "/@", 
          RowBox[{"{", 
           RowBox[{"\"\<[inducer] (M)\>\"", ",", "\"\<fold-change\>\""}], 
           "}"}]}]}], ",", "opts"}], "]"}]}], ",", 
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"WTdata", ",", "RBS1027data"}], "}"}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EdgeForm", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
               "}"}], "]"}], ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}], 
           "]"}], ",", "0.03"}], "}"}]}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6746465251814337`*^9, 3.6746465378721595`*^9}, {
   3.674647095546779*^9, 3.674647164771964*^9}, {3.6746472169730997`*^9, 
   3.674647285473316*^9}, 3.675016526906748*^9, {3.675016745972277*^9, 
   3.6750167848244996`*^9}, {3.6750168324492235`*^9, 
   3.6750168332022667`*^9}, {3.6750168895334883`*^9, 3.675016908345565*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"R", "=", "11"}], ",", 
             RowBox[{"Nns", "=", 
              RowBox[{"4.6", " ", 
               SuperscriptBox["10", "6"]}]}], ",", 
             RowBox[{"\[Beta]\[Epsilon]O2", "=", 
              RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
           FractionBox["1.", 
            RowBox[{"1", "+", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   FractionBox["c", 
                    SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["E", 
                   RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   FractionBox["c", 
                    SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], "+", 
                RowBox[{
                 SuperscriptBox["E", 
                  RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    FractionBox["c", 
                    SuperscriptBox["E", "KIlog"]]}], ")"}], "2"]}]}]], 
              FractionBox[
               RowBox[{"2", "R"}], "Nns"], 
              SuperscriptBox["E", 
               RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}], ",", 
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"R", "=", "130"}], ",", 
             RowBox[{"Nns", "=", 
              RowBox[{"4.6", " ", 
               SuperscriptBox["10", "6"]}]}], ",", 
             RowBox[{"\[Beta]\[Epsilon]O2", "=", 
              RowBox[{"-", "13.9"}]}]}], "}"}], ",", 
           FractionBox["1.", 
            RowBox[{"1", "+", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   FractionBox["c", 
                    SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["E", 
                   RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   FractionBox["c", 
                    SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], "+", 
                RowBox[{
                 SuperscriptBox["E", 
                  RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    FractionBox["c", 
                    SuperscriptBox["E", "KIlog"]]}], ")"}], "2"]}]}]], 
              FractionBox[
               RowBox[{"2", "R"}], "Nns"], 
              SuperscriptBox["E", 
               RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "8"}]], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "2"}]]}], "}"}]}], "]"}], ",", 
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{"{", 
       RowBox[{"WTdata", ",", "RBS1027data"}], "}"}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"KAlog", ",", 
       RowBox[{"-", "10.194369286164758`"}]}], "}"}], ",", 
     RowBox[{"-", "20"}], ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"KIlog", ",", 
       RowBox[{"-", "13.117506715686844`"}]}], "}"}], ",", 
     RowBox[{"-", "20"}], ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]\[Epsilon]R", ",", 
       RowBox[{"-", "33.15119110398863`"}]}], "}"}], ",", 
     RowBox[{"-", "35"}], ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6746465251814337`*^9, 3.6746465378721595`*^9}, {
   3.674647095546779*^9, 3.674647164771964*^9}, {3.6746472169730997`*^9, 
   3.674647285473316*^9}, 3.675016526906748*^9, {3.675016745972277*^9, 
   3.6750167848244996`*^9}, {3.6750168324492235`*^9, 
   3.6750168332022667`*^9}, {3.6750168895334883`*^9, 3.675017048921605*^9}, {
   3.6750170790013256`*^9, 3.675017085043671*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"function", "[", "R_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nns", "=", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]O2", "=", 
        RowBox[{"-", "13.9"}]}], ",", 
       RowBox[{"KAlog", "=", 
        RowBox[{"-", "10.1944`"}]}], ",", 
       RowBox[{"KIlog", "=", 
        RowBox[{"-", "13.1175`"}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]R", "=", 
        RowBox[{"-", "3"}]}]}], "}"}], ",", 
     FractionBox["1.", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", 
              SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["E", 
             RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox["c", 
              SuperscriptBox["E", "KAlog"]]}], ")"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["E", 
            RowBox[{"-", "\[Beta]\[Epsilon]R"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox["c", 
               SuperscriptBox["E", "KIlog"]]}], ")"}], "2"]}]}]], 
        FractionBox[
         RowBox[{"2", "R"}], "Nns"], 
        SuperscriptBox["E", 
         RowBox[{"-", "\[Beta]\[Epsilon]O2"}]]}]}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"relabel", "@", 
      RowBox[{"LogLinearPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"function", "[", "11", "]"}], ",", 
          RowBox[{"function", "[", "130", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "8"}]], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]]}], "}"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"font", "/@", 
          RowBox[{"{", 
           RowBox[{"\"\<[inducer] (M)\>\"", ",", "\"\<fold-change\>\""}], 
           "}"}]}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"font", "/@", 
            RowBox[{"{", 
             RowBox[{"\"\<WT\>\"", ",", "\"\<RBS 1027\>\""}], "}"}]}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.8", ",", "0.25"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "]"}]}], 
        ",", "opts"}], "]"}]}], ",", 
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"WTdata", ",", "RBS1027data"}], "}"}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EdgeForm", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Thickness", "[", "Tiny", "]"}], ",", "White"}], 
               "}"}], "]"}], ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "0.1"}], "]"}]}], "}"}], 
           "]"}], ",", "0.03"}], "}"}]}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.675017166811348*^9, 3.6750173079464207`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scientificNotation", "[", "x_", "]"}], ":=", 
  RowBox[{"ScientificForm", "[", 
   RowBox[{"x", ",", "3", ",", 
    RowBox[{"ExponentFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[LessEqual]", "#", "\[LessEqual]", "2"}], ",",
          "Null", ",", 
         RowBox[{"3", 
          RowBox[{"Quotient", "[", 
           RowBox[{"#", ",", "3"}], "]"}]}]}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"scientificNotation", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["E", "KAlog"], ",", 
        SuperscriptBox["E", "KIlog"], ",", 
        SuperscriptBox["E", 
         RowBox[{"-", "\[Beta]\[Epsilon]R"}]]}], "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KAlog", "\[Rule]", 
         RowBox[{"-", "10.1944`"}]}], ",", 
        RowBox[{"KIlog", "\[Rule]", 
         RowBox[{"-", "13.1175`"}]}], ",", 
        RowBox[{"\[Beta]\[Epsilon]R", "\[Rule]", 
         RowBox[{"-", "3."}]}]}], "}"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TextGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"font", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
             "@", "\"\<K\>\""}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"font", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
             "@", "\"\<A\>\""}]}], "]"}], ",", 
          RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"font", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
             "@", "\"\<K\>\""}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"font", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}], "&"}], 
             "@", "\"\<I\>\""}]}], "]"}], ",", 
          RowBox[{"font", "@", "\"\< (M)\>\""}]}], "}"}], "]"}], ",", 
       RowBox[{"Superscript", "[", 
        RowBox[{
         RowBox[{"font", "@", "\"\<\[ExponentialE]\>\""}], ",", 
         RowBox[{
         "font", "@", 
          "\"\<-\!\(\*SubscriptBox[\(\[Beta]\[Epsilon]\), \(R\)]\)\>\""}]}], 
        "]"}]}], "}"}], ",", "values"}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"Darker", "[", 
     RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
   RowBox[{"Dividers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Lighter", "[", 
          RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
        RowBox[{"{", "False", "}"}], ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Lighter", "[", 
        RowBox[{
         RowBox[{"Blend", "[", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], "]"}], 
       "}"}], ",", "White"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6750174072110977`*^9, 3.6750174206978693`*^9}, {
  3.675017658735484*^9, 3.6750179967138157`*^9}, {3.675018030445745*^9, 
  3.675018051764964*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Initialization", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.6746463637285633`*^9, 3.674646365486601*^9}}],

Cell[CellGroupData[{

Cell["Formatted Data", "Subsubsection",
 CellChangeTimes->{{3.6746461033781805`*^9, 3.6746461048481827`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RBS1027data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.0", " ", ",", "0.027294150114250234"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "8"}]]}], ",", " ", "0.026980553461530516"}], "}"}], 
     ",", "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "7"}]]}], ",", "0.031877954207338015"}], "}"}], ",", 
     "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"5.", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "7"}]]}], ",", "0.026661374125631916"}], "}"}], ",", 
     "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.5", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], ",", "0.032136195604691664"}], "}"}], ",", 
     "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], ",", "0.03100571451081721"}], "}"}], ",", 
     "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.5", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], ",", "0.048241528190706526"}], "}"}], ",", 
     "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"5.", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], ",", "0.056097510967412584"}], "}"}], ",", 
     "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7.5", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], ",", "0.06388447995800792"}], "}"}], ",", 
     "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], ",", "0.08505663826522537"}], "}"}], ",", 
     "\n", 
     RowBox[{"{", 
      RowBox[{"0.0001", ",", "0.6323881220880977"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"0.001", ",", "0.8780897665854783"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"0.005", ",", "0.9031617579452516"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6746461557534657`*^9, 3.674646292267297*^9}, 
   3.675016429530178*^9, {3.675016497124044*^9, 3.6750165015202956`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"WTdata", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.0", ",", "0.21129877432925506"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "9"}]]}], ",", "0.20173893139035495"}], "}"}], ",", 
     "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "7"}]]}], ",", "0.19232513464237602"}], "}"}], ",", 
     "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], ",", "0.20793565006836978"}], "}"}], ",", 
     "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], ",", "0.37595144628496463"}], "}"}], ",", 
     "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"5.", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]]}], ",", "0.9910028613993924"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], ",", "0.8849406157139863"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"0.0001", ",", "1.2804933230716515"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"0.0005", ",", "1.0555258234156248"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"0.001", ",", "0.9944105604783021"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"0.005", ",", "0.9053472649227764"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6750164309292583`*^9, 3.675016510491809*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Importing Data", "Subsection",
 CellChangeTimes->{{3.6740874095815706`*^9, 3.6740874106589723`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Keep", " ", "collecting", " ", 
    RowBox[{"(", 
     RowBox[{"x", ",", "y"}], ")"}], " ", "data", " ", "points", " ", "in", 
    " ", "Excel", " ", "downwards", " ", "until", " ", "you", " ", "run", " ",
     "into", " ", "an", " ", "empty", " ", "row"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"collect", "[", 
    RowBox[{"data_", ",", 
     RowBox[{"{", 
      RowBox[{"row_", ",", "col_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", "posRow", ",", "next", ",", "maxRow"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"posRow", "=", 
       RowBox[{"row", "+", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"next", "=", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"posRow", ",", "col"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "In", " ", "case", " ", "the", " ", "data", " ", "goes", " ", "all", 
        " ", "the", " ", "way", " ", "to", " ", "the", " ", "bottom", " ", 
        "of", " ", "the", " ", "import"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"maxRow", "=", 
       RowBox[{"First", "@", 
        RowBox[{"Dimensions", "@", "data"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Keep", " ", "acquiring", " ", "data", " ", "until", " ", "you", " ", 
        "run", " ", "out"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"next", "=!=", "\"\<\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"res", ",", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"posRow", ",", 
              RowBox[{"col", ";;", 
               RowBox[{"col", "+", "1"}]}]}], "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"posRow", "++"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Check", " ", "to", " ", "make", " ", "sure", " ", "you", " ", 
           RowBox[{"don", "'"}], "t", " ", "hit", " ", "the", " ", "bottom", 
           " ", "of", " ", "import"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"posRow", "\[LessEqual]", "maxRow"}], ",", 
           RowBox[{"next", "=", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"posRow", ",", "col"}], "]"}], "]"}]}], ",", 
           RowBox[{"next", "=", "\"\<\>\""}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "res"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.652236833975213*^9, 3.6522370315905156`*^9}, {
  3.6522370681046042`*^9, 3.652237181431086*^9}, {3.6522373638465195`*^9, 
  3.6522373741101065`*^9}, {3.6522374292302594`*^9, 3.652237497673174*^9}, {
  3.652237534088257*^9, 3.6522375597077227`*^9}, {3.6522379464108405`*^9, 
  3.6522381073120437`*^9}, {3.6522383393463154`*^9, 3.652238349326886*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"acquire", "[", 
   RowBox[{"data_", ",", "page_", ",", 
    RowBox[{"symbol_:", "\"\<[S]\>\""}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pos", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", "symbol"}], "]"}], ")"}], 
        "&"}], "/@", 
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "data"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"collect", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", "page", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"pos", "[", 
      RowBox[{"[", "page", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6522381499644833`*^9, 3.652238199112294*^9}, {
  3.652238313629844*^9, 3.6522383321689043`*^9}, {3.663176258768691*^9, 
  3.6631762672819138`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"acquire", "[", 
   RowBox[{"data_", ",", "page_", ",", 
    RowBox[{"symbol_:", "\"\<[S]\>\""}], ",", 
    RowBox[{"\"\<Headers\>\"", "\[Rule]", "True"}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pos", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", "symbol"}], "]"}], ")"}], 
        "&"}], "/@", 
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "data"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "page", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
     RowBox[{"pos", "[", 
      RowBox[{"[", "page", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6522381499644833`*^9, 3.652238199112294*^9}, {
  3.652238277948803*^9, 3.6522382810969834`*^9}, {3.6522384691497393`*^9, 
  3.652238487624796*^9}, {3.6525661520954895`*^9, 3.6525661591438923`*^9}, {
  3.663176295576001*^9, 3.6631762981912107`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Mutant Fitting", "Subsection",
 CellChangeTimes->{{3.654190111904699*^9, 3.6541901233199224`*^9}}],

Cell[CellGroupData[{

Cell["General", "Subsubsection",
 CellChangeTimes->{{3.6563826707548685`*^9, 3.656382671207269*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fit", "[", 
    RowBox[{"data_", ",", "f_", ",", "parameters_", ",", 
     RowBox[{"useWeights_:", "True"}]}], "]"}], ":=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "f", ",", "parameters", 
     ",", "x", ",", 
     RowBox[{"If", "[", 
      RowBox[{"useWeights", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Weights", "\[Rule]", 
           RowBox[{"1", "/", 
            SuperscriptBox[
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}], "2"]}]}], 
          ",", 
          RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"1", "&"}], ")"}]}]}], "}"}]}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"{", "}"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "one", " ", "is", " ", "used", " ", "when", " ", "I", " ", 
    "looked", " ", "at", " ", "whether", " ", "the", " ", "fits", " ", 
    "would", " ", "work", " ", "better", " ", "if", " ", "the", " ", "error", 
    " ", "bars", " ", "are", " ", "completely", " ", "ignored"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitNoError", "[", 
   RowBox[{"data_", ",", "f_", ",", "parameters_", ",", 
    RowBox[{"useWeights_:", "False"}]}], "]"}], ":=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "f", ",", "parameters", 
    ",", "x", ",", 
    RowBox[{"If", "[", 
     RowBox[{"useWeights", ",", 
      RowBox[{"Sequence", "@@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Weights", "\[Rule]", 
          RowBox[{"1", "/", 
           SuperscriptBox[
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}], "2"]}]}], 
         ",", 
         RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"1", "&"}], ")"}]}]}], "}"}]}], ",", 
      RowBox[{"Sequence", "@@", 
       RowBox[{"{", "}"}]}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6268309586973333`*^9, 3.6268309704283557`*^9}, {
  3.6268310284390774`*^9, 3.6268310392392964`*^9}, {3.6268316025591526`*^9, 
  3.6268316064017596`*^9}, {3.6268317134089513`*^9, 3.626831724351571*^9}, {
  3.6279063354343567`*^9, 3.6279063569361944`*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}]], "Input",
 CellChangeTimes->{
  3.6265837464740767`*^9, {3.6265861512168417`*^9, 3.626586230928382*^9}, {
   3.6265863436085825`*^9, 3.6265863437333827`*^9}, {3.6266265267859664`*^9, 
   3.6266265314971743`*^9}, {3.6266265723440466`*^9, 3.6266266430125723`*^9}, 
   3.6266278898098855`*^9, {3.626628026680353*^9, 3.6266280519612045`*^9}, 
   3.6266281446063704`*^9, {3.626628251721112*^9, 3.6266282599423265`*^9}, {
   3.6266297582255726`*^9, 3.6266297815164137`*^9}, {3.626629986026975*^9, 
   3.6266299861673756`*^9}, {3.62663060030406*^9, 3.62663065127835*^9}, 
   3.6268296790820675`*^9, {3.6268331745254545`*^9, 3.6268331785200615`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Importing", " ", "Data"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"path", "=", 
     RowBox[{"Check", "[", 
      RowBox[{
       RowBox[{
       "SetDirectory", "[", 
        "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\MWC Mutants - Rob \
Phillips - Started 2014-11-05, Put on Hold 2015-01-11, Resumed \
2015-02-09\\\\MWC Mutants\>\"", "]"}], ",", 
       RowBox[{"StringTake", "[", 
        RowBox[{
         RowBox[{"SystemDialogInput", "[", "\"\<Directory\>\"", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "path", "=", 
      "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Research\\\\MWC Mutants - Rob \
Phillips - Started 2014-11-05, Put on Hold 2015-01-11, Resumed \
2015-02-09\\\\MWC Mutants\>\""}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"This", " ", "next", " ", "path", " ", 
     RowBox[{"doesn", "'"}], "t", " ", "throws", " ", "out", " ", "the", " ", 
     "first", " ", "data", " ", "point"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "path", "=", 
      "\"\<C:\\\\Users\\\\Tal\\\\Desktop\\\\MWC Mutants\\\\Without First \
Point\>\""}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"raw", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"path", "<>", "\"\<\\\\Originals\\\\New Data 1.xlsx\>\""}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"raw", "=", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{"raw", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\>\"", ".."}], "}"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"concentrations", "=", 
     RowBox[{"First", "@", 
      RowBox[{"Transpose", "@", 
       RowBox[{"First", "@", "raw"}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"logConc", "=", 
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", "concentrations"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"n", "=", 
     RowBox[{"Length", "@", "logConc"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "L296Wlog", ",", "Q291Mlog", ",", "F293Rlog", ",", "Q291Rlog", ",", 
       "Q291Ilog", ",", "wtlog", ",", "F161Tlog", ",", "Q291Vlog", ",", 
       "F161Nlog", ",", "F161Wlog", ",", "Q291Klog", ",", "Q18Mlog"}], "}"}], 
     "=", 
     RowBox[{"Transpose", "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "@", 
            RowBox[{"{", 
             RowBox[{"logConc", ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"ErrorBar", "/@", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Transpose", "@", 
             RowBox[{"First", "@", "raw"}]}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Removing", " ", "the", " ", "missing", " ", "data", " ", "point", " ", 
     "from", " ", "Q291V"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Q291Vlog", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{"Q291Vlog", ",", 
       RowBox[{"f_", "/;", 
        RowBox[{"MatchQ", "[", 
         RowBox[{
          RowBox[{"First", "@", "f"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"_", "?", "NumericQ"}], ",", 
            RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], "]"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.6265837464740767`*^9, {3.6265861512168417`*^9, 3.626586230928382*^9}, {
   3.6265863436085825`*^9, 3.6265863437333827`*^9}, {3.6266265267859664`*^9, 
   3.6266265314971743`*^9}, {3.6266265723440466`*^9, 3.6266266430125723`*^9}, 
   3.6266278898098855`*^9, {3.626628026680353*^9, 3.6266280519612045`*^9}, 
   3.6266281446063704`*^9, {3.626628251721112*^9, 3.6266282599423265`*^9}, {
   3.6266297582255726`*^9, 3.6266297815164137`*^9}, {3.626629986026975*^9, 
   3.6266299861673756`*^9}, {3.62663060030406*^9, 3.62663065127835*^9}, 
   3.6268296790820675`*^9, {3.6268331745254545`*^9, 3.626833202197321*^9}, {
   3.6275235005683904`*^9, 3.6275235083900046`*^9}, 3.6275236030983744`*^9, {
   3.6279036194413476`*^9, 3.6279036415153866`*^9}, {3.6279038137232914`*^9, 
   3.6279038170460973`*^9}, {3.627904118907231*^9, 3.627904119234832*^9}, {
   3.627905210185007*^9, 3.627905213322613*^9}, 3.63086335000126*^9, 
   3.6324662531976213`*^9, 3.635572374659041*^9, {3.6356433251484017`*^9, 
   3.635643332845842*^9}, {3.6356433728341293`*^9, 3.635643382657691*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Importing", " ", "Data", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "these", " ", "two", " ", "mutants", " ", "have", " ", "different", " ",
        "x"}], "-", "values"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"raw", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"path", "<>", "\"\<\\\\Originals\\\\New Data 2.xlsx\>\""}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"raw", "=", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{"raw", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\>\"", ".."}], "}"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"concentrations", "=", 
     RowBox[{"First", "@", 
      RowBox[{"Transpose", "@", 
       RowBox[{"First", "@", "raw"}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"logConc", "=", 
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", "concentrations"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"n", "=", 
     RowBox[{"Length", "@", "logConc"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Q18Alog", ",", "Y17Ilog"}], "}"}], "=", 
     RowBox[{"Transpose", "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "@", 
            RowBox[{"{", 
             RowBox[{"logConc", ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"ErrorBar", "/@", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Transpose", "@", 
             RowBox[{"First", "@", "raw"}]}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
       ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.6265837464740767`*^9, {3.6265861512168417`*^9, 3.626586230928382*^9}, {
   3.6265863436085825`*^9, 3.6265863437333827`*^9}, {3.6266265267859664`*^9, 
   3.6266265314971743`*^9}, {3.6266265723440466`*^9, 3.6266266430125723`*^9}, 
   3.6266278898098855`*^9, {3.626628026680353*^9, 3.6266280519612045`*^9}, 
   3.6266281446063704`*^9, {3.626628251721112*^9, 3.6266282599423265`*^9}, {
   3.6266297582255726`*^9, 3.6266297815164137`*^9}, {3.626629986026975*^9, 
   3.6266299861673756`*^9}, {3.62663060030406*^9, 3.62663065127835*^9}, 
   3.6268296790820675`*^9, {3.6268331745254545`*^9, 3.6268331922425036`*^9}, {
   3.6275235240136323`*^9, 3.6275235251836343`*^9}, {3.6279041241800404`*^9, 
   3.62790413532246*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Inducer Mutant Fits", "Subsubsection",
 CellChangeTimes->{{3.65638265496064*^9, 3.6563826675860624`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Using", " ", "canned", " ", "results", " ", "from", " ", "the", " ", 
    "previous", " ", "ind", " ", "mutant", " ", "fitting", " ", "where", " ", 
    Cell["y"], " ", "could", " ", "also", " ", "vary"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"previousBestFits", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"KaInvLog", ",", "9.514025845943292`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"KiInvLog", ",", "12.469857725532671`"}], "}"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"KaInvLog", ",", "11.156786089401011`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"KiInvLog", ",", "13.967231470031129`"}], "}"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"KaInvLog", ",", "9.297879111116284`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"KiInvLog", ",", "12.034840318681624`"}], "}"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"KaInvLog", ",", "4.132639499968897`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"KiInvLog", ",", "6.109121543858226`"}], "}"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"KaInvLog", ",", "7.684483512390647`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"KiInvLog", ",", "10.233410991864535`"}], "}"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"KaInvLog", ",", "9.92655027136128`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"KiInvLog", ",", "12.317933476323462`"}], "}"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"KaInvLog", ",", "9.35524469857104`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"KiInvLog", ",", "11.811909822217332`"}], "}"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"KaInvLog", ",", "10.66134954902419`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"KiInvLog", ",", "13.785104297272628`"}], "}"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"KaInvLog", ",", "54.77161168629509`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"KiInvLog", ",", "53.45030245380851`"}], "}"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"KaInvLog", ",", "5.873050679674656`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"KiInvLog", ",", "8.049628858019119`"}], "}"}]}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Search", " ", "through", " ", "a", " ", "wide", " ", "variety", " ", 
     "of", " ", "starting", " ", "variables", " ", "for", " ", "each", " ", 
     "inducer", " ", "mutant"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"indSearchNewVersion", "[", 
      RowBox[{"data_", ",", "f_"}], "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"initial", "=", "previousBestFits"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"results", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"fitNoError", "[", 
            RowBox[{"data", ",", "f", ",", "#"}], "]"}], "[", 
           "\"\<RSquared\>\"", "]"}], "&"}], "/@", "initial"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fitNoError", "[", 
        RowBox[{"data", ",", "f", ",", 
         RowBox[{"initial", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"results", ",", 
              RowBox[{"Max", "@", "results"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", ")"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6563829169485307`*^9, 3.656382918134133*^9}}],

Cell[BoxData[
 RowBox[{"findInducerMutants", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"function", ",", "nlmWT3", ",", "newFunction", ",", "strings"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"function", "=", 
      FractionBox["1.", 
       RowBox[{"1.", "+", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1.", "+", 
             RowBox[{
              SuperscriptBox["10.", 
               RowBox[{"x", "-", "3."}]], "*", 
              SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.", "+", 
              RowBox[{
               SuperscriptBox["10.", 
                RowBox[{"x", "-", "3."}]], "*", 
               SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], "+", 
           RowBox[{
            SuperscriptBox["E", "yLog"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1.", "+", 
               RowBox[{
                SuperscriptBox["10.", 
                 RowBox[{"x", "-", "3."}]], "*", 
                SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "2."]}]}]], 
         SuperscriptBox["E", "rLog"]}]}]]}], ";", "\n", 
     RowBox[{"nlmWT3", "=", 
      RowBox[{"fitNoError", "[", 
       RowBox[{"wtlog", ",", 
        RowBox[{"{", "function", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"KaInvLog", ",", "11."}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"KiInvLog", ",", "14."}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"yLog", ",", 
            RowBox[{"-", "1.5"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"rLog", ",", "5."}], "}"}]}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"newFunction", "=", 
      RowBox[{"function", "/.", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"nlmWT3", "[", "\"\<BestFitParameters\>\"", "]"}], ",", 
         RowBox[{"f_", "/;", 
          RowBox[{"MatchQ", "[", 
           RowBox[{
            RowBox[{"First", "@", "f"}], ",", 
            RowBox[{"Except", "[", 
             RowBox[{"KaInvLog", "|", "KiInvLog"}], "]"}]}], "]"}]}]}], 
        "]"}]}]}], ";", "\n", 
     RowBox[{"strings", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "<>", "\"\<log\>\""}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
        "\"\<F161N\>\"", ",", "\"\<F161T\>\"", ",", "\"\<F161W\>\"", ",", 
         "\"\<F293R\>\"", ",", "\"\<L296W\>\"", ",", "\"\<Q291I\>\"", ",", 
         "\"\<Q291K\>\"", ",", "\"\<Q291M\>\"", ",", "\"\<Q291R\>\"", ",", 
         "\"\<Q291V\>\""}], "}"}]}]}], ";", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"Quiet", "@", 
        RowBox[{"indSearchNewVersion", "[", 
         RowBox[{"#", ",", "newFunction"}], "]"}]}], "&"}], "/@", 
      RowBox[{"ToExpression", "@", "strings"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6563825971637373`*^9, 3.6563826123767643`*^9}, 
   3.6563828486902037`*^9, {3.6563828928108826`*^9, 3.656382937579767*^9}, {
   3.6563830760492144`*^9, 3.656383094804452*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Making Figures - Rob\[CloseCurlyQuote]s Style", "Subsection",
 CellChangeTimes->{{3.654190111904699*^9, 3.6541901368031483`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "$figurePath", "=", 
   "\"\<C:\\\\Users\\\\Tal\\\\Dropbox\\\\Tal Einav - MWC Mutant \
Paper\\\\Figures\\\\\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.642900035529353*^9, 3.6429000665231256`*^9}, {
   3.642900102772199*^9, 3.642900126340547*^9}, 3.6541901466255665`*^9, 
   3.659320045812229*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Color", " ", "scheme"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"colors", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.368417, 0.506779, 0.709798], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.24561133333333335`, 0.3378526666666667, 0.4731986666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.368417, 0.506779, 0.709798]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.368417, 0.506779, 0.709798]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.368417, 0.506779, 0.709798],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.880722, 0.611041, 0.142051], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.587148, 0.40736066666666665`, 0.09470066666666668],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.880722, 0.611041, 0.142051]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.880722, 0.611041, 0.142051]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.880722, 0.611041, 0.142051],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.560181, 0.691569, 0.194885], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.37345400000000006`, 0.461046, 0.12992333333333334`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.560181, 0.691569, 0.194885]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.560181, 0.691569, 0.194885]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.560181, 0.691569, 0.194885],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.922526, 0.385626, 0.209179], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6150173333333333, 0.25708400000000003`, 0.13945266666666667`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.922526, 0.385626, 0.209179]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.922526, 0.385626, 0.209179]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.922526, 0.385626, 0.209179],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.528488, 0.470624, 0.701351], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3523253333333333, 0.3137493333333333, 0.46756733333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.528488, 0.470624, 0.701351]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.528488, 0.470624, 0.701351]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.528488, 0.470624, 0.701351],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.772079, 0.431554, 0.102387], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5147193333333333, 0.28770266666666666`, 0.06825800000000001],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.772079, 0.431554, 0.102387]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.772079, 0.431554, 0.102387]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.772079, 0.431554, 0.102387],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.363898, 0.618501, 0.782349], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.24259866666666668`, 0.412334, 0.521566],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.363898, 0.618501, 0.782349]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.363898, 0.618501, 0.782349]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.363898, 0.618501, 0.782349],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0.75, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.5, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0.75, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.75, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.75, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.4140625, 0.23828125, 0.6015625], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.2760416666666667, 0.15885416666666669`, 0.4010416666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.4140625, 0.23828125, 0.6015625]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.4140625, 0.23828125, 0.6015625]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.4140625, 0.23828125, 0.6015625],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.2540395555555556, 0.2606591111111111, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.38105933333333336, 0.39098866666666665, 0.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.6100000000000001, 0.22166666666666668`, 0.14166666666666666`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.40666666666666673`, 0.14777777777777779`, 0.09444444444444444],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.6100000000000001, 0.22166666666666668, \
0.14166666666666666]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.6100000000000001, 0.22166666666666668`, 0.14166666666666666`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.6100000000000001, 0.22166666666666668`, 0.14166666666666666`],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6676127131365843`*^9, 3.667612740715887*^9}, 
   3.667612837934798*^9, {3.6676140011473885`*^9, 3.667614010950206*^9}, {
   3.667614812323471*^9, 3.6676148132906733`*^9}, {3.6676178448181343`*^9, 
   3.6676178463625374`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"'", 
    RowBox[{"relabel", "'"}], " ", "makes", " ", "all", " ", "log", " ", 
    "ticks", " ", "take", " ", "the", " ", "form", " ", 
    SuperscriptBox["10", "x"]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"format2", "=", 
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{"#", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"n_", "?", "NumericQ"}], "|", 
          RowBox[{"NumberForm", "[", 
           RowBox[{"n_", ",", "_"}], "]"}]}], "\[RuleDelayed]", 
         RowBox[{"Superscript", "[", 
          RowBox[{"10", ",", 
           RowBox[{"Round", "@", 
            RowBox[{"Log10", "@", "n"}]}]}], "]"}]}]}], "]"}], "&"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"relabel", "=", 
     RowBox[{
      RowBox[{"#", "/.", 
       RowBox[{"CST_Charting`ScaledTicks", "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MapAt", "[", 
           RowBox[{"format2", ",", 
            RowBox[{"CST", "[", "##", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"All", ",", "2"}], "}"}]}], "]"}], "&"}], ")"}]}]}], 
      "&"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.635908699052521*^9, 3.635908713808365*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Use", " ", "Times", " ", "New", " ", "Roman", " ", "font"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"font", "[", 
     RowBox[{"text_", ",", 
      RowBox[{"size_:", "12"}], ",", "opts___"}], "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{"text", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "size", ",", 
      "opts"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6336501326265645`*^9, 3.633650142816147*^9}, {
   3.6336501962752047`*^9, 3.633650206366782*^9}, {3.6359107769783716`*^9, 
   3.635910793370309*^9}, {3.635911238441964*^9, 3.63591124344025*^9}, {
   3.6359164530844183`*^9, 3.6359164532174263`*^9}, {3.63600058594444*^9, 
   3.63600058617844*^9}, {3.6430010469401784`*^9, 3.643001047828229*^9}, {
   3.6674303081546917`*^9, 3.6674303637398715`*^9}, 3.6674304783434267`*^9, {
   3.667431206280562*^9, 3.66743121202089*^9}, {3.667612868180255*^9, 
   3.6676128685234556`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Whether", " ", "to", " ", "show", " ", "multi"}], "-", 
    RowBox[{
    "part", " ", "figures", " ", "in", " ", "a", " ", "row", " ", "or", " ", 
     "column"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"rowQ", "=", "True"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6710846586986246`*^9, 3.6710846715248475`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Image", " ", "Size", " ", "for", " ", "all", " ", "plots"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"size", "=", "295"}], ";"}]}]], "Input",
 CellChangeTimes->{
  3.635910713331731*^9, {3.6429988857315645`*^9, 3.642998886041582*^9}, 
   3.659321167908574*^9, 3.6656098942918663`*^9, {3.665610174333884*^9, 
   3.665610174387887*^9}, {3.6685769202839813`*^9, 3.6685769208840156`*^9}, {
   3.6685771150811234`*^9, 3.668577115339138*^9}, {3.6685771786837606`*^9, 
   3.6685771789807777`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "markers", " ", "for", " ", "the", " ", "theory", " ", 
    "plots", " ", 
    RowBox[{"(", 
     RowBox[{"Figures", " ", "4", " ", "and", " ", "6"}], ")"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"marker", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.2", "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", 
             RowBox[{"-", "0.5"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", 
             RowBox[{"-", "0.5"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", 
             RowBox[{"-", "0.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"markerSize", "=", "0.04"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6677847690766144`*^9, 3.667784771385747*^9}, {
  3.6677848519783564`*^9, 3.6677849037973204`*^9}, {3.6677849555812817`*^9, 
  3.667784965612856*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Format", " ", "for", " ", "plots"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"axesLabel1", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*Cell[TextData[Cell[BoxData[
FormBox[
RowBox[{
RowBox[{
SubscriptBox[\"log\", \"10\"], \"[\", \"inducer\", \"]\"}], \" \", 
RowBox[{\"(\", 
StyleBox[\"M\",
FontSlant->\"Plain\"], \")\"}]}], TraditionalForm]],
FontSize->10]], \"Text\",
CellChangeTimes->{3.6541908437503166`*^9}]\)\>\"", ",", 
        "\"\<\!\(\*Cell[\"fold-change\", \"Text\",
CellChangeTimes->{{3.6541943215768204`*^9, 3.654194322649226*^9}},
FontSize->10]\)\>\""}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"axesLabel2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*Cell[TextData[Cell[BoxData[
FormBox[
RowBox[{\"Bohr\", \" \", \"parameter\", \" \", 
RowBox[{\"(\", 
RowBox[{
SubscriptBox[
StyleBox[\"k\",
FontSlant->\"Italic\"], \"B\"], 
StyleBox[\"T\",
FontSlant->\"Italic\"], \" \", \"units\"}], \")\"}]}], TraditionalForm]],
FontSize->10]], \"Text\",
CellChangeTimes->{{3.6541942913430443`*^9, 3.654194293634257*^9}}]\)\>\"", 
        ",", "\"\<\!\(\*Cell[\"fold-change\", \"Text\",
CellChangeTimes->{{3.6541943215768204`*^9, 3.654194322649226*^9}},
FontSize->10]\)\>\""}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"axesLabel4", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<[\!\(\*
StyleBox[\"R\",
FontSlant->\"Italic\"]\)]/\!\(\*SubscriptBox[\(K\), \(DNA\)]\)\>\"", ",", 
        "\"\<leakiness\>\""}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"axesLabel5", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<[\!\(\*
StyleBox[\"R\",
FontSlant->\"Italic\"]\)]/\!\(\*SubscriptBox[\(K\), \(DNA\)]\)\>\"", ",", 
        "\"\<dynamic range\>\""}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"axesLabel6", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(K\), \(A\)]\)/\!\(\*SubscriptBox[\(K\), \
\(I\)]\)\>\"", ",", "\"\<dynamic range\>\""}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"axesLabel7", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*Cell[TextData[Cell[BoxData[
FormBox[
RowBox[{
RowBox[{\"[\", \"inducer\", \"]\"}], \" \", 
RowBox[{\"(\", 
StyleBox[\"M\",
FontSlant->\"Plain\"], \")\"}]}], TraditionalForm]],
FontSize->10]], \"Text\",
CellChangeTimes->{3.6541908437503166`*^9}]\)\>\"", ",", 
        "\"\<\!\(\*Cell[\"fold-change\", \"Text\",
CellChangeTimes->{{3.6541943215768204`*^9, 3.654194322649226*^9}},
FontSize->10]\)\>\""}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"axesLabel8", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<\>\"", ",", "\"\<\!\(\*Cell[TextData[Cell[BoxData[
FormBox[
RowBox[{
SubscriptBox[\"F\", \"max\"], \"-\", 
RowBox[{
SubscriptBox[\"F\", \"min\"], \" \", 
RowBox[{\"(\", 
RowBox[{
SubscriptBox[
StyleBox[\"k\",
FontSlant->\"Italic\"], \"B\"], 
StyleBox[\"T\",
FontSlant->\"Italic\"], \" \", \"units\"}], \")\"}]}]}], TraditionalForm]],
FontSize->10]], \"Text\",
CellChangeTimes->{{3.6541942913430443`*^9, 3.654194293634257*^9}}]\)\>\""}], 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"axesLabel9", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<\>\"", ",", "\"\<\!\(\*Cell[TextData[Cell[BoxData[
FormBox[
RowBox[{
SubscriptBox[\"F\", \"min\"], \" \", 
RowBox[{\"(\", 
RowBox[{
SubscriptBox[
StyleBox[\"k\",
FontSlant->\"Italic\"], \"B\"], 
StyleBox[\"T\",
FontSlant->\"Italic\"], \" \", \"units\"}], \")\"}]}], TraditionalForm]],
FontSize->10]], \"Text\",
CellChangeTimes->{{3.6541942913430443`*^9, 3.654194293634257*^9}}]\)\>\""}], 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Same", " ", 
      RowBox[{"as", " ", "'"}], 
      RowBox[{"axesLabel2", "'"}], " ", "but", " ", "needs", " ", "more", " ",
       "vertical", " ", "space", " ", "on", " ", "y"}], "-", 
     RowBox[{
     "axis", " ", "label", " ", "to", " ", "account", " ", "for", " ", "the", 
      " ", "fact", " ", "that", " ", "the", " ", "sliders", " ", "at", " ", 
      "the", " ", "top", " ", "are", " ", "part", " ", "of", " ", "the", " ", 
      RowBox[{"image", "'"}], "s", " ", "height"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"axesLabel10", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*Cell[TextData[Cell[BoxData[
FormBox[
RowBox[{\"Bohr\", \" \", \"parameter\", \" \", 
RowBox[{\"(\", 
RowBox[{
SubscriptBox[
StyleBox[\"k\",
FontSlant->\"Italic\"], \"B\"], 
StyleBox[\"T\",
FontSlant->\"Italic\"], \" \", \"units\"}], \")\"}]}], TraditionalForm]],
FontSize->10]], \"Text\",
CellChangeTimes->{{3.6541942913430443`*^9, 3.654194293634257*^9}}]\)\>\"", 
        ",", "\"\<\!\(\*Cell[\"fold-change          \", \"Text\",
CellChangeTimes->{{3.6541943215768204`*^9, 3.654194322649226*^9}},
FontSize->10]\)\>\""}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"axesLabel11", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*SubscriptBox[\(K\), \(DNA\)]\)/[\!\(\*
StyleBox[\"R\",
FontSlant->\"Italic\"]\)]\>\"", ",", "\"\<leakiness\>\""}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"axesLabel12", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*SubscriptBox[\(K\), \(DNA\)]\)/[\!\(\*
StyleBox[\"R\",
FontSlant->\"Italic\"]\)]\>\"", ",", "\"\<dynamic range\>\""}], "}"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"opts", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "*)"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"size", ",", 
          RowBox[{"size", "/", "GoldenRatio"}]}], "}"}]}], ",", 
       RowBox[{"PlotRangePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Make", " ", "plots", " ", "have", " ", "similar", " ", "look", " ", 
         "to", " ", 
         RowBox[{"Rob", "'"}], 
         RowBox[{"s", " ", "'"}], "Physical", " ", "Biology", " ", "of", " ", 
         "the", " ", 
         RowBox[{"Cell", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Prolog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             RowBox[{
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                  Rational[223, 255], 
                  Rational[72, 85], 
                  Rational[40, 51]], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.5830065359477125, 0.5647058823529412, 0.5228758169934641],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None], "\[InvisibleSpace]"}],
             "RGBColor[{223/255, 72/85, 40/51}]"],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                  Rational[223, 255], 
                  Rational[72, 85], 
                  Rational[40, 51]]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[{
             Rational[223, 255], 
             Rational[72, 85], 
             Rational[40, 51]}],
           Editable->False,
           Selectable->False], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}], "]"}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             RowBox[{
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.6666666666666666],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None], "\[InvisibleSpace]"}],
             "GrayLevel[1]"],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["GrayLevelColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           GrayLevel[1],
           Editable->False,
           Selectable->False], ",", 
          RowBox[{"Thickness", "[", "Small", "]"}], ",", 
          RowBox[{"FontColor", "\[Rule]", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              RowBox[{
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None], "\[InvisibleSpace]"}],
              "GrayLevel[0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0],
            Editable->False,
            Selectable->False]}]}], "]"}]}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             RowBox[{
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.6666666666666666],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None], "\[InvisibleSpace]"}],
             "GrayLevel[1]"],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["GrayLevelColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           GrayLevel[1],
           Editable->False,
           Selectable->False], ",", "Thick", ",", 
          RowBox[{"FontColor", "\[Rule]", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              RowBox[{
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None], "\[InvisibleSpace]"}],
              "GrayLevel[0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0],
            Editable->False,
            Selectable->False]}]}], "]"}]}]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.633650456207671*^9, 3.63365046160598*^9}, {
   3.6336505128549113`*^9, 3.6336505545362954`*^9}, {3.6336505845610127`*^9, 
   3.633650595068614*^9}, {3.633650627946494*^9, 3.633650631407692*^9}, {
   3.6336506731000767`*^9, 3.633650696790432*^9}, {3.634793000298256*^9, 
   3.634793006729624*^9}, {3.635910769916968*^9, 3.6359107997086716`*^9}, {
   3.635911246294413*^9, 3.6359112465614285`*^9}, {3.6359120304704638`*^9, 
   3.6359120379298906`*^9}, {3.635912258227491*^9, 3.635912258231491*^9}, 
   3.6359145402740164`*^9, {3.6399430581098833`*^9, 3.6399430921638308`*^9}, {
   3.639943123423619*^9, 3.639943144609831*^9}, {3.6399441505503674`*^9, 
   3.63994415357654*^9}, {3.6434222247078495`*^9, 3.643422230365173*^9}, {
   3.6434222716935368`*^9, 3.643422273862661*^9}, {3.6435896608004665`*^9, 
   3.64358966103648*^9}, {3.643599078814146*^9, 3.6435991047536297`*^9}, {
   3.644802267076435*^9, 3.6448022926808996`*^9}, 3.644807406180375*^9, {
   3.6514522633020015`*^9, 3.651452270895426*^9}, 3.6514525554289737`*^9, {
   3.653186517888594*^9, 3.6531865243279624`*^9}, {3.6531869052247486`*^9, 
   3.653186913576226*^9}, {3.6533390157998714`*^9, 3.653339059598377*^9}, {
   3.653340416829006*^9, 3.653340425847522*^9}, {3.6533446996608157`*^9, 
   3.653344744479371*^9}, {3.6533447748070745`*^9, 3.6533448171730075`*^9}, {
   3.6533448535457263`*^9, 3.6533448581977415`*^9}, {3.653369177562014*^9, 
   3.653369183068329*^9}, {3.6541902141845007`*^9, 3.6541902406545486`*^9}, {
   3.6541902843810277`*^9, 3.6541902902148647`*^9}, {3.6541903604913683`*^9, 
   3.654190400300686*^9}, 3.654190920547269*^9, 3.6541919916682634`*^9, {
   3.6541922759363937`*^9, 3.6541922759363937`*^9}, {3.6541943051641254`*^9, 
   3.654194334187492*^9}, {3.6557780303455467`*^9, 3.655778036485358*^9}, {
   3.6557784148808603`*^9, 3.65577842042087*^9}, {3.656384016525813*^9, 
   3.656384024298627*^9}, {3.6565288123163214`*^9, 3.6565288165665646`*^9}, {
   3.6565288481243696`*^9, 3.656528848431387*^9}, {3.656529789299202*^9, 
   3.656529793080418*^9}, {3.6593197794188147`*^9, 3.6593197873118267`*^9}, {
   3.661731940905587*^9, 3.661731970688678*^9}, {3.6617320058657784`*^9, 
   3.6617320157736106`*^9}, {3.6617334760754957`*^9, 3.661733491132984*^9}, {
   3.66743056145018*^9, 3.6674305721077895`*^9}, {3.6674311420378876`*^9, 
   3.667431153352535*^9}, {3.6674311976190667`*^9, 3.6674311982311015`*^9}, {
   3.6674312329450874`*^9, 3.667431239439459*^9}, {3.6674314027497997`*^9, 
   3.6674314484214115`*^9}, {3.6674315110759954`*^9, 
   3.6674315339113016`*^9}, {3.667431581907047*^9, 3.667431679486628*^9}, {
   3.667431754311908*^9, 3.6674317544859176`*^9}, {3.6674318740177546`*^9, 
   3.667431916099161*^9}, {3.6674326019043875`*^9, 3.6674326042215195`*^9}, {
   3.667433998236253*^9, 3.6674340103979483`*^9}, {3.6676129604146347`*^9, 
   3.6676129999009075`*^9}, {3.667619818894603*^9, 3.667619857134671*^9}, 
   3.667619978121394*^9, {3.667784983970906*^9, 3.6677849844909353`*^9}, {
   3.667936656251902*^9, 3.6679366596990995`*^9}, {3.668223629619296*^9, 
   3.6682236490654087`*^9}, {3.6682238989056983`*^9, 3.6682239050570507`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"From", " ", "Mark", " ", 
    RowBox[{"Caprio", "'"}], "s", " ", 
    ButtonBox[
     RowBox[{"CustomTicks", " ", "package"}],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL["http://scidraw.nd.edu/customticks/CustomTicksGuide.pdf"], None},
     ButtonNote->"http://scidraw.nd.edu/customticks/CustomTicksGuide.pdf"], 
    " ", "which", " ", "I", " ", "put", " ", "in", " ", 
    "\"\<C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.1\\\\AddOns\\\\Packages\\\\CustomTicks\>\""}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"<<", "CustomTicks`"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"LogTicks", ",", 
      RowBox[{"LogPlot", "\[Rule]", "True"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6448056018371725`*^9, 3.6448056337910004`*^9}, {
  3.6448068601611447`*^9, 3.6448069004924517`*^9}, {3.651281557651985*^9, 
  3.6512815611171837`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Many", " ", "plots", " ", "in", " ", "this", " ", "paper", " ", "have", 
     " ", "log", " ", "x"}], "-", 
    RowBox[{
    "axis", " ", "and", " ", "linear", " ", "0", " ", "to", " ", "1", " ", 
     "on", " ", "y"}], "-", "axis"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"log0to1Ticks", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LogTicks", "[", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]], ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "2"}]], ",", 
        RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
      RowBox[{"LinTicks", "[", 
       RowBox[{"0", ",", "1", ",", 
        RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], "}"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.6448068153315806`*^9, 3.644806815984618*^9}, {
  3.6448069182904696`*^9, 3.6448069376095743`*^9}, {3.6448081875800686`*^9, 
  3.644808189421174*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Labels", " ", "for", " ", "multiple", " ", "plots"}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"aLabel", "=", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<A\>\"", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "14"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bLabel", "=", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<B\>\"", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "14"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cLabel", "=", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<C\>\"", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "14"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dLabel", "=", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<D\>\"", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "14"}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6359144183280416`*^9, 3.6359144417953835`*^9}, {
  3.6429988918099117`*^9, 3.642998903745595*^9}, {3.6570776012172575`*^9, 
  3.657077674986883*^9}, {3.6570777110255933`*^9, 3.6570777285872498`*^9}, {
  3.6674306201125355`*^9, 3.6674306220796475`*^9}, {3.667612920909356*^9, 
  3.667612925125765*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Unifying Transcription", "Title",
 CellChangeTimes->{{3.6762056572767673`*^9, 3.6762056596129007`*^9}}],

Cell[TextData[{
 "All of this came from \"C:\\Users\\Tal\\Dropbox\\Research\\MWC Mutants - \
Rob Phillips - Started 2014-11-05, Put on Hold 2015-01-11, Resumed 2015-02-09\
\\Discussions\\2016-06-06 Counting Plasmids\\Unifying Transcription.nb\"\n",
 StyleBox["Note that I have disabled the Initialization section!",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.676205661437005*^9, 3.6762057363652906`*^9}}],

Cell[CellGroupData[{

Cell["Theoretical Framework", "Section",
 CellChangeTimes->{{3.6755198729918675`*^9, 3.6755198768928747`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Using Franz\[CloseCurlyQuote]s framework - important plot that we should \
include in paper!!!\
\>", "Subsection",
 CellChangeTimes->{{3.6748065587096224`*^9, 3.6748065690690403`*^9}}],

Cell[TextData[{
 "We can try and trust Franz\[CloseCurlyQuote]s method, and when we compute \
the exact vs approximate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Lambda]", "r"], "=", 
    FractionBox["R", 
     SubscriptBox["N", "ns"]]}], TraditionalForm]]],
 " methods they match extremely closely.\nAlternatively, we can say that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "\[LessLess]", 
     SubscriptBox["N", "s"], "\[LessLess]", "P"}], ",", 
    RowBox[{"R", "\[LessLess]", 
     SubscriptBox["N", "ns"]}]}], TraditionalForm]]],
 " in which case Franz\[CloseCurlyQuote]s theory should reduce down to this \
form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Lambda]", "r"], "=", 
    FractionBox["R", 
     SubscriptBox["N", "ns"]]}], TraditionalForm]]],
 " as well."
}], "Text",
 CellChangeTimes->{{3.673813731585718*^9, 3.673813802593858*^9}, {
  3.6738138340563283`*^9, 3.673813848371959*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"replace", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", 
      RowBox[{"15", "*", "11"}]}], ",", 
     RowBox[{"\[Epsilon]s", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "15.8"}], "/", "\[Beta]"}]}], ",", 
     RowBox[{"Ns", "\[Rule]", "15"}], ",", 
     RowBox[{"Nns", "\[Rule]", 
      RowBox[{"4.6", " ", 
       SuperscriptBox["10", "6"]}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]r", "/.", 
   RowBox[{"Last", "@", "sol"}]}], "/.", "replace"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["R", "Nns"], "/.", "replace"}]}], "Input",
 CellChangeTimes->{{3.67381361994287*^9, 3.673813672436186*^9}, {
  3.6738143151360683`*^9, 3.6738143462841353`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Taylor series approach - not valid since the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[Beta]"}], " ", 
     SubscriptBox["\[Epsilon]", "s"]}]], TraditionalForm]]],
 " term is huge! However, the exact and approximate expressions seem to agree."
}], "Subsubsection",
 CellChangeTimes->{{3.6738136983018465`*^9, 3.6738137238106976`*^9}}],

Cell["\<\
From Franz\[CloseCurlyQuote]s 2014 PRL paper Equation 9, suppose the total \
number of repressors is given by \
\>", "Text",
 CellChangeTimes->{{3.67376769223446*^9, 3.6737677239493155`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"R", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      SubscriptBox["R", "s"], "\[RightAngleBracket]"}], "+", 
     RowBox[{"\[LeftAngleBracket]", 
      SubscriptBox["R", "ns"], "\[RightAngleBracket]"}]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["N", "s"], 
      FractionBox[
       RowBox[{
        SubscriptBox["\[Lambda]", "r"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Beta]"}], " ", 
          SubscriptBox["\[Epsilon]", "s"]}]]}], 
       RowBox[{"1", "+", 
        RowBox[{
         SubscriptBox["\[Lambda]", "r"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], " ", 
           SubscriptBox["\[Epsilon]", "s"]}]]}]}]]}], "+", 
     RowBox[{
      SubscriptBox["N", "ns"], 
      FractionBox[
       SubscriptBox["\[Lambda]", "r"], 
       RowBox[{"1", "+", 
        SubscriptBox["\[Lambda]", "r"]}]]}]}]}]}], 
  TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.673767724838517*^9, 3.67376778361942*^9}}],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "r"], TraditionalForm]]],
 " is the fugacity of the repressor and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "s"], TraditionalForm]]],
 " is the specific binding energy (relative to the non-specific binding \
energy which is defined to be the zero energy scale). We can solve this \
quadratic equation for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "r"], TraditionalForm]]],
 ","
}], "Text",
 CellChangeTimes->{{3.6737678002022495`*^9, 3.6737678545995455`*^9}}],

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"FullSimplify", "@", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"R", "\[Equal]", 
      RowBox[{
       RowBox[{"Ns", " ", 
        FractionBox[
         RowBox[{"\[Lambda]r", " ", 
          SuperscriptBox["E", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], " ", "\[Epsilon]s"}]]}], 
         RowBox[{"1", "+", 
          RowBox[{"\[Lambda]r", " ", 
           SuperscriptBox["E", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], " ", "\[Epsilon]s"}]]}]}]]}], "+", 
       RowBox[{"Nns", " ", 
        FractionBox["\[Lambda]r", 
         RowBox[{"1", "+", "\[Lambda]r"}]]}]}]}], ",", "\[Lambda]r"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6737670996018186`*^9, 3.6737671845283675`*^9}, {
  3.6737678643651624`*^9, 3.673767864786363*^9}, {3.673768316329156*^9, 
  3.6737683329899855`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Lambda]", "r"], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["N", "s"]}], "+", "R", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Beta]", " ", 
        SubscriptBox["\[Epsilon]", "s"]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["N", "ns"]}], "+", "R"}], ")"}]}], "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["N", "s"], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[Beta]", " ", 
             SubscriptBox["\[Epsilon]", "s"]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["N", "ns"], "-", "R"}], ")"}]}], "-", "R"}], ")"}], 
        "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Beta]", " ", 
          SubscriptBox["\[Epsilon]", "s"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["N", "ns"], "+", 
          SubscriptBox["N", "s"], "-", "R"}], ")"}], " ", "R"}]}]]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["N", "ns"], "+", 
       SubscriptBox["N", "s"], "-", "R"}], ")"}]}]]}], 
  TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.673814445622821*^9, 3.6738144614140577`*^9}, {
  3.6738144932849183`*^9, 3.673814502163334*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Lambda]", "r"], "=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["N", "s"]}], "+", "R"}], ")"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", 
        SubscriptBox["\[Epsilon]", "s"]}]]}], "+", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["N", "ns"]}], "+", "R"}], ")"}], "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], " ", 
             SubscriptBox["\[Epsilon]", "s"]}]], 
           SubscriptBox["N", "s"]}], "+", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["N", "ns"], "-", "R"}], ")"}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], " ", 
             SubscriptBox["\[Epsilon]", "s"]}]], "R"}]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], " ", 
           SubscriptBox["\[Epsilon]", "s"]}]], "(", 
         RowBox[{
          SubscriptBox["N", "ns"], "+", 
          SubscriptBox["N", "s"], "-", "R"}], ")"}], " ", "R"}]}]]}], 
    RowBox[{"2", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", 
        SubscriptBox["\[Epsilon]", "s"]}]], "(", 
      RowBox[{
       SubscriptBox["N", "ns"], "+", 
       SubscriptBox["N", "s"], "-", "R"}], ")"}]}]]}], 
  TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.673814445622821*^9, 3.6738144614140577`*^9}, {
  3.6738144932849183`*^9, 3.673814502163334*^9}, {3.673814586176689*^9, 
  3.6738146129261365`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Lambda]", "r"], "\[TildeTilde]", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"R", "-", 
        SubscriptBox["N", "s"]}], ")"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", 
        SubscriptBox["\[Epsilon]", "s"]}]]}], "-", 
     SubscriptBox["N", "ns"], "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], " ", 
             SubscriptBox["\[Epsilon]", "s"]}]], "(", 
           RowBox[{"R", "-", 
            SubscriptBox["N", "s"]}], ")"}], "-", 
          SubscriptBox["N", "ns"]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Beta]"}], " ", 
          SubscriptBox["\[Epsilon]", "s"]}]], 
        SubscriptBox["N", "ns"], " ", "R"}]}]]}], 
    RowBox[{"2", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", 
       SubscriptBox["\[Epsilon]", "s"]}]], 
     SubscriptBox["N", "ns"]}]]}], TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.673814445622821*^9, 3.6738144614140577`*^9}, {
  3.6738144932849183`*^9, 3.673814502163334*^9}, {3.673814586176689*^9, 
  3.673814729908552*^9}}],

Cell[TextData[{
 "If we assume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "s"], "\[LessLess]", "R"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6738147495483875`*^9, 3.6738147563529997`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Lambda]", "r"], "\[TildeTilde]", 
   FractionBox[
    RowBox[{
     RowBox[{"R", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", 
        SubscriptBox["\[Epsilon]", "s"]}]]}], "-", 
     SubscriptBox["N", "ns"], "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], " ", 
             SubscriptBox["\[Epsilon]", "s"]}]], "R"}], "-", 
          SubscriptBox["N", "ns"]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Beta]"}], " ", 
          SubscriptBox["\[Epsilon]", "s"]}]], 
        SubscriptBox["N", "ns"], " ", "R"}]}]]}], 
    RowBox[{"2", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", 
       SubscriptBox["\[Epsilon]", "s"]}]], 
     SubscriptBox["N", "ns"]}]]}], TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.673814445622821*^9, 3.6738144614140577`*^9}, {
  3.6738144932849183`*^9, 3.673814502163334*^9}, {3.673814586176689*^9, 
  3.673814729908552*^9}, {3.6738147615196085`*^9, 3.67381476745562*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Lambda]", "r"], "\[TildeTilde]", 
   FractionBox[
    RowBox[{
     RowBox[{"R", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", 
        SubscriptBox["\[Epsilon]", "s"]}]]}], "-", 
     SubscriptBox["N", "ns"], "+", 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], " ", 
            SubscriptBox["\[Epsilon]", "s"]}]], "R"}], "+", 
         SubscriptBox["N", "ns"]}], ")"}], "2"]]}], 
    RowBox[{"2", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", 
       SubscriptBox["\[Epsilon]", "s"]}]], 
     SubscriptBox["N", "ns"]}]]}], TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.673814445622821*^9, 3.6738144614140577`*^9}, {
  3.6738144932849183`*^9, 3.673814502163334*^9}, {3.673814586176689*^9, 
  3.673814729908552*^9}, {3.6738147615196085`*^9, 3.673814792017063*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Lambda]", "r"], "\[TildeTilde]", 
   FractionBox[
    RowBox[{
     RowBox[{"R", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", 
        SubscriptBox["\[Epsilon]", "s"]}]]}], "-", 
     SubscriptBox["N", "ns"], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", 
        SubscriptBox["\[Epsilon]", "s"]}]], "R"}], "+", 
     SubscriptBox["N", "ns"]}], 
    RowBox[{"2", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", 
       SubscriptBox["\[Epsilon]", "s"]}]], 
     SubscriptBox["N", "ns"]}]]}], TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.673814445622821*^9, 3.6738144614140577`*^9}, {
  3.6738144932849183`*^9, 3.673814502163334*^9}, {3.673814586176689*^9, 
  3.673814729908552*^9}, {3.6738147615196085`*^9, 3.6738147992322764`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Lambda]", "r"], "\[TildeTilde]", 
   FractionBox[
    RowBox[{"2", "R", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", 
       SubscriptBox["\[Epsilon]", "s"]}]]}], 
    RowBox[{"2", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", 
       SubscriptBox["\[Epsilon]", "s"]}]], 
     SubscriptBox["N", "ns"]}]]}], TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.673814445622821*^9, 3.6738144614140577`*^9}, {
  3.6738144932849183`*^9, 3.673814502163334*^9}, {3.673814586176689*^9, 
  3.673814729908552*^9}, {3.6738147615196085`*^9, 3.673814817830509*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Lambda]", "r"], "\[TildeTilde]", 
   FractionBox["R", 
    SubscriptBox["N", "ns"]]}], TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.673814445622821*^9, 3.6738144614140577`*^9}, {
  3.6738144932849183`*^9, 3.673814502163334*^9}, {3.673814586176689*^9, 
  3.673814729908552*^9}, {3.6738147615196085`*^9, 3.6738148367643433`*^9}}],

Cell[TextData[{
 "The second root is positive while the first is negative. Let us assume that \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", ",", 
    RowBox[{
     SubscriptBox["N", "s"], "\[LessLess]", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Beta]", " ", 
        SubscriptBox["\[Epsilon]", "s"]}]], " ", 
      SubscriptBox["N", "ns"]}]}]}], TraditionalForm]]],
 " so that we can Taylor expand this expression about ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "ns"], "\[Rule]", "\[Infinity]"}], TraditionalForm]]],
 ","
}], "Text",
 CellChangeTimes->{{3.6737678688735704`*^9, 3.6737679180760565`*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"\[Lambda]r", "/.", 
      RowBox[{"Last", "@", "sol"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Nns", ",", "\[Infinity]", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"\[Beta]", " ", "\[Epsilon]s"}], ">", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6737675477750053`*^9, 3.673767628898349*^9}, {
   3.6737676685536184`*^9, 3.673767672906026*^9}, 3.673767933566884*^9, {
   3.6737681137160006`*^9, 3.67376813057963*^9}, 3.673768594696045*^9}],

Cell["In other words, the fugacity can be written as the series", "Text",
 CellChangeTimes->{{3.6737679459689054`*^9, 3.673767956904525*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Lambda]", "r"], "\[TildeTilde]", 
    RowBox[{
     FractionBox["R", 
      SubscriptBox["N", "ns"]], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"R", "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], " ", 
            SubscriptBox["\[Epsilon]", "s"]}]], 
          SubscriptBox["N", "s"]}]}], 
        SubscriptBox["N", "ns"]], "+", 
       RowBox[{"\[CenterDot]", "\[CenterDot]", "\[CenterDot]"}]}], ")"}]}]}], 
   TraditionalForm]]],
 ","
}], "TextNumbered",
 CellChangeTimes->{{3.6737679590105286`*^9, 3.673768026621047*^9}, {
  3.673768608268069*^9, 3.673768608268069*^9}}],

Cell[TextData[{
 "where the first term is the familiar limit ",
 Cell[BoxData[
  FormBox[
   FractionBox["R", 
    SubscriptBox["N", "ns"]], TraditionalForm]]],
 " for a single promoter. "
}], "Text",
 CellChangeTimes->{{3.6737680279470496`*^9, 3.673768085401951*^9}, {
  3.67376813639844*^9, 3.6737681576456776`*^9}}],

Cell[TextData[{
 "Depending on the exact copy numbers Mitch provides, if the next term in the \
series expansion satisfies ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"R", "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", 
         SubscriptBox["\[Epsilon]", "s"]}]], 
       SubscriptBox["N", "s"]}]}], 
     SubscriptBox["N", "ns"]], "\[LessLess]", "1"}], TraditionalForm]]],
 " then the current form of our fold-change expression should suffice."
}], "Text",
 CellChangeTimes->{{3.6737680279470496`*^9, 3.673768085401951*^9}, {
  3.67376813639844*^9, 3.673768191731737*^9}, {3.6737682410902243`*^9, 
  3.6737682448342304`*^9}, {3.6737685246831217`*^9, 3.6737685619203873`*^9}, {
  3.6737686137436786`*^9, 3.6737686398269243`*^9}, {3.673768695909023*^9, 
  3.673768696096223*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "General Analysis - Varying ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "s"], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.673894287882861*^9, 3.6738942942028723`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"replace2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Epsilon]s", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "15.8"}], "/", "\[Beta]"}]}], ",", 
     RowBox[{"Nns", "\[Rule]", 
      RowBox[{"4.6", " ", 
       SuperscriptBox["10", "6"]}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"\[Lambda]r", "/.", 
    RowBox[{"Last", "@", 
     RowBox[{"FullSimplify", "@", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"R", "\[Equal]", 
         RowBox[{
          RowBox[{"Ns", " ", 
           FractionBox[
            RowBox[{"\[Lambda]r", " ", 
             SuperscriptBox["E", 
              RowBox[{
               RowBox[{"-", "\[Beta]"}], " ", "\[Epsilon]s"}]]}], 
            RowBox[{"1", "+", 
             RowBox[{"\[Lambda]r", " ", 
              SuperscriptBox["E", 
               RowBox[{
                RowBox[{"-", "\[Beta]"}], " ", "\[Epsilon]s"}]]}]}]]}], "+", 
          RowBox[{"Nns", " ", 
           FractionBox["\[Lambda]r", 
            RowBox[{"1", "+", "\[Lambda]r"}]]}]}]}], ",", "\[Lambda]r"}], 
       "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sol", ",", 
       FractionBox["R", "Nns"]}], "}"}], "/.", "replace2"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6737670996018186`*^9, 3.6737671845283675`*^9}, {
   3.6737678643651624`*^9, 3.673767864786363*^9}, {3.673768316329156*^9, 
   3.6737683329899855`*^9}, {3.6738943081962996`*^9, 3.673894356124584*^9}, {
   3.673894446821148*^9, 3.673894456430764*^9}, {3.6738944893108244`*^9, 
   3.6738945019654465`*^9}, 3.6738947124160366`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Rvals", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10", ",", "100", ",", "1000"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"sol2", ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "Rvals"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotStyle", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "[", "jj", "]"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "jj", "]"}], ",", 
           "Dashed"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"jj", ",", 
         RowBox[{"Length", "@", "plots"}]}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "Rvals"}]}]}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"\"\<R=\>\"", "<>", 
           RowBox[{"ToString", "@", "#"}]}], ",", "10"}], "]"}], "&"}], "/@", 
       "Rvals"}], ")"}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.2"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{"plots", ",", 
       RowBox[{"{", 
        RowBox[{"Ns", ",", "1", ",", "1000"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(N\), \(s\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Lambda]\), \(r\)]\)\>\""}], "}"}]}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{"leg", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0.01", ",", "0.2"}], "}"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}], ",", 
       "opts"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6738943660014014`*^9, 3.673894522996887*^9}, 
   3.6738945585969563`*^9, {3.673894594690221*^9, 3.6738946878723917`*^9}, {
   3.6738949558073063`*^9, 3.673895021335026*^9}, 3.673895074002533*^9, {
   3.673895159866088*^9, 3.6738952600760775`*^9}, {3.6738952917825365`*^9, 
   3.6738953030255566`*^9}, 3.6738953906761665`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NsVals", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10", ",", "100", ",", "1000"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"First", "@", "sol2"}], ",", 
       RowBox[{"{", 
        RowBox[{"Ns", ",", "NsVals"}], "}"}]}], "]"}], ",", 
     RowBox[{"Last", "@", "sol2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotStyle", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}], "}"}], ",", 
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "plots"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "Rvals"}]}]}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"\"\<\!\(\*SubscriptBox[\(N\), \(s\)]\)=\>\"", "<>", 
           RowBox[{"ToString", "@", "#"}]}], ",", "10"}], "]"}], "&"}], "/@", 
       "Rvals"}], ")"}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.2"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"opts", "=", "opts"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{"plots", ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "1", ",", "1000"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "plotStyle"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<R\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Lambda]\), \(r\)]\)\>\""}], "}"}]}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{"leg", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0.01", ",", "0.78"}], "}"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}], ",", 
       "opts"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6738943660014014`*^9, 3.673894522996887*^9}, 
   3.6738945585969563`*^9, {3.673894594690221*^9, 3.6738946878723917`*^9}, {
   3.673894724616258*^9, 3.6738947579553185`*^9}, {3.673894816545823*^9, 
   3.6738949082468185`*^9}, {3.6738950154538155`*^9, 3.673895069194724*^9}, {
   3.6738952770885086`*^9, 3.6738953887573633`*^9}}],

Cell[BoxData[
 RowBox[{"grid", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"List", "@", 
    RowBox[{"{", 
     RowBox[{"plot1", ",", "plot2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6738950235658293`*^9, 3.673895052136894*^9}, 
   3.6738953771439424`*^9, {3.674806597151702*^9, 3.674806598259304*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<NsEffects.pdf\>\"", ",", "grid"}], "]"}]], "Input",
 CellChangeTimes->{{3.6748066012419095`*^9, 3.6748066113517275`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Does it Matter?", "Subsubsection",
 CellChangeTimes->{{3.673813500800835*^9, 3.6738135030074396`*^9}}],

Cell[TextData[{
 "Mitch used O1, which is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Epsilon]", "s"], "=", 
    RowBox[{
     RowBox[{"-", "15.8"}], 
     SubscriptBox["k", "B"], "T"}]}], TraditionalForm]]],
 ". From Daber\[CloseCurlyQuote]s thesis, both the repressor and reporter \
copy numbers are low, with the ratio of repressor to reportor estimated as \
100:1. "
}], "Text",
 CellChangeTimes->{{3.6738133226276035`*^9, 3.6738134390631*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Lambda]", "r"], "\[TildeTilde]", 
    RowBox[{
     FractionBox["R", 
      SubscriptBox["N", "ns"]], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"R", "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], " ", 
            SubscriptBox["\[Epsilon]", "s"]}]], 
          SubscriptBox["N", "s"]}]}], 
        SubscriptBox["N", "ns"]], "+", 
       RowBox[{"\[CenterDot]", "\[CenterDot]", "\[CenterDot]"}]}], ")"}]}]}], 
   TraditionalForm]]],
 ","
}], "TextNumbered",
 CellChangeTimes->{{3.6737679590105286`*^9, 3.673768026621047*^9}, {
  3.673768608268069*^9, 3.673768608268069*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"100", "*", "10"}], "-", 
   RowBox[{
    SuperscriptBox["E", "15.8"], "1"}]}], 
  RowBox[{"4.6", "*", 
   SuperscriptBox["10", "6"]}]]], "Input",
 CellChangeTimes->{{3.6738134461505165`*^9, 3.6738134669891615`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"replace", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", 
      RowBox[{"100", "*", "10"}]}], ",", 
     RowBox[{"\[Epsilon]s", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "15.8"}], "/", "\[Beta]"}]}], ",", 
     RowBox[{"Ns", "\[Rule]", "1"}], ",", 
     RowBox[{"Nns", "\[Rule]", 
      RowBox[{"4.6", " ", 
       SuperscriptBox["10", "6"]}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]r", "/.", 
   RowBox[{"Last", "@", "sol"}]}], "/.", "replace"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["R", "Nns"], "/.", "replace"}]}], "Input",
 CellChangeTimes->{{3.67381361994287*^9, 3.673813672436186*^9}, {
  3.6738143151360683`*^9, 3.673814317712073*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"replace", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", 
      RowBox[{"100", "*", "10"}]}], ",", 
     RowBox[{"\[Epsilon]s", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "15.8"}], "/", "\[Beta]"}]}], ",", 
     RowBox[{"Ns", "\[Rule]", "1"}], ",", 
     RowBox[{"Nns", "\[Rule]", 
      RowBox[{"4.6", " ", 
       SuperscriptBox["10", "6"]}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]r", "/.", 
   RowBox[{"Last", "@", "sol"}]}], "/.", "replace"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{"\[Lambda]r", "/.", 
          RowBox[{"Last", "@", "sol"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"Nns", ",", "\[Infinity]", ",", "jj"}], "}"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "\[Epsilon]s"}], ">", "0"}]}], "]"}]}], "/.", 
    "replace"}], ",", 
   RowBox[{"{", 
    RowBox[{"jj", ",", "1", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.67381361994287*^9, 3.673813672436186*^9}, 
   3.6738143105290556`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{"\[Lambda]r", "/.", 
        RowBox[{"Last", "@", "sol"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"Nns", ",", "\[Infinity]", ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", " ", "\[Epsilon]s"}], ">", "0"}]}], "]"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"R", "\[Rule]", 
     RowBox[{"100", "*", "10"}]}], ",", 
    RowBox[{"\[Epsilon]s", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "15.8"}], "/", "\[Beta]"}]}], ",", 
    RowBox[{"Ns", "\[Rule]", "1"}], ",", 
    RowBox[{"Nns", "\[Rule]", 
     RowBox[{"4.6", " ", 
      SuperscriptBox["10", "6"]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.673813557956547*^9, 3.6738136150656605`*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"\[Lambda]r", "/.", 
      RowBox[{"Last", "@", "sol"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Nns", ",", "\[Infinity]", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"\[Beta]", " ", "\[Epsilon]s"}], ">", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6737675477750053`*^9, 3.673767628898349*^9}, {
   3.6737676685536184`*^9, 3.673767672906026*^9}, 3.673767933566884*^9, {
   3.6737681137160006`*^9, 3.67376813057963*^9}, 3.673768594696045*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Unifying Simple Transcription", "Subsection",
 CellChangeTimes->{{3.6739250505207615`*^9, 3.6739250555000463`*^9}, {
  3.673925186578621*^9, 3.673925186687821*^9}}],

Cell[CellGroupData[{

Cell["Hernan\[CloseCurlyQuote]s Fold-Change", "Subsubsection",
 CellChangeTimes->{{3.6739251922702556`*^9, 3.67392519895127*^9}}],

Cell[TextData[{
 "From Figure 3 of ",
 ButtonBox["The Transcription Factor Titration Effect Dictates Level of Gene \
Expression",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.rpgroup.caltech.edu/publications/brewster2014.pdf"], None},
  ButtonNote->"http://www.rpgroup.caltech.edu/publications/brewster2014.pdf"],
 " (2014 Cell), Hernan\[CloseCurlyQuote]s fold change equation was"
}], "Text",
 CellChangeTimes->{{3.673925056778119*^9, 3.6739250636475124`*^9}, {
  3.6739252039194803`*^9, 3.673925239339225*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"fold", "-", "change"}], "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "R"}], 
        SubscriptBox["N", "ns"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", 
         SubsuperscriptBox["\[Epsilon]", "DNA", 
          RowBox[{"(", "Hernan", ")"}]]}]]}]}]]}], TraditionalForm]]],
 ","
}], "TextNumbered",
 CellChangeTimes->{{3.6739250653286085`*^9, 3.6739250769902754`*^9}, {
  3.673925260339113*^9, 3.6739253224600873`*^9}, {3.673925478504051*^9, 
  3.67392548287746*^9}, {3.6739255723228226`*^9, 3.673925577900033*^9}, {
  3.6742337405113964`*^9, 3.6742337439068055`*^9}}],

Cell[TextData[{
 "where the factor of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "R"}], TraditionalForm]]],
 " comes from working with tetrameric Lac repressor (rather than Mitch\
\[CloseCurlyQuote]s cut, dimeric form). Hernan measured the total number of \
repressors to be ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", 
    RowBox[{"11", "\[PlusMinus]", 
     RowBox[{"2", 
      FractionBox["repressors", "cell"]}]}]}], TraditionalForm]]],
 ", and he assumed that all of these were in the active state (i.e. there was \
no leakiness between active and inactive repressors)."
}], "Text",
 CellChangeTimes->{{3.673925328470098*^9, 3.6739253618451643`*^9}, {
  3.673925404660244*^9, 3.673925413503067*^9}, {3.674233744939011*^9, 
  3.67423376298129*^9}}],

Cell[TextData[{
 "But let\[CloseCurlyQuote]s instead assume that only a fraction ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", 
       SubscriptBox["\[Epsilon]", "R"]}]]}]], TraditionalForm]]],
 " of repressors are active, where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "R"], TraditionalForm]]],
 " is the difference in energy between the repressor\[CloseCurlyQuote]s \
active and inactive states (if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Epsilon]", "R"], "<", "0"}], TraditionalForm]]],
 ", the inactive state is more energetically favorable). Since inactive \
repressors do not bind to DNA, the fold-change equation would take the \
altered form"
}], "Text",
 CellChangeTimes->{{3.673925447825996*^9, 3.6739255486757803`*^9}, {
  3.673925601621075*^9, 3.673925646778564*^9}, {3.674091478072169*^9, 
  3.674091511992236*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"fold", "-", "change"}], "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], " ", 
           SubscriptBox["\[Epsilon]", "R"]}]]}]], 
       FractionBox[
        RowBox[{"2", "R"}], 
        SubscriptBox["N", "ns"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", 
         SubscriptBox["\[Epsilon]", "DNA"]}]]}]}]]}], TraditionalForm]]],
 ","
}], "TextNumbered",
 CellChangeTimes->{{3.6739250653286085`*^9, 3.6739250769902754`*^9}, {
  3.673925260339113*^9, 3.6739253224600873`*^9}, {3.673925478504051*^9, 
  3.67392548287746*^9}, {3.6739255723228226`*^9, 3.673925577900033*^9}, {
  3.6739256303393335`*^9, 3.6739256546731777`*^9}, {3.6742337660553017`*^9, 
  3.6742337660553017`*^9}}],

Cell["\<\
which can be rectified with Hernan\[CloseCurlyQuote]s data by shifting his \
DNA binding energy,\
\>", "Text",
 CellChangeTimes->{{3.67392565587438*^9, 3.6739256811060295`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], " ", 
      SubsuperscriptBox["\[Epsilon]", "DNA", 
       RowBox[{"(", "Hernan", ")"}]]}]], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", 
         SubscriptBox["\[Epsilon]", "R"]}]]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", 
       SubscriptBox["\[Epsilon]", "DNA"]}]]}]}], TraditionalForm]]],
 ","
}], "TextNumbered",
 CellChangeTimes->{{3.673925729558719*^9, 3.6739257541135635`*^9}}],

Cell["or equivalently", "Text",
 CellChangeTimes->{{3.6739257559719667`*^9, 3.6739257571931696`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Epsilon]", "DNA", 
     RowBox[{"(", "Hernan", ")"}]], "=", 
    RowBox[{
     SubscriptBox["\[Epsilon]", "DNA"], "+", 
     RowBox[{
      SubscriptBox["k", "B"], "T", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Beta]"}], " ", 
          SubscriptBox["\[Epsilon]", "R"]}]]}], "]"}]}]}]}], 
   TraditionalForm]]],
 "."
}], "TextNumbered",
 CellChangeTimes->{{3.6739256828688326`*^9, 3.6739257051140757`*^9}, {
   3.6739258113848677`*^9, 3.6739258204698896`*^9}, 3.673928886468335*^9}],

Cell[TextData[{
 "From Mitch\[CloseCurlyQuote]s data, we found the fit value ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], " ", 
      SubscriptBox["\[Epsilon]", "R"]}]], "=", "1.1"}], TraditionalForm]]],
 ", but for now I will keep the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[Beta]"}], " ", 
     SubscriptBox["\[Epsilon]", "R"]}]], TraditionalForm]]],
 " term completely generaltry to be self-consistent between Hernan\
\[CloseCurlyQuote]s data and the IPTG induction data that we recently got \
without our own group."
}], "Text",
 CellChangeTimes->{{3.67409154216309*^9, 3.674091623102244*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Our Induction Data", "Subsubsection",
 CellChangeTimes->{{3.6739288664306927`*^9, 3.6739288685576973`*^9}}],

Cell["\<\
We proceed to our IPTG titration experiments, where the fold-change takes the \
form\
\>", "Text",
 CellChangeTimes->{{3.6739258975638285`*^9, 3.6739259072554455`*^9}, {
  3.67392889682196*^9, 3.6739289111215897`*^9}, {3.674091627189451*^9, 
  3.6740916374662743`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"fold", "-", "change"}], "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["c", 
            SubscriptBox["K", "A"]]}], ")"}], "2"], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["c", 
             SubscriptBox["K", "A"]]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], " ", 
             SubscriptBox["\[Epsilon]", "R"]}]], "(", 
           RowBox[{"1", "+", 
            FractionBox["c", 
             SubscriptBox["K", "I"]]}], ")"}], "2"]}]], 
       FractionBox[
        RowBox[{"2", "R"}], 
        SubscriptBox["N", "ns"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", 
         SubscriptBox["\[Epsilon]", "DNA"]}]]}]}]]}], TraditionalForm]]],
 "."
}], "TextNumbered",
 CellChangeTimes->{{3.6739250653286085`*^9, 3.6739250769902754`*^9}, {
  3.673925260339113*^9, 3.6739253224600873`*^9}, {3.673925478504051*^9, 
  3.67392548287746*^9}, {3.6739255723228226`*^9, 3.673925577900033*^9}, {
  3.673925912626058*^9, 3.673925943471718*^9}, {3.674233770902315*^9, 
  3.674233770902315*^9}}],

Cell[TextData[{
 "In our case, the repressor is integrated into the genome and known to be \
wild type (which means ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", 
    RowBox[{"11", "\[PlusMinus]", 
     RowBox[{"2", 
      FractionBox["repressors", "cell"]}]}]}], TraditionalForm]]],
 " according to Hernan). We can use Hernan\[CloseCurlyQuote]s energy ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Epsilon]", "DNA", 
    RowBox[{"(", "Hernan", ")"}]], TraditionalForm]]],
 " instead of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "DNA"], TraditionalForm]]],
 ", provided that we add the corresponding ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", 
       SubscriptBox["\[Epsilon]", "R"]}]]}], ")"}], TraditionalForm]]],
 " factor,"
}], "Text",
 CellChangeTimes->{{3.6739289273608217`*^9, 3.673929029390622*^9}, {
  3.674091653907104*^9, 3.67409167214895*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"fold", "-", "change"}], "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["c", 
            SubscriptBox["K", "A"]]}], ")"}], "2"], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["c", 
             SubscriptBox["K", "A"]]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], " ", 
             SubscriptBox["\[Epsilon]", "R"]}]], "(", 
           RowBox[{"1", "+", 
            FractionBox["c", 
             SubscriptBox["K", "I"]]}], ")"}], "2"]}]], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], " ", 
           SubscriptBox["\[Epsilon]", "R"]}]]}], ")"}], 
       FractionBox[
        RowBox[{"2", "R"}], 
        SubscriptBox["N", "ns"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", 
         SubsuperscriptBox["\[Epsilon]", "DNA", 
          RowBox[{"(", "Hernan", ")"}]]}]]}]}]]}], TraditionalForm]]],
 "."
}], "TextNumbered",
 CellChangeTimes->{{3.6739250653286085`*^9, 3.6739250769902754`*^9}, {
  3.673925260339113*^9, 3.6739253224600873`*^9}, {3.673925478504051*^9, 
  3.67392548287746*^9}, {3.6739255723228226`*^9, 3.673925577900033*^9}, {
  3.673925912626058*^9, 3.673925943471718*^9}, {3.673929034136031*^9, 
  3.6739290496234612`*^9}, {3.6742337723013215`*^9, 3.6742337723013215`*^9}}],

Cell[TextData[{
 "When we calculate the leakiness in the limit ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "\[Rule]", "0"}], TraditionalForm]]],
 ", the extra factors of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", 
       SubscriptBox["\[Epsilon]", "R"]}]]}], ")"}], TraditionalForm]]],
 " cancel and we return to Hernan\[CloseCurlyQuote]s form, as we must:"
}], "Text",
 CellChangeTimes->{{3.6740890175797586`*^9, 3.6740890185313606`*^9}, {
  3.6740890502426167`*^9, 3.6740891336633735`*^9}, {3.6740917453068843`*^9, 
  3.67409175966391*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"leakiness", "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "R"}], 
        SubscriptBox["N", "ns"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", 
         SubsuperscriptBox["\[Epsilon]", "DNA", 
          RowBox[{"(", "Hernan", ")"}]]}]]}]}]]}], TraditionalForm]]],
 "."
}], "TextNumbered",
 CellChangeTimes->{{3.6739250653286085`*^9, 3.6739250769902754`*^9}, {
  3.673925260339113*^9, 3.6739253224600873`*^9}, {3.673925478504051*^9, 
  3.67392548287746*^9}, {3.6739255723228226`*^9, 3.673925577900033*^9}, {
  3.673925912626058*^9, 3.673925943471718*^9}, {3.673929034136031*^9, 
  3.6739290496234612`*^9}, {3.6740891368613787`*^9, 3.674089141996788*^9}, {
  3.6742337740941267`*^9, 3.6742337740941267`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "R"}], "Nns"], 
      SuperscriptBox["E", 
       RowBox[{"-", "\[Beta]\[Epsilon]DNA"}]]}]}]], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", "11"}], ",", 
     RowBox[{"Nns", "\[Rule]", 
      RowBox[{"4.6", " ", 
       SuperscriptBox["10", "6"]}]}]}], "}"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Beta]\[Epsilon]DNA", "\[Rule]", 
      RowBox[{"-", "15.3"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]\[Epsilon]DNA", "\[Rule]", 
      RowBox[{"-", "13.9"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.674319403296159*^9, 3.6743194525372467`*^9}}],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s take a look at the current state of our data that \
has recently been collected by Manuel and Stephanie, with help from Griffin \
for WT ",
 StyleBox["E. coli ",
  FontSlant->"Italic"],
 "with the O1 and O2 operators. Using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", "11"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "ns"], "=", 
    RowBox[{"4.6", " ", 
     SuperscriptBox["10", "6"]}]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Epsilon]", 
     RowBox[{"DNA", ",", "O1"}], 
     RowBox[{"(", "Hernan", ")"}]], "=", 
    RowBox[{
     RowBox[{"-", "15.3"}], 
     SubscriptBox["k", "B"], "T"}]}], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Epsilon]", 
     RowBox[{"DNA", ",", "O2"}], 
     RowBox[{"(", "Hernan", ")"}]], "=", 
    RowBox[{
     RowBox[{"-", "13.9"}], 
     SubscriptBox["k", "B"], "T"}]}], TraditionalForm]]],
 ", we predict leakiness values of 0.045 for O1 and 0.161 for O2. This is \
nothing more than Hernan\[CloseCurlyQuote]s theory, so we really should get \
these results. "
}], "Text",
 CellChangeTimes->{{3.6740891439935913`*^9, 3.674089465235038*^9}, {
   3.6740895238401637`*^9, 3.6740895600444736`*^9}, 3.6740896462444315`*^9, {
   3.674091969446928*^9, 3.6740919696497283`*^9}, {3.674319366496235*^9, 
   3.674319370536642*^9}, {3.674319505244744*^9, 3.6743195093647547`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        LineBox[{{-20.72326583694641, 
         0.073643907890157}, {-18.420680743952367`, 
         0.041358790755154924`}, {-16.11809565095832, 
         0.07523267213459361}, {-13.815510557964274`, 
         0.1037108239155156}, {-13.122363377404328`, 
         0.11683409842681405`}, {-12.206072645530174`, 
         0.17796740037752248`}, {-11.512925464970229`, 
         0.3107677743841648}, {-9.903487552536127, 
         0.9681916453828044}, {-9.210340371976182, 
         1.1699395617070358`}, {-7.600902459542082, 
         1.2688889992513745`}, {-6.907755278982137, 
         1.2921031082918661`}, {-5.298317366548036, 1.3016896680411727`}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        LineBox[{{-20.72326583694641, 
         0.28328028492216123`}, {-18.420680743952367`, 
         0.29409831321685603`}, {-16.11809565095832, 
         0.2954530750152762}, {-13.815510557964274`, 
         0.32895706984914097`}, {-13.122363377404328`, 
         0.4070497689088133}, {-12.206072645530174`, 
         0.49468309569697033`}, {-11.512925464970229`, 
         0.6741553288506182}, {-9.903487552536127, 
         1.0938175876519525`}, {-9.210340371976182, 
         1.0301452002932456`}, {-7.600902459542082, 
         1.0389072201525633`}, {-6.907755278982137, 
         0.9717382538203762}, {-5.298317366548036, 0.9954841937815303}}]}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"\[FilledCircle]\"\>",
           StripOnInput->False,
           FontSize->8.96], {0., 0.}], {{{-20.72326583694641, 
         0.073643907890157}}, {{-18.420680743952367`, 
         0.041358790755154924`}}, {{-16.11809565095832, 
         0.07523267213459361}}, {{-13.815510557964274`, 
         0.1037108239155156}}, {{-13.122363377404328`, 
         0.11683409842681405`}}, {{-12.206072645530174`, 
         0.17796740037752248`}}, {{-11.512925464970229`, 0.3107677743841648}},
          {{-9.903487552536127, 0.9681916453828044}}, {{-9.210340371976182, 
         1.1699395617070358`}}, {{-7.600902459542082, 
         1.2688889992513745`}}, {{-6.907755278982137, 
         1.2921031082918661`}}, {{-5.298317366548036, 
         1.3016896680411727`}}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"\[FilledSquare]\"\>",
           StripOnInput->False,
           FontSize->8.96], {0., 0.}], {{{-20.72326583694641, 
         0.28328028492216123`}}, {{-18.420680743952367`, 
         0.29409831321685603`}}, {{-16.11809565095832, 
         0.2954530750152762}}, {{-13.815510557964274`, 
         0.32895706984914097`}}, {{-13.122363377404328`, 
         0.4070497689088133}}, {{-12.206072645530174`, 
         0.49468309569697033`}}, {{-11.512925464970229`, 
         0.6741553288506182}}, {{-9.903487552536127, 
         1.0938175876519525`}}, {{-9.210340371976182, 
         1.0301452002932456`}}, {{-7.600902459542082, 
         1.0389072201525633`}}, {{-6.907755278982137, 
         0.9717382538203762}}, {{-5.298317366548036, 
         0.9954841937815303}}}]}, {}}}, {}}, InsetBox[
     TemplateBox[{
      StyleBox["\"O1\"", FontFamily -> "Times", 12, StripOnInput -> False],
       StyleBox["\"O2\"", FontFamily -> "Times", 12, StripOnInput -> False]},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], FontSize -> 8.96,
                     Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], FontSize -> 8.96,
                     Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.6}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                   None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
                Selectable -> False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Spacings", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"0.5`", ",", "0.6`"}], "}"}]}]}], "]"}]& )], 
     Scaled[{0.1, 0.73}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{-21.560255518249747`, 0},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Exp[
        Part[#, 1]], 
       Part[#, 2]}& ), "CopiedValueFunction" -> ({
       Exp[
        Part[#, 1]], 
       Part[#, 2]}& )},
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameStyle->Directive[
     GrayLevel[1], 
     Thickness[Large], FontColor -> GrayLevel[0]],
   FrameTicks->{{{{0., 
        FormBox["\"0.0\"", TraditionalForm], {0.02, 0}, {}}, {0.2, 
        FormBox["\"0.2\"", TraditionalForm], {0.02, 0}, {}}, {0.4, 
        FormBox["\"0.4\"", TraditionalForm], {0.02, 0}, {}}, {
       0.6000000000000001, 
        FormBox["\"0.6\"", TraditionalForm], {0.02, 0}, {}}, {0.8, 
        FormBox["\"0.8\"", TraditionalForm], {0.02, 0}, {}}, {1., 
        FormBox["\"1.0\"", TraditionalForm], {0.02, 0}, {}}, {
       1.2000000000000002`, 
        FormBox["\"1.2\"", TraditionalForm], {0.02, 0}, {}}, {
       1.4000000000000001`, 
        FormBox["\"1.4\"", TraditionalForm], {0.02, 0}, {}}, {0.05, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.1, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
       0.15000000000000002`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.25, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
       0.30000000000000004`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
       0.35000000000000003`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.45, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.5, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.55, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.6500000000000001, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.7000000000000001, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.7500000000000001, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.8500000000000001, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.9, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.9500000000000001, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.05, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.1, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.15, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
       1.2500000000000002`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
       1.3000000000000003`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.35, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}}, {{0., 
        FormBox["\"0.0\"", TraditionalForm], {0.02, 0}, {}}, {0.2, 
        FormBox["\"0.2\"", TraditionalForm], {0.02, 0}, {}}, {0.4, 
        FormBox["\"0.4\"", TraditionalForm], {0.02, 0}, {}}, {
       0.6000000000000001, 
        FormBox["\"0.6\"", TraditionalForm], {0.02, 0}, {}}, {0.8, 
        FormBox["\"0.8\"", TraditionalForm], {0.02, 0}, {}}, {1., 
        FormBox["\"1.0\"", TraditionalForm], {0.02, 0}, {}}, {
       1.2000000000000002`, 
        FormBox["\"1.2\"", TraditionalForm], {0.02, 0}, {}}, {
       1.4000000000000001`, 
        FormBox["\"1.4\"", TraditionalForm], {0.02, 0}, {}}, {0.05, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.1, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
       0.15000000000000002`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.25, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
       0.30000000000000004`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
       0.35000000000000003`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.45, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.5, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.55, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.6500000000000001, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.7000000000000001, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.7500000000000001, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.8500000000000001, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.9, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.9500000000000001, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.05, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.1, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.15, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
       1.2500000000000002`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
       1.3000000000000003`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.35, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}}}, {{{-20.72326583694641, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-18.420680743952367`, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "8"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-16.11809565095832, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "7"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-13.815510557964274`, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-11.512925464970229`, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-9.210340371976182, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "4"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-6.907755278982137, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "3"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-4.605170185988091, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-20.030118656386467`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-19.6246535482783, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-19.33697147582652, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-19.11382792451231, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-18.931506367718356`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-18.7773556878911, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-18.643824295266576`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-18.526041259610192`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-17.72753356339242, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-17.322068455284256`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-17.034386382832476`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-16.811242831518264`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-16.62892127472431, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-16.474770594897052`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-16.34123920227253, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-16.223456166616145`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-15.424948470398375`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-15.01948336229021, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-14.73180128983843, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-14.508657738524219`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-14.326336181730264`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-14.172185501903007`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-14.038654109278484`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-13.9208710736221, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-13.122363377404328`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-12.716898269296165`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-12.429216196844383`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-12.206072645530174`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-12.02375108873622, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-11.86960040890896, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-11.736069016284437`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-11.618285980628054`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-10.819778284410283`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-10.414313176302118`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-10.126631103850338`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.903487552536129, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.721165995742172, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.567015315914915, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.433483923290392, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.315700887634009, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-8.517193191416236, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-8.111728083308073, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.824046010856292, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.600902459542082, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.418580902748128, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.264430222920869, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.130898830296347, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.013115794639964, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-6.214608098422191, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.809142990314027, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.521460917862246, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.298317366548037, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.115995809754082, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-4.961845129926823, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-4.8283137373023015`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-4.710530701645918, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}}, {{-20.72326583694641, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-18.420680743952367`, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "8"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-16.11809565095832, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "7"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-13.815510557964274`, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-11.512925464970229`, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-9.210340371976182, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "4"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-6.907755278982137, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "3"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-4.605170185988091, 
        FormBox[
         TagBox[
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]], DisplayForm], TraditionalForm], {
        0.02, 0}, {}}, {-20.030118656386467`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-19.6246535482783, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-19.33697147582652, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-19.11382792451231, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-18.931506367718356`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-18.7773556878911, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-18.643824295266576`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-18.526041259610192`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-17.72753356339242, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-17.322068455284256`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-17.034386382832476`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-16.811242831518264`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-16.62892127472431, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-16.474770594897052`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-16.34123920227253, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-16.223456166616145`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-15.424948470398375`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-15.01948336229021, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-14.73180128983843, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-14.508657738524219`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-14.326336181730264`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-14.172185501903007`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-14.038654109278484`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-13.9208710736221, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-13.122363377404328`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-12.716898269296165`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-12.429216196844383`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-12.206072645530174`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-12.02375108873622, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-11.86960040890896, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-11.736069016284437`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-11.618285980628054`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-10.819778284410283`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-10.414313176302118`, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-10.126631103850338`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.903487552536129, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.721165995742172, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.567015315914915, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.433483923290392, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.315700887634009, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-8.517193191416236, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-8.111728083308073, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.824046010856292, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.600902459542082, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.418580902748128, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.264430222920869, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.130898830296347, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.013115794639964, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-6.214608098422191, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.809142990314027, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.521460917862246, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.298317366548037, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.115995809754082, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-4.961845129926823, 
        FormBox["\"\"", TraditionalForm], {
        0.01, 0}, {}}, {-4.8283137373023015`, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-4.710530701645918, 
        FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}}}},
   FrameTicksStyle->Directive[
     GrayLevel[1], 
     Thickness[Small], FontColor -> GrayLevel[0]],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->NCache[{295, 295/GoldenRatio}, {295, 182.32002668121896`}],
   Method->{},
   PlotRange->{{-21.64429987414403, -4.835428695287496}, {0, 1.35}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Prolog->{
     RGBColor[
      NCache[{
        Rational[223, 255], 
        Rational[72, 85], 
        Rational[40, 51]}, {0.8745098039215686, 0.8470588235294118, 
       0.7843137254901961}]], 
     RectangleBox[
      Scaled[{0, 0}], 
      Scaled[{1, 1}]]},
   Ticks->{
     Charting`ScaledTicks[{Log, Exp}], Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[{{-20.72326583694641, 0.073643907890157}, {-18.420680743952367`,
           0.041358790755154924`}, {-16.11809565095832, 
          0.07523267213459361}, {-13.815510557964274`, 
          0.1037108239155156}, {-13.122363377404328`, 
          0.11683409842681405`}, {-12.206072645530174`, 
          0.17796740037752248`}, {-11.512925464970229`, 
          0.3107677743841648}, {-9.903487552536127, 
          0.9681916453828044}, {-9.210340371976182, 
          1.1699395617070358`}, {-7.600902459542082, 
          1.2688889992513745`}, {-6.907755278982137, 
          1.2921031082918661`}, {-5.298317366548036, 1.3016896680411727`}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[{{-20.72326583694641, 
          0.28328028492216123`}, {-18.420680743952367`, 
          0.29409831321685603`}, {-16.11809565095832, 
          0.2954530750152762}, {-13.815510557964274`, 
          0.32895706984914097`}, {-13.122363377404328`, 
          0.4070497689088133}, {-12.206072645530174`, 
          0.49468309569697033`}, {-11.512925464970229`, 
          0.6741553288506182}, {-9.903487552536127, 
          1.0938175876519525`}, {-9.210340371976182, 
          1.0301452002932456`}, {-7.600902459542082, 
          1.0389072201525633`}, {-6.907755278982137, 
          0.9717382538203762}, {-5.298317366548036, 0.9954841937815303}}]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         GeometricTransformation[
          Inset[
           Style["\[FilledCircle]", FontSize -> 8.96], {0., 
           0.}], {{{-20.72326583694641, 
          0.073643907890157}}, {{-18.420680743952367`, 
          0.041358790755154924`}}, {{-16.11809565095832, 
          0.07523267213459361}}, {{-13.815510557964274`, 
          0.1037108239155156}}, {{-13.122363377404328`, 
          0.11683409842681405`}}, {{-12.206072645530174`, 
          0.17796740037752248`}}, {{-11.512925464970229`, 
          0.3107677743841648}}, {{-9.903487552536127, 
          0.9681916453828044}}, {{-9.210340371976182, 
          1.1699395617070358`}}, {{-7.600902459542082, 
          1.2688889992513745`}}, {{-6.907755278982137, 
          1.2921031082918661`}}, {{-5.298317366548036, 
          1.3016896680411727`}}}]}, {
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         GeometricTransformation[
          Inset[
           Style["\[FilledSquare]", FontSize -> 8.96], {0., 
           0.}], {{{-20.72326583694641, 
          0.28328028492216123`}}, {{-18.420680743952367`, 
          0.29409831321685603`}}, {{-16.11809565095832, 
          0.2954530750152762}}, {{-13.815510557964274`, 
          0.32895706984914097`}}, {{-13.122363377404328`, 
          0.4070497689088133}}, {{-12.206072645530174`, 
          0.49468309569697033`}}, {{-11.512925464970229`, 
          0.6741553288506182}}, {{-9.903487552536127, 
          1.0938175876519525`}}, {{-9.210340371976182, 
          1.0301452002932456`}}, {{-7.600902459542082, 
          1.0389072201525633`}}, {{-6.907755278982137, 
          0.9717382538203762}}, {{-5.298317366548036, 
          0.9954841937815303}}}]}, {}}}, {}}, {
     DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
      Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {-21.560255518249747`, 0}, 
      PlotRange -> {{-21.64429987414403, -4.835428695287496}, {0, 1.35}}, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {-21.560255518249747`, 0}, 
      CoordinatesToolOptions -> {"DisplayFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& ), "CopiedValueFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& )}, DisplayFunction :> Identity, 
      Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
        GrayLevel[1], 
        Thickness[Large], FontColor -> GrayLevel[0]], 
      FrameTicks -> {{{{0., "0.0", {0.02, 0}, {}}, {
          0.2, "0.2", {0.02, 0}, {}}, {0.4, "0.4", {0.02, 0}, {}}, {
          0.6000000000000001, "0.6", {0.02, 0}, {}}, {
          0.8, "0.8", {0.02, 0}, {}}, {1., "1.0", {0.02, 0}, {}}, {
          1.2000000000000002`, "1.2", {0.02, 0}, {}}, {
          1.4000000000000001`, "1.4", {0.02, 0}, {}}, {
          0.05, "", {0.01, 0}, {}}, {0.1, "", {0.01, 0}, {}}, {
          0.15000000000000002`, "", {0.01, 0}, {}}, {
          0.25, "", {0.01, 0}, {}}, {
          0.30000000000000004`, "", {0.01, 0}, {}}, {
          0.35000000000000003`, "", {0.01, 0}, {}}, {
          0.45, "", {0.01, 0}, {}}, {0.5, "", {0.01, 0}, {}}, {
          0.55, "", {0.01, 0}, {}}, {0.6500000000000001, "", {0.01, 0}, {}}, {
          0.7000000000000001, "", {0.01, 0}, {}}, {
          0.7500000000000001, "", {0.01, 0}, {}}, {
          0.8500000000000001, "", {0.01, 0}, {}}, {0.9, "", {0.01, 0}, {}}, {
          0.9500000000000001, "", {0.01, 0}, {}}, {1.05, "", {0.01, 0}, {}}, {
          1.1, "", {0.01, 0}, {}}, {1.15, "", {0.01, 0}, {}}, {
          1.2500000000000002`, "", {0.01, 0}, {}}, {
          1.3000000000000003`, "", {0.01, 0}, {}}, {
          1.35, "", {0.01, 0}, {}}}, {{0., "0.0", {0.02, 0}, {}}, {
          0.2, "0.2", {0.02, 0}, {}}, {0.4, "0.4", {0.02, 0}, {}}, {
          0.6000000000000001, "0.6", {0.02, 0}, {}}, {
          0.8, "0.8", {0.02, 0}, {}}, {1., "1.0", {0.02, 0}, {}}, {
          1.2000000000000002`, "1.2", {0.02, 0}, {}}, {
          1.4000000000000001`, "1.4", {0.02, 0}, {}}, {
          0.05, "", {0.01, 0}, {}}, {0.1, "", {0.01, 0}, {}}, {
          0.15000000000000002`, "", {0.01, 0}, {}}, {
          0.25, "", {0.01, 0}, {}}, {
          0.30000000000000004`, "", {0.01, 0}, {}}, {
          0.35000000000000003`, "", {0.01, 0}, {}}, {
          0.45, "", {0.01, 0}, {}}, {0.5, "", {0.01, 0}, {}}, {
          0.55, "", {0.01, 0}, {}}, {0.6500000000000001, "", {0.01, 0}, {}}, {
          0.7000000000000001, "", {0.01, 0}, {}}, {
          0.7500000000000001, "", {0.01, 0}, {}}, {
          0.8500000000000001, "", {0.01, 0}, {}}, {0.9, "", {0.01, 0}, {}}, {
          0.9500000000000001, "", {0.01, 0}, {}}, {1.05, "", {0.01, 0}, {}}, {
          1.1, "", {0.01, 0}, {}}, {1.15, "", {0.01, 0}, {}}, {
          1.2500000000000002`, "", {0.01, 0}, {}}, {
          1.3000000000000003`, "", {0.01, 0}, {}}, {
          1.35, "", {0.01, 0}, {}}}}, {{{-20.72326583694641, 
           DisplayForm[
            SuperscriptBox[10, -9]], {0.02, 0}, {}}, {-18.420680743952367`, 
           DisplayForm[
            SuperscriptBox[10, -8]], {0.02, 0}, {}}, {-16.11809565095832, 
           DisplayForm[
            SuperscriptBox[10, -7]], {0.02, 0}, {}}, {-13.815510557964274`, 
           DisplayForm[
            SuperscriptBox[10, -6]], {0.02, 0}, {}}, {-11.512925464970229`, 
           DisplayForm[
            SuperscriptBox[10, -5]], {0.02, 0}, {}}, {-9.210340371976182, 
           DisplayForm[
            SuperscriptBox[10, -4]], {0.02, 0}, {}}, {-6.907755278982137, 
           DisplayForm[
            SuperscriptBox[10, -3]], {0.02, 0}, {}}, {-4.605170185988091, 
           DisplayForm[
            SuperscriptBox[10, -2]], {0.02, 0}, {}}, {-20.030118656386467`, 
           "", {0.01, 0}, {}}, {-19.6246535482783, "", {
           0.01, 0}, {}}, {-19.33697147582652, "", {
           0.01, 0}, {}}, {-19.11382792451231, "", {
           0.01, 0}, {}}, {-18.931506367718356`, "", {
           0.01, 0}, {}}, {-18.7773556878911, "", {
           0.01, 0}, {}}, {-18.643824295266576`, "", {
           0.01, 0}, {}}, {-18.526041259610192`, "", {
           0.01, 0}, {}}, {-17.72753356339242, "", {
           0.01, 0}, {}}, {-17.322068455284256`, "", {
           0.01, 0}, {}}, {-17.034386382832476`, "", {
           0.01, 0}, {}}, {-16.811242831518264`, "", {
           0.01, 0}, {}}, {-16.62892127472431, "", {
           0.01, 0}, {}}, {-16.474770594897052`, "", {
           0.01, 0}, {}}, {-16.34123920227253, "", {
           0.01, 0}, {}}, {-16.223456166616145`, "", {
           0.01, 0}, {}}, {-15.424948470398375`, "", {
           0.01, 0}, {}}, {-15.01948336229021, "", {
           0.01, 0}, {}}, {-14.73180128983843, "", {
           0.01, 0}, {}}, {-14.508657738524219`, "", {
           0.01, 0}, {}}, {-14.326336181730264`, "", {
           0.01, 0}, {}}, {-14.172185501903007`, "", {
           0.01, 0}, {}}, {-14.038654109278484`, "", {
           0.01, 0}, {}}, {-13.9208710736221, "", {
           0.01, 0}, {}}, {-13.122363377404328`, "", {
           0.01, 0}, {}}, {-12.716898269296165`, "", {
           0.01, 0}, {}}, {-12.429216196844383`, "", {
           0.01, 0}, {}}, {-12.206072645530174`, "", {
           0.01, 0}, {}}, {-12.02375108873622, "", {
           0.01, 0}, {}}, {-11.86960040890896, "", {
           0.01, 0}, {}}, {-11.736069016284437`, "", {
           0.01, 0}, {}}, {-11.618285980628054`, "", {
           0.01, 0}, {}}, {-10.819778284410283`, "", {
           0.01, 0}, {}}, {-10.414313176302118`, "", {
           0.01, 0}, {}}, {-10.126631103850338`, "", {
           0.01, 0}, {}}, {-9.903487552536129, "", {
           0.01, 0}, {}}, {-9.721165995742172, "", {
           0.01, 0}, {}}, {-9.567015315914915, "", {
           0.01, 0}, {}}, {-9.433483923290392, "", {
           0.01, 0}, {}}, {-9.315700887634009, "", {
           0.01, 0}, {}}, {-8.517193191416236, "", {
           0.01, 0}, {}}, {-8.111728083308073, "", {
           0.01, 0}, {}}, {-7.824046010856292, "", {
           0.01, 0}, {}}, {-7.600902459542082, "", {
           0.01, 0}, {}}, {-7.418580902748128, "", {
           0.01, 0}, {}}, {-7.264430222920869, "", {
           0.01, 0}, {}}, {-7.130898830296347, "", {
           0.01, 0}, {}}, {-7.013115794639964, "", {
           0.01, 0}, {}}, {-6.214608098422191, "", {
           0.01, 0}, {}}, {-5.809142990314027, "", {
           0.01, 0}, {}}, {-5.521460917862246, "", {
           0.01, 0}, {}}, {-5.298317366548037, "", {
           0.01, 0}, {}}, {-5.115995809754082, "", {
           0.01, 0}, {}}, {-4.961845129926823, "", {
           0.01, 0}, {}}, {-4.8283137373023015`, "", {
           0.01, 0}, {}}, {-4.710530701645918, "", {
           0.01, 0}, {}}}, {{-20.72326583694641, 
           DisplayForm[
            SuperscriptBox[10, -9]], {0.02, 0}, {}}, {-18.420680743952367`, 
           DisplayForm[
            SuperscriptBox[10, -8]], {0.02, 0}, {}}, {-16.11809565095832, 
           DisplayForm[
            SuperscriptBox[10, -7]], {0.02, 0}, {}}, {-13.815510557964274`, 
           DisplayForm[
            SuperscriptBox[10, -6]], {0.02, 0}, {}}, {-11.512925464970229`, 
           DisplayForm[
            SuperscriptBox[10, -5]], {0.02, 0}, {}}, {-9.210340371976182, 
           DisplayForm[
            SuperscriptBox[10, -4]], {0.02, 0}, {}}, {-6.907755278982137, 
           DisplayForm[
            SuperscriptBox[10, -3]], {0.02, 0}, {}}, {-4.605170185988091, 
           DisplayForm[
            SuperscriptBox[10, -2]], {0.02, 0}, {}}, {-20.030118656386467`, 
           "", {0.01, 0}, {}}, {-19.6246535482783, "", {
           0.01, 0}, {}}, {-19.33697147582652, "", {
           0.01, 0}, {}}, {-19.11382792451231, "", {
           0.01, 0}, {}}, {-18.931506367718356`, "", {
           0.01, 0}, {}}, {-18.7773556878911, "", {
           0.01, 0}, {}}, {-18.643824295266576`, "", {
           0.01, 0}, {}}, {-18.526041259610192`, "", {
           0.01, 0}, {}}, {-17.72753356339242, "", {
           0.01, 0}, {}}, {-17.322068455284256`, "", {
           0.01, 0}, {}}, {-17.034386382832476`, "", {
           0.01, 0}, {}}, {-16.811242831518264`, "", {
           0.01, 0}, {}}, {-16.62892127472431, "", {
           0.01, 0}, {}}, {-16.474770594897052`, "", {
           0.01, 0}, {}}, {-16.34123920227253, "", {
           0.01, 0}, {}}, {-16.223456166616145`, "", {
           0.01, 0}, {}}, {-15.424948470398375`, "", {
           0.01, 0}, {}}, {-15.01948336229021, "", {
           0.01, 0}, {}}, {-14.73180128983843, "", {
           0.01, 0}, {}}, {-14.508657738524219`, "", {
           0.01, 0}, {}}, {-14.326336181730264`, "", {
           0.01, 0}, {}}, {-14.172185501903007`, "", {
           0.01, 0}, {}}, {-14.038654109278484`, "", {
           0.01, 0}, {}}, {-13.9208710736221, "", {
           0.01, 0}, {}}, {-13.122363377404328`, "", {
           0.01, 0}, {}}, {-12.716898269296165`, "", {
           0.01, 0}, {}}, {-12.429216196844383`, "", {
           0.01, 0}, {}}, {-12.206072645530174`, "", {
           0.01, 0}, {}}, {-12.02375108873622, "", {
           0.01, 0}, {}}, {-11.86960040890896, "", {
           0.01, 0}, {}}, {-11.736069016284437`, "", {
           0.01, 0}, {}}, {-11.618285980628054`, "", {
           0.01, 0}, {}}, {-10.819778284410283`, "", {
           0.01, 0}, {}}, {-10.414313176302118`, "", {
           0.01, 0}, {}}, {-10.126631103850338`, "", {
           0.01, 0}, {}}, {-9.903487552536129, "", {
           0.01, 0}, {}}, {-9.721165995742172, "", {
           0.01, 0}, {}}, {-9.567015315914915, "", {
           0.01, 0}, {}}, {-9.433483923290392, "", {
           0.01, 0}, {}}, {-9.315700887634009, "", {
           0.01, 0}, {}}, {-8.517193191416236, "", {
           0.01, 0}, {}}, {-8.111728083308073, "", {
           0.01, 0}, {}}, {-7.824046010856292, "", {
           0.01, 0}, {}}, {-7.600902459542082, "", {
           0.01, 0}, {}}, {-7.418580902748128, "", {
           0.01, 0}, {}}, {-7.264430222920869, "", {
           0.01, 0}, {}}, {-7.130898830296347, "", {
           0.01, 0}, {}}, {-7.013115794639964, "", {
           0.01, 0}, {}}, {-6.214608098422191, "", {
           0.01, 0}, {}}, {-5.809142990314027, "", {
           0.01, 0}, {}}, {-5.521460917862246, "", {
           0.01, 0}, {}}, {-5.298317366548037, "", {
           0.01, 0}, {}}, {-5.115995809754082, "", {
           0.01, 0}, {}}, {-4.961845129926823, "", {
           0.01, 0}, {}}, {-4.8283137373023015`, "", {
           0.01, 0}, {}}, {-4.710530701645918, "", {0.01, 0}, {}}}}}, 
      FrameTicksStyle -> Directive[
        GrayLevel[1], 
        Thickness[Small], FontColor -> GrayLevel[0]], 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {295, 295/GoldenRatio}, 
      Method -> {}, 
      PlotRange -> {{-21.64429987414403, -4.835428695287496}, {0, 1.35}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {
        RGBColor[{
          Rational[223, 255], 
          Rational[72, 85], 
          Rational[40, 51]}], 
        Rectangle[
         Scaled[{0, 0}], 
         Scaled[{1, 1}]]}, Ticks -> {
        Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        RGBColor[0.880722, 0.611041, 0.142051]}, {
        Style["O1", FontFamily -> "Times", 12], 
        Style["O2", FontFamily -> "Times", 12]}, Joined -> {True, True}, 
       LabelStyle -> {}, LegendLayout -> "Column", 
       LegendMarkers -> {{"\[FilledCircle]", 8.96}, {
         "\[FilledSquare]", 8.96}}, Spacings -> {0.5, 0.6}]], {
      Scaled[{0.1, 0.73}], {0, 0.5}}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.6740918302210455`*^9, 3.674091879238737*^9}, {
  3.674091926756248*^9, 3.6740919539345007`*^9}}],

Cell[TextData[{
 "Data is shown below for both cases, and there is something clearly wrong \
with it. The O1 data has fold-change significantly larger than 1, and the O2 \
data has a few questionably high data points as well. Furthermore, the \
leakiness values of both curves are higher than Hernan\[CloseCurlyQuote]s \
values. This issues will all need to be resolved before we can start \
seriously looking at this data and fitting the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "A"], ",", 
    SubscriptBox["K", "I"], ",", 
    RowBox[{"and", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", 
       SubscriptBox["\[Epsilon]", "R"]}]]}]}], TraditionalForm]]],
 " parameters to it."
}], "Text",
 CellChangeTimes->{{3.6740891439935913`*^9, 3.674089448269402*^9}, {
  3.6740920551805105`*^9, 3.6740921600206995`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Mitch\[CloseCurlyQuote]s Data", "Subsection",
 CellChangeTimes->{{3.67408985284441*^9, 3.6740898573070173`*^9}}],

Cell[CellGroupData[{

Cell["Some Leg Work", "Subsubsection",
 CellChangeTimes->{{3.674090006217888*^9, 3.6740900074814897`*^9}}],

Cell["\<\
Here is the information that I have found out about the repressor and \
reporter plasmids that Mitch used.\
\>", "Text",
 CellChangeTimes->{{3.674090045077135*^9, 3.674090084460635*^9}, {
  3.674090378512477*^9, 3.674090380866689*^9}, {3.674092168101513*^9, 
  3.67409218676875*^9}}],

Cell[TextData[{
 "The promoter for the repressor plasmid was pLacI, the wild type LacI \
promoter. The promoter for the reporter plasmid was the wild type Lac \
promoter (in contrast, Hernan used the stronger ",
 StyleBox["lac",
  FontSlant->"Italic"],
 "UV5 promoter, but assuming the \"weak promoter approximation\" this should \
not matter). Mitch\[CloseCurlyQuote]s promoters had O1 at the repressor \
binding sites."
}], "Text",
 CellChangeTimes->{{3.6740902072526774`*^9, 3.6740903096817136`*^9}, {
  3.6740903656728525`*^9, 3.6740904331990957`*^9}, {3.674090470094363*^9, 
  3.674090501090325*^9}}],

Cell[TextData[{
 "The repressor plasmid is pACYC derived - copy numbers vary greatly by \
derivative, but ",
 ButtonBox["this source",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.neb.com/~/media/NebUs/Page%20Images/Tools%20and%\
20Resources/Interactive%20Tools/DNA%20Sequences%20and%20Maps/pACYC184_map.\
pdf"], None},
  ButtonNote->
   "https://www.neb.com/~/media/NebUs/Page%20Images/Tools%20and%20Resources/\
Interactive%20Tools/DNA%20Sequences%20and%20Maps/pACYC184_map.pdf"],
 " claims a copy number of ~15 per cell. The reporter plasmid is pBR322 \
derived, which other sources suggesting ~20 per cell ",
 ButtonBox["[1]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.snapgene.com/resources/plasmid_files/basic_cloning_\
vectors/pBR322/"], None},
  ButtonNote->
   "http://www.snapgene.com/resources/plasmid_files/basic_cloning_vectors/\
pBR322/"],
 " or 10-100 per cell ",
 ButtonBox["[2]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.neb.com/products/n3033-pbr322-vector"], None},
  ButtonNote->"https://www.neb.com/products/n3033-pbr322-vector"],
 ". Griffin warns me every time I discuss this with him to completely \
distrust these copy numbers, so they may simply have to be treated as \
complete unknowns."
}], "Text",
 CellChangeTimes->{{3.674090045077135*^9, 3.674090196534122*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Resolving Mitch\[CloseCurlyQuote]s Data with Our Data", "Subsubsection",
 CellChangeTimes->{{3.674090010024294*^9, 3.674090016415909*^9}}],

Cell[TextData[{
 "There are two reasonable ways to handle Mitch\[CloseCurlyQuote]s data. One \
is to first get our own solid data for the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "A"], ",", 
    SubscriptBox["K", "I"], ",", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], " ", 
      SubscriptBox["\[Epsilon]", "R"]}]]}], TraditionalForm]]],
 " parameters, and then using these for Mitch\[CloseCurlyQuote]s data while \
only fitting his ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]]],
 " parameters (and, if needed, accounting for the plasmid copy numbers using \
Franz\[CloseCurlyQuote]s theory). Another way to treat \
Mitch\[CloseCurlyQuote]s data is to acknowledge that there is a lot of \
uncertainty in repressor copy number, reporter copy number, etc. and \
therefore make the data self-consistent to itself with no link back to our \
own data. This is what we currently do - we fit the ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"[", "R", "]"}], 
    SubscriptBox["K", "DNA"]], TraditionalForm]]],
 " parameter rather than using Hernan\[CloseCurlyQuote]s data, and any issue \
of plasmid copy number gets absorbed into this parameter."
}], "Text",
 CellChangeTimes->{{3.6740898791968565`*^9, 3.67409000173868*^9}, {
  3.6740905189681587`*^9, 3.674090590040698*^9}, {3.674091045462052*^9, 
  3.6740910765233183`*^9}, {3.67409220892819*^9, 3.6740922561120834`*^9}}],

Cell[TextData[{
 "Yet, in an attempt to reconcile Mitch\[CloseCurlyQuote]s data with Hernan\
\[CloseCurlyQuote]s data, consider the leakiness value of 0.036 that Mitch \
got for his O1 wild type Lac repressor. ",
 "Keep in mind that Mitch uses dimers rather than tetramers, so his leakiness \
expression does not have a factor of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "R"}], TraditionalForm]]],
 ","
}], "Text",
 CellChangeTimes->{{3.6740891439935913`*^9, 3.674089465235038*^9}, {
   3.6740895238401637`*^9, 3.6740895600444736`*^9}, {3.6740896462444315`*^9, 
   3.674089654392047*^9}, {3.674089718209565*^9, 3.674089747131417*^9}, {
   3.6740897812902784`*^9, 3.6740898210757537`*^9}, {3.6740907443991847`*^9, 
   3.674090917736124*^9}, {3.6740909497634706`*^9, 3.6740909579448853`*^9}, {
   3.6740911788855214`*^9, 3.6740911798839235`*^9}, {3.6740922641012974`*^9, 
   3.674092291511149*^9}, {3.674092328639615*^9, 3.674092332209422*^9}, 
   3.6743196267431927`*^9}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["leakiness", 
     RowBox[{"(", "Mitch", ")"}]], "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["R", 
        SubscriptBox["N", "ns"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", 
         SubsuperscriptBox["\[Epsilon]", "DNA", 
          RowBox[{"(", "Hernan", ")"}]]}]]}]}]]}], TraditionalForm]]],
 "."
}], "TextNumbered",
 CellChangeTimes->{{3.6739250653286085`*^9, 3.6739250769902754`*^9}, {
  3.673925260339113*^9, 3.6739253224600873`*^9}, {3.673925478504051*^9, 
  3.67392548287746*^9}, {3.6739255723228226`*^9, 3.673925577900033*^9}, {
  3.673925912626058*^9, 3.673925943471718*^9}, {3.673929034136031*^9, 
  3.6739290496234612`*^9}, {3.6740891368613787`*^9, 3.674089141996788*^9}, {
  3.6742337740941267`*^9, 3.6742337740941267`*^9}, {3.674319566624468*^9, 
  3.6743195792550974`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
UUBGIScLBPpJLP/z/wGTSh8S
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
YqKBp2fjCqn+H6nxt2s=
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nk8VF8UAHBkyb7v+xi7GTMjiuhKiLIXWbIkUoiirCkiIUmlEtpkiVQq
IaFDUkkhfjLWFJJlJiWk4nfnn5nP9/PePffcc8+776n6h7sEcrCxsWniH9b/
uVtS/IotNKjR/G4Jv/tQ9sMExfZmGjyP/iM/hH2haUw/vokGZ76Iyy5j54w+
2klvpMErOcPUdct9KFfV8fqlpzTImGml3sUuvHWaKvSABgIbjv658acPPbm1
tGv1Kg365Gu77vzrQ9UPfYPv59LApXiwsw27tqn1mPcVGvDVDvydwa4bzbn1
LIcGZyPcBqkrfahRlTodfY4GcwZtzxuwX986cPx7Cg2sTUQchlf70MCt/qLR
cBqU8xIsLTnoSENEzO9IGA3u1NbUhmMfOm4rz3OQBtLaMSH52Nxetef1gmkw
cnQo8yc2ReLy8egAGvS+EXtTsoaOUlKd3QU9aJCXkx8ty0VHeiGv+Y0taEDt
8LGjraWjKPpq61tzGqTuvmK6D7tp6/qTPogG8dEK0XnYbsSSpWRTGlz5/qR9
DS8dJQ4lj783osF45hRXP3aPI3oeoEuDJusEkUv8dHRsXXVEtgQNknh87tgI
01FIV67/RnEaXFVWKziJ7RkW7zIhSgNL2D5Uj73hjjnNVJgGmbsCbWkidPRL
/u3cV14a1G7T6lERpaOwNZ8OoVUqhJwiiwqK05HfB95wxjcqeAVJUdWl6cgx
fMbn6iQVjhZaFh3A3iTQ4WD5lQqDZHrEfWwF6xxy3hgVCM2KRGMZOqI/VWJY
jVAhwzRnzEWWjlxuGRy81kMF0kuX7bnydGR5yDvE7jkVbGTVLcNU6Ejo1iL/
SgMVXiSQUxuw6V3nKx7UU4GfOa8vqIrzM2idFaujwk/Pvvp72FcXyIfoVVRg
X/7T9pNAR4xjbEf3lVPh8gcFgxx1OspNv3088RIVNM4gPR1dOvKvM1Om5VCB
43Jl3Gls0vTH518uUGHI1mzLOHaznQD71mwqJKzRtirUo6NZ4aPJgmeoMDL0
Q5FApiOLy9ZpeYlUaEp0eWxMxdcLv52vCsH14LaXe7eejthoOwdsg6lQ9rt5
q+UGOpJoaiSO7KfCqf/2K9Vjm45crOHdR4UHC5xv7xnTUab8piEfPypcUxcy
vboR90vOBS1eVyo8N3d0O4/oKPTUxufem6jwX27AMUEb3A8SJWt/mlIhK2rd
s3zsnNsiLmkbqfDHb+yFji0d1TeNjz3aQIW1ld7rt2+jI4GVc3xrDXB+Un6t
l+zoqCJqzPWRJhVMOkxOuzjT0UzQ2RluUSos6PuwRXrRUZH67eAqYSpcEhc7
ILqbjry/1E7uEaLC5O+jtyux3/uMjdXzU8E6qvD8nDcdPXTdOBTBTQVKNDki
wQ/395Zv74b/UMD6WbdZYyAdrSpZPaieoIDXf/fkZw7RUe2gJylgnAJVW7SZ
JYfx85V36K7oGAXivLue+kfQ0WfJgtLQUQqUHwXjoUg6ahH4eYMwSAHn9+pr
h6PoKG35ZnZWFwW02X5ziiTQkVjv38P76ikQzt3LizJwvX98zl2so0BYWmM/
6QwdSQm9eZ72lAKPXo2xK2XSkZz1JcG71RSIkjvryZFFR4RqUhmzkgI9cm4h
A+fpiHrZ51NMMQU+Rwq2dF6lIyc3cDiTRQE69U5lbznu34iSowpnKdDiWkaZ
v0tHO7MyC+6doUDRH19b8Xt05N7qPtWRRoGyHk4Htwd05Gs0d0oimQKuL0+M
MR/j/pUiNFyLpkCJQfCOyAY6OtubrFvpRwH7YyHO7V10FJyqusbGlwJjt1od
5bvpyMboef+INwXOB5kQQ3voiOPycrqwFwUuChR5iH+koxjXw5Nhrnj+tW83
xQzSUUCPTzFpG673gI359a+43z4YK981oMCGtD92Yat4/Sc/LljQKGD4ScDq
H1s/WqQefd9PoYDqxcGQLI5+9Oh8ZQIfmQKH7dqca7j6kZaz5uABLQr4PbDu
URPoR+KdEle1FPH6db1Dg2X70dQ7plgJNwVOFV9KbzHsR6EVG5TduCjw4oFU
4on1/YiRkaTLzUmBleb0GlPjfvRjq7jlPnYKaIS/n28w7Ue/kg9O2S3pw98l
x+WBLf1IKvTPffsv+pBtXvs6zaUfuZtKb3B8qg+Ntp0zdYf70e7fd5weVOuD
h53CwIvIfuRXbXJAuEofcuSOH+w42o/2U3zyOu7rgx58PsOI7UexxOK/jkX6
QL95R9D+ZD/KEzBocjqnD/z2n9SzLvajgUGHbS6B+jDTZH/SuLYfRbglVcX6
6wNPYPTJrrp+tLbzsdItX33YatROPNjQj4xeyPxkeuiD4uLtvQ+a+9GFss/5
Zx304YCsqKvfu35kExU1+3q9PqzUP4uI+dKPqoSvZyM+fVD9abChRGwAbU/v
XN7How98jYXR9ZID6DPHmsAsTn3wUzHj+CgzgIQXgoyHVsjg9qxaWFZ5AAUP
Uj/H/STDn82HK7p0B5BK2UuD6kEyTGfc55GzHkBnLWZ79R6QQYZWcZB6fAAd
lI0qT6kgQ3G4/JrrSQPI/vtKwmAZGSiMpFWhUwNI8LqIemYRGdAld4uVM3j8
b4PI6atkqDpgekosD7syTrg8hQwTXmm1UjXYSmttND3JkHo9JL9qHsf/lS1/
YhcZ0nbSy2qXcPx2WWbvTjLY3bzf1fQXx4/TvZzqSAaCsfKpL5yD6Ox/DmPj
lmRo/8CtGiiJnXkpsUifDGen9oXsW4+9THiqykUG25UNmpknBhHxtxwjlYMM
Pr+M9mumDKL6RTG1mVUSNK4Zs3udNoim5jnOVi+TYOlqkqz8hUFkzfzst/07
CU6f4gnmKh5EK18K1x4dIAFbsoTVj7eDKOwdwf31QxKc3C8W4q40hLja5c6S
HpCArhotU6U2hAraxJovVJDAJV+CKqU9hNpeceh5l5LAsuBSw6zBENJo/rw6
V0CCXYGei1O2Q2ikurBUPo0ESQXF2WrRQ8jpJmExzIcEPjus79f1DqE4r2cJ
+V4keFmY/jR6aAgVSe3kfO2O8xWGrWZjQ2gx85So6g4SZDymCX2eG0LXYyd1
u7eSgByrrntRcBjNuNz3W08lgbdh/Eie9TA6zWXStrqGBJ9vmRyJfT6MKuGD
kx47CbyOK7x0ezWM+uNDPrqv6MHJZeVrZh3DiPyjYOzhkh74lnSza40Mo57h
1ZW9s3pwXMQu+tDqMCLUvjR43asHfL28L3o3j6DGYOdr2WV6QFrnH6z3fgRR
k83PzpbowSRz/+OK3hFUlK+fsK1IDzIHykSNRkZQRrugN+cNPfw+bCMEfB9B
buQ2hZgcPTgs1ih+hfcTmp2zKPA9oQeGzrS1iPQJKcSuyye76oHp8O2LUjGf
UNxp6avtbHh8F1Fjq8IoStxd2v/9ny7kGmes1SeMolPU9QqSf3TBs2KsVkFr
FGUPuN3w/qULJdXOKbzrRlGp/uVixjddeC1Q9UrLbhT1fJR4JNKtCx1qZ98m
JIwispbY253FupDQ518XPzaKRl8L/Bu0xfe7cc7bvPiM+Jbe1ltd1oGGpO+h
E5Vj6GQs4cNrhjZo6ArZhRVNoGLlO44qxtqg6qzUiF99KPXivFSckTYk2N6T
tYdJtJ9n83C3gTakRa4MPHo1ifSY9NDTZG34K7AvLLJ3ElU18mcw1LThaLJp
06ufk6jZO7ylXkgbLp8C+Sekb2g438jYY0wLOASdRIOuf0NSMi8JF85pAUnn
b2Xu4SmUYfNo4+NMLfj1ai9nQMwUWo25sbMnXQuoWe8UtU9MoUl6bKpUihZs
9/h97mbmFKrLJ0/lxWDf3L6wpXQKeSvnPry9Rwu2KfF4ewxMoSKNEPMnBng+
z7sdZZumkcwud49eihZMyPFZllpOo7OnrSIWSVog5PtZ4/q2aRQ1qVxkrIXz
kZU3jHGbRjblPTyNClrQ0lgUOHRwGk2TNnW0cmnBnZbL7KH504hmKOrT91ET
Fv8IfLw+N418zh7s4/5PE1QTPt1+tDCN0sffuBh+0IRcuVJD+DONPl06ufVC
uyaY2fE9fM01g7IWflLsmjQh54XBtnOyM2iqpncNlGvCO7lxj19oBhWaFJSV
JmgCT7nPL5O0GfT+wpJab5wmyBHDOc5mzqDfUzuvc8ZowqFcFVN69gxyyhe8
uCdCEyhEQWu/qzNo5c/xY/JBmtCcK6qrXT6DPBv2OJ5z0oQze45JlLfNIFFz
zV9RaprQUQIK6TyzKPUXve8/FU0Y27UnaJpvFi2XZ9avU9KEZzqCarZCs2hM
8kfyDxlN4Nu6c2VBYhZVT9eLhQlpgsYvgWcKhFm0+4oLJfC3BnyYluXP2TiL
7jASQnZ0aMCNuqVop5BZpFhEcXzUrgGzpllm2mGz6ILHF5pomwaMBkat/js0
i+JbbJbft2jACz/OjPyoWeSQJ56+rU4DNo2nG5UmzaKfVmUlm4s1YAf3hU7O
K7No07WeUf14DTBcTuFaapxF1sJa0m4xGtB85ObazKZZZJ8Ub3fsqAb8mBJZ
lm/B+QUSal6Ha8Dd8ysN+m9mUSzpUOaeAA3YTH2/V7N7FlU18K+/aK8Bwex6
014Ts0hn2CJzQVkDRAKsnFZ5GYjmdLlJQVED6j2OZMkLMJBx87cFCzkN2Jb9
NmCdEAPZlGTvOSehAa3J8gwvMQYKDBs20uLVgKORnqsn5Rjo5krsqMcPdfB+
dPygoQ4DSSk/NGpoUQe34tIVu60MtI/h+Z94szooPF9NmbRhoJoGziPBz9Xh
1WjilaRtDOS+2/2hdJ06ZEbuDq+wZ6D8q6u6EQ/U4bqhjsP4DgZSkXBQ1cxT
h61r9/ZN+DKQNu80//lwdXDiJLWbRzFQXF9O+ddQdXCde5qYE81AbaWbbDcF
q4OHTqneRAwDhVpfSJ0OUIdIq+Wo5HgGup9szG7tqQ4Dvry6JYl4/SunF5Yt
1SF33eyDrAwGMv1JHA2QU4cZtuhdbNcYyHLKbPS1tDoc+NutI36dgbaPuo3q
SarDtv+i9xBvMJBnR9rovLA6jFn4c1jcYqDYuzOjKVzqsPd9sVtwMQNV7636
XPSdCAMlzN2H7zEQpWfL2FgrEVQpm7v31zPQhre7x2xaiJDYYZJt18BAqPno
WEUTEQxPXF8iNzKQQ2Xp2JF6Ijwt7u5mPmegg5n845yPiLD3X+7MnhcMVG7Z
PU68RoQZvW/+vG0MpP7E/2tAJBGu39xdHNHLQLBfwTj7EI5/j56OPuJ8FXoz
nh0kgpyjGZG/j4Gykm3JYvuJYLx9d/J1OgMtOVOOPt9NhFbeCo3qQVxPxj8O
OWsiWGTmdpd/ZqBwratKHTJEeK6sU1Qzy0B8gy6HliWJQOE8aeDLYKCicwLN
6uJEoDP9ariYDNS3cCLwmCARgr0f3nb8zkAWL/dVaHMQQTh/bNPHHwwk4b/O
JGVaDfiuWS5VLzLQ0/wOV+NGNdAPpZW9YGOigooRkUvP1ODs1qnOLexMlNjA
fPu9Vg02Uu5sfIFtMyJscecxHq/5dvg5BxP1EpzI0mVq8OSMR3wlJxP9KOvk
/nVRDVbj+bkOrWUindqumsoDahB0h/QsXJiJhN6MRggEqcFj8wDPfuw5+hxp
f4AaLCYseluKMFHtH9EiZV81OH1z7pKUKBNZI5fsrJ1qMGIi8uWxGBP5t37Y
H4rUoPrs32cfJJkov6dbVksSx3+LwkrlmUisMEVju5gaeASW1fEoMFFauKFB
mLAaGE/ZHQrCPsJ3xa6KVw3EvYjy6opMZGfuecJ8hQAHOyfTryox0crdT2Pu
XwlQnf23IEgVz5c8+yD9KQH+JDI7rmswUZ/T9fqKagK89h3gZmA7KDm+6XhM
gMg3Ii9MNZlo49PKz5L3CfDyUfT7PmwJZqRkYSEBXt1ttebXZqKXnstxdWcI
EPzvWqCnLhNp0Xisp70J4PjhkVeJPhO5ampWyXsRoGvjsagJ7JMKWwl27gTo
4H1O0aAw0RD36ZUKFwKk24ilFmFfGOCuCdtKAMm6PS0FVCb6m8Kt9YNCgJ36
XCLHDJio8yMX3+81BCjZ7P/ktxET/WtXj9FmJ0BKQkYPeT3en2arCY8VVYiR
CS/ai32q4lRz3ZIqWOd4ubdjmyRxxR+bVYUGeRmlvA1MVKTDNbPaqwri6yzT
NU2YKDqB8z13uSooP9i5JGDGRIyOuOKgUlX4+OaanBF2AGHu2OsiVfCUV+T0
xXZ6NaSbcUMVNlVxkiuxdURr0gUvqcJ1us2E4yYmGi46YCWRqApbrG+QTiG8
/+3v61XdVCH+RIDmm81MVK9klXNyhyqcWKp7OY1tcPhZyBcnVWDK5K8TsmAi
Fak7csXbVeGMMvcpF+xl36QYrc2q8PND12If9v2fBuv09fD1dY4+Q1uYSFL+
6l1TDlVIudf15aUVEynpVPYErKqAJO1e8ji2lvGrf5l/VSDKq2ue0xrXY9cv
x6EFFeAoFLHbgu1z0Xk+YVoFNHUVexuw7/DzmT3vUYFD7Odzyrfi+//Gvd9c
iseHrZ4KsGWiLfwXFg8UqcDLtunO49h2cmUqF26pQL+m6a9cbJ8NHyM+56tA
COFHWzt28hED6eRsFVAtXa2kbWOi9plp35ZYFeg9O5S7iO0ztHvO2k4FFj6/
cQyyY6JK27bkG7YqYBkr0hiPvaZ6vdSStQqsWMSKZGPfyRLbWLZZBUqQvX8t
9hx6ncK/XgX6lA0beeyZKKXQQKZTVQW41dhibmHv7JA4/oihDP1qgd+bHJjo
dymzcO83ZZCQCtDpxr6e2PZKYkwZpoP+2Y1hf6UmikbTlSGNK8mO25GJ4nKm
iza2KIMq02GDLfZNj+a3LVeVYdz/1HAb9vSXcNmPlsrgQ3XY0OiEnz9+bfbb
SBku+krHtGOLrPs8GWaiDCrbfxf1Yxul7KzlpijDcvrB1gXsk0TjXUbyypCl
NaBDdmYimUCOS5fmlCBV58i5q9hWEzkiO69j31k+uNeFidyFHJaUryqByfmu
E+HYwUY8n6YvKoHQ+kdJ8djZqbEPktOVwDF1wvUi9qCGj8PjI0pgb3/Qohk7
IkgzU2y7EhxuJ25S3MFENyaf8nQtKuLnncPuNXZfetUF3R+KUFVaF9CNLaL7
QDF1RhGIIhcODmMnHiwy2DiqCGrufxznsf1+ZPkWtykCl6ihp/JOJiL83VsT
e00R7h5quhKBXSQsFETYogiTt0/YCbnifCrX/jhmpgh10m4XpbElXNYkfFyv
CPZazHYV7JScpQuZeopgdfGJjAF2oOyXxgVJRXDILpLYha2hViv1dlIBko5v
uF+AXWbk3xqZpQCKdqQxJTd8Pl7gJeqnK0DxmQpVDexNjMqkqWQFKE/IdCVh
9xSvmu6JVYBepcKbG7FXJK49dghQAA6OjJe7sF1+frypbaIA73rNXbOw/z6w
jx8Zl4deo8RP89it/L/68j7Jg9/RPvY/2OeDCozcBuTBIV9Inn0Xzk95eq69
Ux4qVMwNBbGds9L21z2Th+GD47zq2CWhL1wvnZcHFfcjZjuwnbSNKdvN5CGP
eE2iHNt8RZV6ab08XHqi8uQBNqWbjzZClQfZn+fsn2CLJAwaRGrIA1Pbbx9g
d3aeWJ8vjOd/yWfci+0Y07ppelQO/t0MCWVzx+f7qx32Z1LlwCeSsMsRe1OB
qcN/iXJwfDyFbyc2+bC6o3K8HCx+0K5xxxaSX3R6HC4Hbit7/u7Bfh+Wt3PA
XQ5EL+auP4JtLzXqpasrB6GcHrFXsO0Cw4LfdsiCsLHJATrr/vk1m6LaZMHU
c4fEELZzylVR1ZeyoLk9pe4TttvtltqoOlmI/rN16Su276gcD6FYFt6ZCpos
YEd4v7odEycLw2Wag6IeTJTrqjKkri4L6fdvvbTClht/UtmpLAsxXz+O2GBf
O7I9JV5OFh49nvy1HbvwYpRul7As3LSslHTBvtvVHntsWQbGPA4TfbAb7WOl
ujtk4H1xZPJR7HGrD46JcTJAPtMScgu7l2g9YXVUBgifglZuY7euqTvGf0gG
jn+sOFuCXdJ0q+xyoAwwfUiFd7H3mx1ec89JBlBA8u0n2DPrRGroGjKwRtCK
/w32vJqDkkG3NHTK8WbOYo9xNFctvZOGcq61z5jY/40abm98LQ3bk3S/zmFX
31CMsW2UhklNptECdoz8bJdvmTRQebuqVrD/imWeyjwhDZ5jJJKwJxNxcrTN
jOtKg3TGWy0ytpznCQ0TDRxvj7suBZvyaJ1floo00GL5dWnYXv43uo0kpeHp
tXlVI+xHzUfqTq9IQXmfBcMMe0+ycpp2lxRwRJlx2mM3ch5VOxglBQ9XVtAB
7J7dOt5Nh6Qg1+oFIxh7qmrksmSIFCAGMT8UWzJwG1+jrxSIMN/NhGOHvlSe
E7KVAr4DEkeisOVT2xor5aXgUaazZDJ2DI+K5zxIQpjFudo8bBW5k/vKnklC
mbMxbwH2a72xCJ9qSYiU1HC/hi3rcufM67uScON75/cb2HUFlIaCy5JQ8+Ku
YDH2X+pmFatQSTCJCl68j52423/ikrQktJjK5DVha4W3/NgmJgmOtF01zdid
SRqrqwKS8GZFofsFtmrplHQwhyTsnrTkbsVunouw3TQrAYZspl5trHqfTq6Y
aJaAQrbwpg/Y6Q+LItaHScANcvGZz9huZjaE+P0S8Lgm8fwXbOKb6a5GfwlI
Nh2/NIYNn2hU610S8Oeac94E9oJwE3OnuQRY9M2dn8L2DxsKjRCTAAkT6U0/
sE11pYLuVYvDXEruFTYvJuKreSo1VykOz2IPRrBjf7Twbl13VxysFXntOLAj
PIvU62+IQ3dE/p812GXptLG2NHH42L/bjgdbatJhz6SnOFTfev9EEPt70Wkv
tVUxqLbseiyLrZfI+z7ptxhsjPcLksPe73XG/NNPMbB2/Skrjz0iek792qQY
WB3XPqaA/f74ZabUBzGQXP23Thn7rntxMl+xGPA5H4klYu8TeHF3bpsY1E5f
dSNjF361VHKyEgNVWe1ZloebW7PvIzF49mTspD62a2zb0ZB1YqA+On6Xgm05
0YXGFcVgQp0yT8NWhU/dfd9Fodjxk8967MHIlT/PL4tCmJFZEcIu5yVtPnFe
FLZo8MiZY8fc8ErdlCkKXveNzrEs8bZWpCFJFNIr30RvxrYnRKrXhYqC997/
Nm/Bbuz86lBlIQoyfvp11tg3SV237jBEgPpZZrM9dtiL1YmgbyLQNMFXzLKp
B1lPc0wEQqdj1zpg96WcqS6mi0D87a53LIsOWr0tbBGBlT1xLk7YJzPq5gvy
RMDzk4XlDuzAr7e3nrcWgaubxd67Y7sviFNGzEWggs6u44Ftx5UiQ9ooAn7d
YadYNlAL+PZaXwT8u16YeGKz+xLPsMmKgCh32A0vbON7ttdGeoWh56ifsw/2
nTPb7xaoCMPpfZG792KfK9M9tkFSGGbr95axHPWK376HVxjUWyd+sWy5pp3B
/1MIcr1LzwZgf4qzo8W/FALd/Wq1gdjSwfZPPYKFoC0g43cQdqqN4yupKkF4
uMxJC/Vifc+nmR0pEwT1fmIYy9fDmh93XRcE09/zZSxX5xjezEwXBKVrpSoH
scc/ycdy+AqCz8wevjDW/LGTOgxeQXANSekIZ62vPCnrpa8AGFcaqEViC5g9
41RzFYB5ByU3lmU65+MStwmAcuDLNJYpC0FBGw0FoMJ72yzLfhYO5g/5BOCI
vvHjI6z97Zf7UfCEH2pdF2hR2Mf4q1yP8PODx7n1nLHYAWblzjzs/EC6nEBm
2S78pn3eAh84FWe6s6zQnWkFo3wgvsxdwXJ9XqChQC0f3NhwxCkO+6+2tGRR
AB8Qaw6ei2fFt4nr6W7gBWf+yq8JrPhxhzr3PeYFv948/uOs+BX72n/f4QV5
hps+ywoiO1qUc3iBtrAliuX6j7pVIcG8QFheZD/Bir9v6OIaaV7Q8/4jkoid
cMp8h8GhtaB5/q/QSezKsqeXvgSshZMlUhSWP7+j9V30WAtlAhzOLNtIqXvP
W6yFkA/2F1gWK+UNeiK5Fgb9QCyZ1S+vP8Stf8YDV2xs+VOwu/kDCzdy84CM
2eXBU9jclOGx6WVuuGK+Y4nlDTt3aRYwueGh+jfxVNZ+F9hW/O3jBpnDN7ex
vJ9Erm64yw1FHFuqWV5xWHyDnLnBqTU19TS29oX0uS0FXMB/IFwgHTtRdzf9
yXkumF9UIbDc10Ju0jzNBSG/n6xnOW2xO5s/ggtUpzL8WZ7YrUTp3soFzAtj
1SwXaj4O8//JCXvGozwzWPVsGJxO3MYJ/msFs85gH3F70P0DcQKPcsRNlt8y
k54FGHJCx2rjI5bjCJpnbFQ4QfWGyEeW6acP64gsrIGe1stKmdiXXbgP3Li1
Br6/sC1jWXhSf6JhiQOGcuXun2WdD+xcZ3/NcMCXhyefs9wu129AGuUALpOu
TpYz7FOSCt5wQCGJ8JNl7sd9CvF5HLC58opRFqs+CUk7NphywLbP32tZnhXv
hkcn2MF9m2PFOVa/kO4ETUWyQz9PWx3L5dYJQoT97KCfpP+G5f2xmrvPO7GD
NPHZOMtjw/GL4ars4JTRp5jNOi/LiGTSCzY4bW6dwfLGF797AmrYQPtf3BWW
8wbfxxfcZYPonQVFLLsLx77hz2GDUcviRpZ7jrwLmApgg33m3XMsG2QV8hM8
2IDza/gKyxdKox952LPBA55lvvPYTv2qbG8M2eCL2kc1lh/8XChh02EDT1cd
CstCgu32G5TY4E1oiCnLoRq35sPF2ABS8mxYfoui8ku52aCqpmYny/8Dr7/M
NQ==
       "]]}}, {{}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
       AbsoluteThickness[1.6], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-18.420680743952367`, 0.040317426411673386`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-13.815510557964274`, 0.06807911751079934},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-13.122363377404328`, 0.10024554764297543`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-12.429216196844383`, 0.19437676869685602`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-11.736069016284437`, 0.3397299987660877}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-11.042921835724492`, 0.45106414756747015`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-10.349774655164547`, 0.6272106133460507}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-9.87977102591881, 0.6635230132265953}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-9.656627474604601, 0.6773668642425565}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-9.186623845358866, 0.690259121100411}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-8.963480294044658, 0.6124037259837742}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-8.493476664798921, 0.6652928578429965}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-8.270333113484712, 0.7154822501982547}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-7.800329484238976, 0.7026386153583845}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-7.107182303679031, 0.7210456904575598}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-6.414035123119086, 0.7159250659064512}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-5.72088794255914, 0.7395890934394233}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-5.027740761999195, 0.7594739006872235}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-4.3345935814392496`, 0.7451191434870386}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-3.6414464008793046`, 0.7518371457897784}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-2.9482992203193596`, 0.8480118870841352}, 
        Automatic, Scaled[{0.03, 0.03}]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
       AbsoluteThickness[1.6], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-18.420680743952367`, 0.20928216631536936`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-16.118095650958317`, 0.24630878554910643`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-15.424948470398375`, 0.27046170020104027`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-14.73180128983843, 0.3343673763199767}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-14.038654109278484`, 0.40653037901274447`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-13.815510557964274`, 0.46922020550279137`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-13.345506928718539`, 0.5100768291296428}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-13.122363377404328`, 0.550915904917261}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-12.429216196844383`, 0.6585012562577613}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-11.736069016284437`, 0.7488557250056478}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-11.042921835724492`, 0.8251236547716829}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-10.349774655164547`, 0.8530387165794117}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-9.87977102591881, 0.9328648377736066}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-9.656627474604601, 0.9947318946190257}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-9.186623845358866, 0.9154580150512013}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-8.963480294044658, 0.9779101640546836}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-8.493476664798921, 0.921221739532858}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-8.270333113484712, 0.982189420114803}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-7.800329484238976, 0.9663237613864903}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-7.107182303679031, 1.0181053541570866`}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-6.414035123119086, 0.9731284294513696}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-5.72088794255914, 0.9212}, Automatic, 
        Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-5.027740761999195, 0.9822}, Automatic, 
        Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-4.3345935814392496`, 0.9663}, Automatic, 
        Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-3.6414464008793046`, 1.0181}, Automatic, 
        Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-2.9482992203193596`, 0.9731}, Automatic, 
        Scaled[{0.03, 0.03}]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
       AbsoluteThickness[1.6], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-18.420680743952367`, 0.017034780727872463`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-13.815510557964274`, 0.023114975818786042`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-13.122363377404328`, 0.02519175323603088},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-12.429216196844383`, 0.029205149513823324`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-11.736069016284437`, 0.038249567778074}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-11.042921835724492`, 0.06020468369946122},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-10.349774655164547`, 0.10463858323696072`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-9.87977102591881, 0.17149907264457873`}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-9.656627474604601, 0.19532476649457528`}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-9.186623845358866, 0.2028133539980694}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-8.963480294044658, 0.17005149060005725`}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-8.493476664798921, 0.18061121850153838`}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-8.270333113484712, 0.19707016013132753`}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-7.800329484238976, 0.20223211110996098`}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-7.107182303679031, 0.23491815306701483`}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-6.414035123119086, 0.2273152572450892}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-5.72088794255914, 0.2251407593828879}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-5.027740761999195, 0.22144482454322575`}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-4.3345935814392496`, 0.21198822813262064`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-3.6414464008793046`, 0.22677376721711454`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-2.9482992203193596`, 0.23746180721489046`},
         Automatic, Scaled[{0.03, 0.03}]]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
       AbsoluteThickness[1.6], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-18.420680743952367`, 0.21009034855965422`},
         Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-16.118095650958317`, 0.5423327839378879}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-15.424948470398375`, 0.4762196409778539}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-14.73180128983843, 0.5141595005164424}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-14.038654109278484`, 0.578971980396793}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-13.815510557964274`, 0.5283604320231993}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-13.345506928718539`, 0.661328337341977}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-13.122363377404328`, 0.6665223934346988}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-12.429216196844383`, 0.7543697962583974}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-11.736069016284437`, 0.7838578587659435}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-11.042921835724492`, 0.8672473750142572}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-10.349774655164547`, 0.8903750499291536}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-9.87977102591881, 1.0696652037654129`}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-9.656627474604601, 0.9278234793061828}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-9.186623845358866, 0.9525268856219794}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-8.963480294044658, 1.0053674946906008`}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-8.493476664798921, 0.9830059857788185}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-8.270333113484712, 0.999169651878119}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-7.800329484238976, 0.99077292168301}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-7.107182303679031, 0.9648779153521777}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-6.414035123119086, 0.9835006858824072}, 
        Automatic, Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-5.72088794255914, 0.983}, Automatic, 
        Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-5.027740761999195, 0.999}, Automatic, 
        Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-4.3345935814392496`, 0.991}, Automatic, 
        Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-3.6414464008793046`, 0.965}, Automatic, 
        Scaled[{0.03, 0.03}]], InsetBox[
        GraphicsBox[
         {RGBColor[0.922526, 0.385626, 0.209179], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], EdgeForm[{GrayLevel[1], Thickness[Tiny]}], 
          DiskBox[{0, 0}, 0.1]}], {-2.9482992203193596`, 0.984}, Automatic, 
        Scaled[{0.03, 0.03}]]}, {}}, {}}}, InsetBox[
    TemplateBox[{
     StyleBox["\"wild type\"", FontFamily -> "Times", 10, StripOnInput -> 
       False],StyleBox[
      "\"Q18A\"", FontFamily -> "Times", 10, StripOnInput -> False],StyleBox[
      "\"Q18M\"", FontFamily -> "Times", 10, StripOnInput -> False],StyleBox[
      "\"Y17I\"", FontFamily -> "Times", 10, StripOnInput -> False]},
     "PointLegend",
     DisplayFunction->(FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], Null, {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                   ImageSize -> {10, 6.6747670784988635`}, PlotRangePadding -> 
                   None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[-0.054435681955988385`] -> 
                    Baseline)], #}, {
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], Null, {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                   ImageSize -> {10, 6.6747670784988635`}, PlotRangePadding -> 
                   None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[-0.054435681955988385`] -> 
                    Baseline)], #2}, {
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], Null, {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                   ImageSize -> {10, 6.6747670784988635`}, PlotRangePadding -> 
                   None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[-0.054435681955988385`] -> 
                    Baseline)], #3}, {
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], Null, {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                   ImageSize -> {10, 6.6747670784988635`}, PlotRangePadding -> 
                   None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[-0.054435681955988385`] -> 
                    Baseline)], #4}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.4}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
     Editable->True,
     InterpretationFunction:>(RowBox[{"PointLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                  True, FrameStyle -> 
                  RGBColor[
                   0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                  True, FrameStyle -> 
                  RGBColor[
                   0.587148, 0.40736066666666665`, 0.09470066666666668], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                  True, FrameStyle -> 
                  RGBColor[
                   0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                  True, FrameStyle -> 
                  RGBColor[
                   0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.922526, 0.385626, 0.209179], Editable -> False, 
               Selectable -> False]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
          RowBox[{"LegendMarkers", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], Null, {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}], ",", "0.03`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], Null, {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}], ",", "0.03`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], Null, {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}], ",", "0.03`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Medium], 
                    GrayLevel[1]}], Null, {
                    GrayLevel[1], 
                    Thickness[Tiny], 
                    CircleBox[{0, 0}, 0.1]}, 
                    DiskBox[{0, 0}, 0.1]}], ",", "0.03`"}], "}"}]}], "}"}]}], 
          ",", 
          RowBox[{"Spacings", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"0.5`", ",", "0.4`"}], "}"}]}]}], "]"}]& )], 
    Scaled[{0.01, 0.73}], ImageScaled[{0, 0.5}],
    BaseStyle->{FontSize -> Larger},
    FormatType->StandardForm]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->NCache[{-Log[100000000], 0}, {-18.420680743952367`, 0}],
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"\\!\\(\\*Cell[\\\"fold-change\\\", \
\\\"Text\\\",\\nCellChangeTimes->{{3.6541943215768204`*^9, \
3.654194322649226*^9}},\\nFontSize->10]\\)\"", FontFamily -> "Times", 10, 
       StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox[
      "\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\n\\n  \
RowBox[{\\nRowBox[{\\\"[\\\", \\\"inducer\\\", \\\"]\\\"}], \\\" \\\", \\n\\n \
  RowBox[{\\\"(\\\", \\nStyleBox[\\\"M\\\",\\nFontSlant->\\\"Plain\\\"], \
\\\")\\\"}]}], \\n  TraditionalForm]],\\nFontSize->10]], \
\\\"Text\\\",\\nCellChangeTimes->{3.6541908437503166`*^9}]\\)\"", FontFamily -> 
       "Times", 10, StripOnInput -> False], TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[1], 
    Thickness[Large], FontColor -> GrayLevel[0]],
  FrameTicks->{{{{0., 
       FormBox["\"0.0\"", TraditionalForm], {0.02, 0}, {}}, {0.2, 
       FormBox["\"0.2\"", TraditionalForm], {0.02, 0}, {}}, {0.4, 
       FormBox["\"0.4\"", TraditionalForm], {0.02, 0}, {}}, {
      0.6000000000000001, 
       FormBox["\"0.6\"", TraditionalForm], {0.02, 0}, {}}, {0.8, 
       FormBox["\"0.8\"", TraditionalForm], {0.02, 0}, {}}, {1., 
       FormBox["\"1.0\"", TraditionalForm], {0.02, 0}, {}}, {
      1.2000000000000002`, 
       FormBox["\"1.2\"", TraditionalForm], {0.02, 0}, {}}, {
      1.4000000000000001`, 
       FormBox["\"1.4\"", TraditionalForm], {0.02, 0}, {}}, {0.05, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.1, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
      0.15000000000000002`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.25, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
      0.30000000000000004`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
      0.35000000000000003`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.45, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.5, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.55, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.6500000000000001, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.7000000000000001, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.7500000000000001, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.8500000000000001, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.9, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.9500000000000001, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.05, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.1, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.15, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.2500000000000002`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.3000000000000003`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.35, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}}, {{0., 
       FormBox["\"0.0\"", TraditionalForm], {0.02, 0}, {}}, {0.2, 
       FormBox["\"0.2\"", TraditionalForm], {0.02, 0}, {}}, {0.4, 
       FormBox["\"0.4\"", TraditionalForm], {0.02, 0}, {}}, {
      0.6000000000000001, 
       FormBox["\"0.6\"", TraditionalForm], {0.02, 0}, {}}, {0.8, 
       FormBox["\"0.8\"", TraditionalForm], {0.02, 0}, {}}, {1., 
       FormBox["\"1.0\"", TraditionalForm], {0.02, 0}, {}}, {
      1.2000000000000002`, 
       FormBox["\"1.2\"", TraditionalForm], {0.02, 0}, {}}, {
      1.4000000000000001`, 
       FormBox["\"1.4\"", TraditionalForm], {0.02, 0}, {}}, {0.05, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.1, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
      0.15000000000000002`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.25, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
      0.30000000000000004`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {
      0.35000000000000003`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.45, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.5, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.55, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.6500000000000001, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.7000000000000001, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.7500000000000001, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.8500000000000001, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.9, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {0.9500000000000001, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.05, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.1, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.15, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.2500000000000002`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.3000000000000003`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {1.35, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}}}, {{{-18.420680743952367`, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "8"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-16.11809565095832, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "7"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-13.815510557964274`, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-11.512925464970229`, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-9.210340371976182, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "4"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-6.907755278982137, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "2"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "1"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-17.72753356339242, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-17.322068455284256`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-17.034386382832476`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-16.811242831518264`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-16.62892127472431, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-16.474770594897052`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-16.34123920227253, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-16.223456166616145`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-15.424948470398375`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-15.01948336229021, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-14.73180128983843, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-14.508657738524219`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-14.326336181730264`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-14.172185501903007`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-14.038654109278484`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-13.9208710736221, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-13.122363377404328`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-12.716898269296165`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-12.429216196844383`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-12.206072645530174`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-12.02375108873622, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-11.86960040890896, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-11.736069016284437`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-11.618285980628054`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-10.819778284410283`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-10.414313176302118`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-10.126631103850338`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.903487552536129, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.721165995742172, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.567015315914915, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.433483923290392, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.315700887634009, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-8.517193191416236, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-8.111728083308073, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.824046010856292, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.600902459542082, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.418580902748128, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.264430222920869, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.130898830296347, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.013115794639964, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.809142990314027, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.298317366548037, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-3.218875824868201, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-2.9957322735539913`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-2.813410716760037, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-2.525728644308256, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}}, {{-18.420680743952367`, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "8"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-16.11809565095832, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "7"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-13.815510557964274`, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-11.512925464970229`, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-9.210340371976182, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "4"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-6.907755278982137, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "2"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         SuperscriptBox["10", 
          RowBox[{"-", "1"}]], DisplayForm], TraditionalForm], {
       0.02, 0}, {}}, {-17.72753356339242, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-17.322068455284256`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-17.034386382832476`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-16.811242831518264`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-16.62892127472431, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-16.474770594897052`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-16.34123920227253, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-16.223456166616145`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-15.424948470398375`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-15.01948336229021, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-14.73180128983843, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-14.508657738524219`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-14.326336181730264`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-14.172185501903007`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-14.038654109278484`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-13.9208710736221, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-13.122363377404328`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-12.716898269296165`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-12.429216196844383`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-12.206072645530174`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-12.02375108873622, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-11.86960040890896, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-11.736069016284437`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-11.618285980628054`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-10.819778284410283`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-10.414313176302118`, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-10.126631103850338`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.903487552536129, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.721165995742172, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.567015315914915, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.433483923290392, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-9.315700887634009, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-8.517193191416236, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-8.111728083308073, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.824046010856292, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.600902459542082, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.418580902748128, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.264430222920869, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.130898830296347, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-7.013115794639964, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.809142990314027, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.298317366548037, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-3.218875824868201, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-2.9957322735539913`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-2.813410716760037, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}, {-2.525728644308256, 
       FormBox["\"\"", TraditionalForm], {
       0.01, 0}, {}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0}, {}}}}},
  FrameTicksStyle->Directive[
    GrayLevel[1], 
    Thickness[Small], FontColor -> GrayLevel[0]],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->NCache[{295, 295/GoldenRatio}, {295, 182.32002668121896`}],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-18.766068507901473`, -1.9571973290449387`}, {-0.03, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{
    RGBColor[
     NCache[{
       Rational[223, 255], 
       Rational[72, 85], 
       Rational[40, 51]}, {0.8745098039215686, 0.8470588235294118, 
      0.7843137254901961}]], 
    RectangleBox[
     Scaled[{0, 0}], 
     Scaled[{1, 1}]]},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Input"],

Cell[TextData[{
 "If we ignore the repressor and reporter copy numbers and use the leakiness \
equation above, this implies ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", "28"}], TraditionalForm]]],
 " repressor per cell for Mitch's wild type. That number sounds suspiciously \
low, since if we naively assume Hernan's 10 repressors per cell for wild type \
and further assume the repressor plasmid has a very low copy number of 5, \
that would still imply ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "\[GreaterEqual]", "50"}], TraditionalForm]]],
 ". Another point to consider is that if ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]]],
 " really is 28, then we are likely near the limit where the repressor copy \
number equals the reporter plasmid copy number, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "\[TildeTilde]", 
    SubscriptBox["N", "ns"]}], TraditionalForm]]],
 ", and we cannot use the fold-change equation above without using Franz's \
more general form for fugacity."
}], "Text",
 CellChangeTimes->{{3.6740891439935913`*^9, 3.674089465235038*^9}, {
  3.6740895238401637`*^9, 3.6740895600444736`*^9}, {3.6740896462444315`*^9, 
  3.674089654392047*^9}, {3.674089718209565*^9, 3.674089747131417*^9}, {
  3.6740897812902784`*^9, 3.6740898210757537`*^9}, {3.6740907443991847`*^9, 
  3.674090917736124*^9}, {3.6740909497634706`*^9, 3.6740909579448853`*^9}, {
  3.6740911788855214`*^9, 3.6740911798839235`*^9}, {3.6740922641012974`*^9, 
  3.674092291511149*^9}, {3.674319635102208*^9, 3.674319645788434*^9}}],

Cell[BoxData[
 RowBox[{"Quiet", "@", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"0.036", "==", 
      FractionBox["1", 
       RowBox[{"1", "+", 
        RowBox[{
         FractionBox["R", "Nns"], 
         SuperscriptBox["E", 
          RowBox[{"-", "\[Beta]\[Epsilon]DNA"}]]}]}]]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nns", "\[Rule]", 
        RowBox[{"4.6", " ", 
         SuperscriptBox["10", "6"]}]}], ",", 
       RowBox[{"\[Beta]\[Epsilon]DNA", "\[Rule]", 
        RowBox[{"-", "15.3"}]}]}], "}"}]}], ",", "R"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.674319403296159*^9, 3.674319485745304*^9}, {
  3.674319594181332*^9, 3.6743196183091774`*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Unifying Phillips Group data and Mitch\[CloseCurlyQuote]s Data", \
"Section",
 CellChangeTimes->{{3.67408726764417*^9, 3.6740872983089237`*^9}}],

Cell[CellGroupData[{

Cell["Energies", "Subsubsection",
 CellChangeTimes->{{3.674319283464121*^9, 3.6743192852027245`*^9}}],

Cell[TextData[{
 "From ",
 ButtonBox["Brewster\[CloseCurlyQuote]s 2014 Cell paper",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.rpgroup.caltech.edu/publications/brewster2014.pdf"], None},
  ButtonNote->"http://www.rpgroup.caltech.edu/publications/brewster2014.pdf"]
}], "Text",
 CellChangeTimes->{{3.674319322535112*^9, 3.6743193304517617`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQVcXFf6/5//Srvdbr9b+9W7le1Kt65pkqaRNk2atHFXkkJciIcoLoMG
gru7OwR3l3EfxgUYd8n/GaallJCEBAjQ3vdr4DVz77nnnnvuzOd5nnOPvLHv
xPr9f5gzZ87pv8C/9XvPLzl1aq/dhj/Bh6V2Z2z2/RHeYP6/OXOM8Gd+fwsB
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
AWEGIBQKHR0dN2/evH///mPHjh2dVCDD48ePP9hR9yzM3TO/094xM7898agt
o46CNydOnLjnhTwwD5b5eKr67nV7lyq9U6WN3Hj7llGVNp7b+mA8WOb39U27
S7I77R1PpR297XYfG2Lk3imqtDFLeBcgpbW19cqVKxctWjTduoUwITAYzJw5
c1544YWPPvpo/qSyYMGCd95554033pg7d+59HfXxxx+/8sorn3766T0zf/31
18fMHPa+++67//jHP0bthe0ffvghbIdTwPvh7Z999tnTTz89b9684WQffPDB
c889NzLBa6+99t577y0Y4n//+98jjzwyMofJBe7IwoUL7+sQSA9H3bNIn3/+
+bPPPnunOwKXOebeL7/88vHHH//kk09GVdrIxLALErz66qvDdQtFevLJJ+F7
Zak0qHmoZKjYSa83y3fm9tt6T6A24CsEX5W7HwXJ4MsA/8fcCzXwzDPP3L73
iy++gNoYdb2QDDa+//77wxtvv3FvvfXWv//97+E6/OMf/3inU08QOAXcEbgv
46w0y89qzhDTrVsIE6K3t/e7776j0+lTkXljY2NISIhWq72vo1gslpOTk0gk
unuy2tpaX19fjUYz5t6mpiYPD4/b95LJZBQKxWazR26USCTgyYzcAtVy5MiR
kQl8fHza29stH4uKip566qlxXs4DAPL1AEfBr/KeaVQq1cGDB5VK5Zh75XI5
OHVj3q/vv/+ew+GM3DI4OHjo0KGRNQwJXF1d+/r6hrfs2rWLSqVa3uPx+K++
+qqjo2M813K/0Gg0d3f3Ubf1nkilUn9//9bW1rsng7sPXjFUzph7oQagSqFi
R203Go2enp5w1SM3QibOzs7w7Rq5EVR95MeMjAz4gg1//Pvf/z4wMHDPa3kw
9u7dSyQS7/eoP/3pT1NRGISHBnwD16xZM0WybxriwQ6ceLI77R1zO/xI755s
5Mfu7u7ly5ePp4QPhsFgmLqjbr/S8ewdc/s9K21kAhwOd+bMmQcQmXHyYN+0
Scl8gqc2Gu52R578+5N3MtMT58FKDoHVpJcE4WECsr9o0SLwnNVq9XSXZdZA
oVAgHpnuUswyIAqIioqCUO6hndFgNOj0Oq1Oq9Fq7vjS3XnX+JPdae+Y22/f
qLvt489b4CqsfrSSSCX3uIpfvyAxXLjeoJ/0KgWVgJhuSkNdhIcABoN57rnn
7O3tIUye7rLMGsBHulPjEsKdgErT6XRT6pMDKrWqX9zP5DEJdEIrprW+q76m
vaaytbJidr4q26qK6oruq/yQuLq9uq6rvrm3GUfD9XH7hINChUphNN0tphgn
XC4XhUIhbfuzHUvbfnt7O6JjCLMXuVJO6iM19TYX1xcnFScHpAY6R7g4RTh7
xKK84r19En19Z+3LL8nvvtLDxcIlw4U7Rbo4hjtdT/GPL0woqCsACwhWQCwT
T6SetVotn89/+umnJ+vGIUwLPT0927dv5/F4010QBIQHQSTub8O2Z1Vm+6cE
OEY4ecZ5RefFFNYVtmLaiAwSuY9MoBPB8/9dvYgMIhhBuPYOXGdJQwnIPtgC
MAHwP60srbGniSPkTqTOX3vttUm6ewjTA8j+tm3bENlHmHVwRdzylpuxBXEg
9eDcZlVmgdyxBWz4347rqOusK20qK6gtyKvOz6nK/V298qrz8msKihtKajpr
wSbiaHgmj0lhUYsaiiEQcI/xiMqNLqorprEfsF0Xkf3ZjqUnDw6He7DeIwgI
00ILpjU4I8Qt2t0rwbuitZIr5FLZtPLmmymlqaBpgWlBYAucIpztwxzg5RDm
CL6uw+/gNXSZjj9ddbgTKs7zRmpgZE5UUnFycUMxBAL8fn5jd9P1ZH+XSNeg
9ODqtmq9/j6e/EJihULxwgsvTN2dRXgIWIZrrV+/vru7e7rLgoBwbyQycXp5
BnitLlGu9d0NcpWc2EfKuJkZkHID/FiQO+9En9Sy1MaeRjqHLpFLFCqFWqP+
Xb2UaqVULmXxWS3o1syKTP+UADB8YCKvJ11PKknuIfWo1KpeMtotxh2ipITC
RLaQc+96H4JMJm/cuBF5pDvbAW9/+/btXO6E2voQEB4O3cRu/+QA12i34PQQ
kaS/j8cMzQoD+QJNC0i9UdNZK1PKpruMMxHQ+TZse0hmKFQUGEfw9nvJvSqN
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
LKRFHy6dHtm4O6R2fUjdKrayo6TqNv70ifJfL9dtPVExu3doH76k0WTncDuY
35XwMVfUmE+cftFH+4McPtp/GqBSqZj3wWKx+oLzYWDwQrW6e7TZhhMsXJO8
cVd6wh105y1lch2ZKun6mR0OJ+Bwl4ZPh0UjCOzLyxmL1qa899Wl+SuSbsS3
MmkqZKof9A79UNj/ZHjQQt1l0QgV9iOlO0Ev0MzJvlizclXmy7sLv0/DneHK
MXRPi0axhu5WcoCifXpsCva0RMenydDRzbtaBaXuSwRW/FTDTmcpiXfwZ+o5
j9Eq7x5sNrtU5mXReA9HfO3ZP/fmVXzod/ho/w+F7pKl2WLXG637Agt/XhgP
An6D4TE5licgY5PJxmQo3WE/yUX+OIz45NmKVz8N/m56dODpErDHaz0vnaaw
Wp+6VP+DtA/DZrfylSSquNYd0gPyp4rrUzDHA7LfWZfzwcXa5Wyo2t8j7OfI
MSYLFAAA2i+ixxRQY+CzkWWNlxtWi7SQydpN9IEkzFHwxmI3gBFBHSezlx8J
9FtaHVTYfz/sv0djvv7cv3r5Kj70L3y070MnSExFT18QP/GX6z/MjB0/+3pQ
cOnjj+k+QNgvFumgSV7EPC+NrLibgf90XPjwb68s9U8pLWNQSXJk2A9eVSpj
X9zPE+NRtA9DqRe6Jnk7LBpZMlQ9687m3M9XZ72xo+CbRnYaS4piIJQcQNeg
1EP/mw38jBpOmvtUFcxb0aitedTwYxVT4D1mm6GWm9Ym6mqSrVtw2mw2Lh82
avHV7Q868Hi8wMDA/8/ee4BFdW3t4/6+/3O/7+a7ud9NbkwxMcXcJJaoscXe
e4to7F1BUFGxoiCoWLFSpIoKCCqi9A7Se+9tYOidmaEOvf3fmR2PhxmEAUWY
5LzPPPPMnLPPPnvvc8671tp7nbW2b9+upaVFtjC0z2CQoKa6kZ3R2bE/nRsT
UyR72HbyQsN5vz2weBwDK4D+Pi/Iv7CgevB4+HRP+x2CAG61eYL5HPo6b3Qu
N/Z20Dbo/IouI18kamaWhtGYX+DYX1SRJm5HmUSpbLEdUtPE67FVdc01CSV+
SaVB+CSWBmRXxDf3KRCowLE/ldXBYt7SlTJcuXLF2tqay+UuWrTIx0eguTG0
z2Bg0d4OXbKttbUNOj+f35SbU0kP0SNM0ViqaxC8ZN3DbybpnDzr4u6R3tmx
vyw7qwIHDobJ/h5pH2hpayqrzqKnaATJ53Hj7JJuKnvMkXMaphd6ICbftbNj
vyCAm0iKRmGMUEVJ1jg4/MJ7kSe0QmQv+K4wijjqyjKua+7j+49t/LqOwmKG
9qUIeK5CQkIKCwvz8/NlZWVJJEyG9hkMLLJyeM7uKW5eaW4v01w9UxOTi4sK
a0Qc+/GxsUuUP2I7dbHxyJn6Fo+j0lM4tMzsZbALuJyBd+yXhPY7iINkXekr
tT+CUvuDs6yv+W9WcPrmou8aL9YDkUgOWeWRvNoCKkUjCcUmeUye1LII81jV
6kZOz0V7wtfDhr19JQz6CfX19ZGRkTFCREVFkRCO+L5379748eOzsgThU94/
7RcUFISGhgYHB8fGxlZWdhHJvLq6WvKcL3wh3mkDe0arECIbG4To5igoZmjq
m5LRFBcXwwrrUXnDyKSnp2eIITc3V8KkxoMNSakl5k8iLlzzkD/6wsIqKjw6
r6mptbq6ISe7ku7eCWIPC82/dst3xUZzqP337odGRxVhI32qv7CguqF+ICM5
SEj7BHVN1WKO/dEJhS/Nos8cc59y1O2Xp7GXkrpw7GeRiP3xJd6PEzqFYoMd
UdPIbW7tInJ1QwvfIUXvtNf06EIvkZjPOKqivqRXnlFMUsXBDJCqtra2oRB6
enqBgYHx8fE1NTWNjY0GBgYqKiod7532ra2t5eTk5s2bJyMjs3z5clVVVRgg
VLTJxMREY2Pjs2fP3rp1y8/Pj54hpZsKu0xZ269wcXGhJ+2qqqqytbW9KoSl
pWWXUazBzPfv39fQ0NDR0YEUFi8AWYxK6IE3uwSkw8qVK3HJtm7dum3btq1C
bNy48dSpU5Dyb9mvAURkdM6DRyH0LY2NLUWF1RSl48MSOPYXW79IWCjz8OuJ
2moXPewckrMyKtKoqf7EspysigF07O8V7XcIUzRya/Oh0tMd+9NKAl1Tjc55
r5B1HKobsj8oyyqPE0cZBZml4TATaht4MUWeIto+t64wMMeqtDZH5Cxt7a2h
eQ6Wcef8sp5ZxF0orM6k7+XWFTunGXb5dvCbwND+QAGU/vz5c/oWqJoBAQGm
pqaurq4kCDA00rKysnIhOBwO9Pxz5855enriNzhfX1+/4/3S/tOnT4cMGQIZ
FB0dDYaHwn/48OGZM2cSGqyoqFiyZImsrKyzs/O1a9dmzZrl7e3dvRICkly7
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
SFtbW0pKColE3SHMLImW9LEbf2EIUjTmvU7RmCbk9ojwfC29wFkrTBbKPFS7
5JmU8MdUP75t7ZIuavokJJTU8d82ZB9D+9KImpoaPM7kd59pv7Gx0djYGNQn
YTAfMPyYMWMWLlwoJye3Z8+e5cuXT5gw4ebNmyIcIoKoqKijR4+iwZKcAkwC
sTJ37lxQqEju8ncFcNT27dunTZt25coVNH7VqlXz5s3z8vJ6y2rd3Nz27t3b
2zioIkB7DAwMJCzs7OysqKjYfaBpkPbWrVvz8/PxOygoaPXq1VOmTJk9e/bK
lSupjGAuLi5z5szBmGM77gd6xGkAnaKS4FCAjNu8eTN1atS/Y8cOkbh8DCRB
a2sbt7wOzE+f8EmML7VzSF6x0Xz8XINtck99fLPZGRUC2rdP0tD0CQvLz2R1
kaKxV2BoXxpx+vTpRYsWkd99pn3wAKhbSUnp/v379GiQbwJo/5NPPgEto3C9
EGCMn3766fnz591EDPb19R01apQImbwJoHo1NbUuk9i+E0BxRX8hs/Ly8lqE
gH5+6tSpjRs3vuUsGRRgScawe+zatavLfO5dAnIf8rf7ZkOOaGtrkzhIX331
1YkTJ2AdlJWVaWpqrl27FnSdlpY2cuTIx48f4wKFh4f//PPPtra2KMzhcFC/
vLz8kCFD7t27R1WYm5uLGwDH0vOsof5bt24xUYb6DD6/SRDD53XoTsHETlRk
4b4jdj9O012+wezew8i87CpHp5TLN3yjIosyBa93cfJzK9t74bPZCQztSx3w
kF6+fHn+/Pnkb99oH+VnzJgRHR2NZ3/37t3e3t49HkJoXyRLoK6uroyMTElJ
SYdQt1y8ePFnn302duxYsA00/Li4OKiFH330EbRraMKowcLCYvTo0V988cWK
FSsgd+j5apuamvT09H744Qccbm5uHhISAhHg7++Pdj569AgFPD09p0+f/l//
9V/r1q2D0k6OgsYLpjp+/PiwYcNA6eAucNq33367dOlSFosl0gUfHx8wm0gw
HNCgiooKSYzY2tqKc02ePHno0KHQfklCdpgzkEQYdjIvBHmHnqJ+UB/aY29v
jzJo7bVr18h8CJRhWBAYh/Hjx+vr63dp6aDvS5YswdOnoKBAZld0dHS+++67
77//nuQsoCM2NhaC6dNPP4WQBZMTIQta3rdvXzfXPTU1FVo9GoPfoHe0lqj9
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
/7sIBAI3Nzc4HD4l+2CQsmPHDlVVVaDVE4pRBrjXggULQDbA8MHBwQEcBGWx
sLBQLlVIpVJwQmpq6oTiLW0nT54EbgKkdvr06W3btoHiq6urgxOmfvSzoKAA
5BB4Q+Vx5QwScAegpOXl5Z+9mSAgICD+AwCRB/Gwcsf+yMjIVDAP4nwQIU/b
mfkbgGuBH6msrPzw9zHZbHZubm5nZ+fUEeXkObgFuDWZTH73ZAaD4ejoOLUP
848CxggNDQ1/7ie0QCUA9zH18IISoVConPiCnuSCgICA+NOAIcCZM2emds4o
AR+B70ChUJs2bYJ+ggECAgLivwmg7c+fP58m+3Q6/f79+3Z2dmDUAL3yFwIC
AuK/CR6Pp3wM9l2AF6BSqSwW638kSxAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEBAQEBAQ/4VIBPyeNnpTHb25/tc/8JFIHhkUjNK7
GI21zL4BqfR/Mo/SITqvs43dQxMK/0Q+xkd66ntLckn5OeTyN6z+oakvxJz2
/oZ6Vk+/SPLZsiobItMb6pgdPWPiP3CVZKCb0Vzf3zRV//X0lhZOH0v8+TL2
b0I6ymI31tJJ3SPD/8m8SoV0MquthUvniv+CZYo53fSqwo68rI6iwr7WXtHb
w0IOhdlYy+hmjo/L/nzqo/3sVtCmbcOi3z/3A6Rj1FYKMNq8rM6yCkYP81dr
kvIHSU39DXXcgT9iYf/FiAc4TbV0Iok/NGOFSIcojOqijnzQ0EWU5i7h+H8y
f/8rETTXoa9EH9oVdWz3r39Htkdcet7+pq4r9nnsLudYTPHIn9Hbz4KQmeuf
++hywrlDsZcuZsB92ltp4k/ui7JRamfYs5SLbsGbLHwczAK2bY69fqc4vnxU
XhrpQObFkB2uKchQ+tDvpvSpiN48CHPbnvgI3jvwB64ayX8e574rEtT80V2R
RxR/xw/Ee3jk+CUyOSOfLXOfH+lIV1LKTufI23Bi2+erxN+55ygzDZF2wz36
8N7ssMyB0T+ViJjHrogpfHAy0s3O197Id/3aMPezOT7RFCpQhCFaLi5hl3P0
iyQW589IthJZR0jKBbfwAyfbGH/wSiGl5zU289rB0K2rfR1N/V03RV+6VhSd
x+GMyb8drS27dyJiz/qc3D9iYf+9yAYLMnZviLx6v676oxUiHiwPL3x4Nnqv
o7+zud9Gh7BjJ9MQAeSe4X9floTElLqoyNbCasHn9i9iblNrdGhjVhGL/deS
HqwsvrMFa7QKY7IcbbQEbbhY/qc/C7XufGNBdU/Ci3g3xwRc6YjoL4Q9f4Gx
spehLuoo/UXeDla+qxfD9TX83J90dLI/zQlJWDHn/K0WIy0Mg46eSL97NsbV
FGs4H73GKTuXDr4ezLkSvn1bGiqCyf9sGRbm7nu1con/0Wsk5h+4SpBwDmet
irbQwG90DHF1CAb93VoVpbsIZWkai/sf9Lm/i3S0Ozltt2P0HQSp/fNV4m8i
6X+dZLsQYW7ov+9E6eviIeGfSEPMb0zOPmCE1ltIcN2ZfPd6+lknjPYStKlZ
/IsYnnCYUYBPcnOM83rN5v4F2W98GbReDaFtUUP5I5dJaOSQe+FOGiiDuXBD
veA9m4McV8G1lmBtHZIDcgYEIEQoTt+/BqWmEh33RyzsvxcZJyl86T/QWw4X
F3ykQkYqEDHbDDF6C5FGq/y2OoduMsAYLUAY6/i7e1L/bXEKL3oT2tgg8sYr
2uf2LWMk31CDpX4nbjc0/7Wkh96U3HP1NlqIOhLAotP5TPoQA/z1D7G4ojGx
TCwSj46Ix98bv4s4/cNDf7Y7jA0IGEzRlKcS8wbJHXzBTGfTao7qwoz1I54k
cQd4g00ZBVetEJp6KQk1I5/i68S9lTu+g5tYxD4NZAwMiwSC0a60zOO2yOUq
L93C5AWQCMdHR0ERP3BpAn5v/9SIUTLUP0ihiT46gpQIRhiMd78S5h2EaawK
cL/RwXrnNClIkDw4MGOmBYkXCWvUsXY2eaX0sQH2MIcjIBeWPdqFM1qEcLnb
y3wn4BcNDPX2jM40oyIE1cueabZFMtgvYA1OfSsbonG7eoQfFF42wh3qah/o
Y3xQYpGQ0cUldw3z37mDTCy3EKFI+l46An4XeWTmYYpssIfXP/D7kYRoUECj
jo29X4rmh4RVC32OX6lrBTf4eBqgpDxy+wCN8/GqEDO7Y2/66c5B7/ulvYki
HBaIhrk9XlYvlnyFcT1a1QLupyjUh4YhHR4G+fnQ0YgHBH30adUla/QK2aSN
Mlj9nuyPD/Ip3QLBTNMRMkGJX9IOXbTxHOxhLyqNPTzA5ffU1r/c5a01H+ly
tqGOPjFalnnIHq39ZWwiV35nLoXPnaGih+lDNPavZQCWQ+kbm7njSjh9gsEp
ExWNULuG2B/tmWMj1J5h/seMWdDP6yLOUO3SMWrnEHfmsZmEJ6BNma5snNvH
+4gFgvL2DZBJPMbQVLFknNcRqrOwrkdLCj+QfUlb/uZlSCNVn13uFQXtggHu
CIfSE3Yr2EkVoTkvMpD03skjHD6NPvN8r2SMSRXwpre9bIw92N3Bo7Il79iK
INreS1MjzOMl48PUxjmD3f2fOD03zqUO9rPetUJxt2/gilm4Y7ca2/9aKKiU
fcM5qFMp0xtSRiMG3g91Ng15nitQBJzjXbEZe60ILhZ4B8eEJ/fS7pwJtDd/
ndIhmxhqPm2J27g5CZGnMCshK8snydXIez+8f0AkzL2Cc7KLPPuwPR8Tt0En
4Dq6q082wW9qfHE8aKMFfq0JYb1D3IsI9ocWIarK2mbou9m1vF6RqrinBb8f
s2JRQlTlJ82XCtsKbL9EmhqEX4P1sZWHxIMNhcTk6OacZlBYbvIhvKND3DPf
/mEZPz8wxc0Yd9qvw/966JbVBCergP0nypIre5MehDubEJwtCVsPlJT0yJuR
kxBpYx7kvj8D/zx+qyneyZKwfmNacInSE02X/WFyu8+V8C2WeAdwpnnYDQz9
Yz1JLvs2QPZtS1qnjg10hT0IMlsIszzX2a+4RtBQfWeLL8gJSGrDphRCFk8g
bxRh/m2/TbYh+y9X4c8GOpgRnCx8dx0rzW0Vyb/kd97f6bPRPuqXrK4Ad//V
1kmYWJ50QkRMLbjk6udshrc38928LTemRmmHMh6xFXs6ZIMZztYAZ29OWLe1
MLNP8c0orzo45aAd3t4IZ2uMd7IOu0Fgy3uAdLgjOtbBPPDCL81Ng/IT+a3N
sJNBm60J9qaEdWvDLnuSOhSZF3Y0YC4GrLV6HRlafGWbj5M5wXl18IlbjfXc
jzadbLCp9pGbHyis/EzbqLt4KhOosaT3tjN2rZ63tY63rSFu7Ybs8CzB++Yv
YxUUnVvv42SGszPEO1j47DhYnN0qnNbNhNSOsDN4nSXIdWfrqvonD/Lq2pOi
W7ML2Aw6NQse4WQW/DCaOSARlT4J3m4TuPt6c9z9cGdzuSVsdsuJLRdMCsBg
D/a4j7MVaBT/g8cyHnum7zPzOYXpoQhlLfB3ZV86SGqBuQevs8A7gjayjX4a
yXvfncmRUJpR531Nl8DNjrVTfxXzsY6CkhNWvo5bS/Nax/ly2cfoL4gJTC49
a4d3svAB9XOfQKGA80cpWI/QTca+d3PoMecD1lhE3UMxRBNSRk3tz0eC14Nu
C9rUKviyF42nSHeosw23A2e/szjoRf6DwwHOFj4ulkFXccz+qhJ3S5yjOchn
1IMgGm0qJywS7JC/izVBXoQ1YReetLUwJqtf3Fb3cA/BadJyAg6eryoivtUT
HjXyTsjmNQRH0AVWBx+7UlPapZBDCTv6lxhXE/yF6N7AU76gsZytgk7drc8p
IgZeCXFSdDrghZV2BfS183XOSWcfR1OcrSHodEDJ37zpB4oo484o+5IKD6TG
UozThvQo4q9mImqveXIkxFkn6OprpYqIKMVlN0F3sCDIK3Nt7M8RHIUWSYba
K/brE/afz/wFnXvJheBo6eNiEXTVmzEkUWSI2uq5L9DJHG9niLM389l1pLSo
d0LaUXbMBWeng7XW9V5jgHPeWRCf1ZvuB8SQcDmCEvckaouV/3b3+orAqLUm
gVeetxIVQbvgTeGNfX72enFJNGWOBiv9Ug7YEhRZImzfmxvfBG7Z/8wRu9bI
20rHe40hztYiFpvI/NMDFqXsGy9F73nalpvRIf9L78gvpHeD/kht9r5I0PgC
fy9dACqIlxmn+QXSTIuwcX3sqd3BLjpoUzWUzoLY+HbZxGDDnvkwU7PoXzIV
vWGMmYKMXv2117qfqUD2M47D9VZ5Wxr7WSxHmyzz9UCTSjJKrjuidVd4b92V
fNM9zE4VaaQfcT94xnBYxKVnBRQ/cg+1XYTYcKm5uf/TXN0YxWsNwlAVY7YC
aaDm53YolxDd18t76zyl7Jj1XqtWht1FUgUTQ1m4eMdFKLMVKBPtoP0b/SzV
MRbqaOMlSCvTgB0uAesMMWZLvCwvdLPEE5zooBXz0OBbC8PA/btjD7n4Wqsi
1WdHBVaDShLlv5V9DpCExpqft2C0lmE3bk3wOB613gBltMz3mBfrA581Kftr
7YqbJxVKyqqqfOzqrT8Pez6SB7qdsCbTSgVuouvruivx/P7QDdrAnmN980HY
KMo5jzFTxZirolebhh47GL1njbfZMriuU0kRSTohIF1ZizJTwzhYY41Xoo2N
EjFh3QURyTtXIIy1A48cTbu0HW++ArXaJiW8TSZjdoZdJqjPxe5yz8Miyx4f
wFuuQJlbFtUNC7vzspz+ATe3i7vzUwX2YeIOK6yuCupMMsjrcHtQ6MqvsAdu
1zfwJ4YqSzzWYfWWoK3sYi+7R23RQhksxLmdrakdmpCQal4exhmCPCxDO7lE
H3bBW6ihDNXDbsI/MtYerst3UYEbqeE3OEef2he6xQRtNNtr3V0Kl88OuRt/
xAZjoYVzXh165np1TvV7wYK4Lc9GBWao7b/3ZCH6Zc7lnX4Wi70M9rWQWO/H
7WOckoAEh0Voc1WU/lyUnWPigxdtb8hvrW+gJ+knf7W/464E07kSUeFNMBCT
V6+lQeCeLSEb9TBmS+E2J+urgUMUUWE70CbLMVb6gYePxB+2x5msQJsuRu1+
Qe4ek7UqZd+mlgr6Tlv1OVWYnprPdtfEC/tDNpmg9f6OvZw0XfhZxcV3nTEG
c709UkdmigiHizMO2WMttDBmq3CbNkbsscNZqCG1tZICs/mS0V6vE36WyzGO
NlhDkBPdiDvwnuaK0vN6cL0V2PWb4s/tC3PSRxst9l53sh2EJfyOZpgdwkAV
bbwKu84J5MrbShNjvgqpvxznYB/m5kCwVENqqSYEFyhm0vrqTxvD9Fdg7awi
Th2J3m2FMV4Atz9ZJ68HQcf9zRjjxd4bjhX7Y4vu7A8wno3YeKWuijExwW73
3Ic3WYwy0ws7fSL+4BpwGsJmZ2FKI9Ax0JqhtsvQZstRZvrBe9f7yjudGtpo
KcrGOniXk68jqOpFr6xusaUTEmZhurUKzMgwxP1yMcYzw309wXzRK/3jPcAn
DCTPIPsyxjN7mIGa775TTX0zVCYQ797sDId/wI3UfbZtiTu1K9BFH234w6tN
z7hiMBxuLVn/NdJMDW2q7bt1feg2G7y1BlpXxRdRBzpoP87GS2Ol3+59uRhE
0b0DQfZLvDS2NrY1tMJvxLtpoy11COtsYzweNhRXUZJQ0bYL0faWWBMNjIWG
z8aDtSW4INVvcccfNLYoZb8s57QLWl0lPIYm399R+Chg1Y8oc+OgvTui9tgT
LJfDly16nU7mxt9NOOGCNdfEOq0JOXa6OLFo8E+v+yll30wLa7kMoTULrvED
XOOrVxqWKT6F4glGC+6yj86/CA8yhqUTg8HrXuqo+h263Norv26sITb9gC5K
Z3FcApD9oYZ9S+AWljGeStkXMlNRMbazYBs8aQPjwswTCEN17GrjMA94Vwdj
XMTqjXgaZvEdat8rqmL6YrzDJ1xnDmbHsbJS9kfzOM6oK974T4TxKpSpTbJP
BnfoUzeNgEZtfn4kaMsaH3s9jOkypO5c2PJvfY897eqTzw9wYjfCNNTD76Go
wxND2fgElyVIPYv8MvkKnOjNbYL2MrTd1qzIOqAYo6X+ia6qiFVm5W3DE5yY
YNUFaBu7RFSWQnPY5IDrQVYLvVbf6BuaGC84rJD9W53sMW4hIcbiK+SuB6R2
tlx2OK9jTJagHR0z0+jT8imXfVstrLU2xloTb6WOM1+G0l+ANFrhveNyK0ke
Dw/4rX+prRF08heqPPYZ4+T7Jq6f/8r6EonCH8u9jLVQw9rbZyYrwkoBsf7F
Tm+9b/G3EnjDXNJ1J7SFBtZuTSImhcPkS7j1tbADWLWFEajsIcVM0UDETqT2
qsDTD7vIHS2ozSiNRSHPYumMEeAVuwM8C+Cwpoq+webQKP1/ITeee1NAEkml
o3Vx5cinhbgkYLIj7cGh6j94H7rX2MRgp7yKsp8PN9/X2KXQs7GON0eXwfVM
E1EJQ4LOOq9jeKPFiI2PlWMXbuR2lPYS33MPWrqmt+Zg7GaYxkrfIx7NnQrt
683KPbcGpfFtZHgL+CRuuINXW+R7+lYr7YP25uTmXj2d5unV1i7PwEhNTMYB
DbiqdUU9dXqcIAWBBCLxoKOfswnOciXSYAFc4xukw56ybLJENtCb/DRA6zv8
1RA6iPYLb/nYaWBszNPS5KoibM/K3r4Erm1bUkgUc7OTd1mhDRZEYOvlaUqY
5IDjeIMF6L0vu3reyr7hmtre8cHCm/hlC/wvepLI8m4urMLH7jJALNau6Hhf
3CmZeR6WKL0fAxAVwplsXCH7GJOFPqdD5Z1HRCPC16O05wU9j2MNCSjwU/6r
1TCmauE/RzH7ByUjtJ7kxwFaszH7n3R2K+p9uCDNSR1pZRaDrJKMdLfAHZC6
S3yvBdDlVtZXfcIWbabm63a5mw8quq/N2w2jPcv3cSx7cEJc/sjXVh1jY19S
o7D6obb6JxvQmrND4Bl8Xlv5aWeM4Vy/G6/541Ixt6cn2jMfRiAT+8caA+P2
6CO1VVMyFAvbUg4Zsx2tNT/wHoHKFXLD74etXYHUsapUTFlwsy7hdZeiHA+X
55Lld0j+KWydGmK5ZRNrQtwdn331TAYysJsikk9P5qJiXdXhK2wbQADIm0n2
x7uvmsGNNAIOXesenKEyJYI+X0e45qqga7BuRaeUtoQm7DFFqf0zKYsDjLtk
4/cIY8OYF+FseahGqn64l2A8G7Y/fnximHh2vpe+UfQjn36eRMYndSZgi54/
b2qVLyvzox29tDXDPF7S5ZGEmJUEj167HG2q6nse1t3BkIzxeXXIALXZ+BMP
m1onZT/37AaM1t8j4vonRN1vdn8DM7FKRCUNyWtlqMvvbqSrpffhwFHFJE/Q
qtn4Y7cbiX9tH5dS9k1VMc57Uh7dTpf/3Uz76VldAWiJ/reynzkyIeq6pAM3
Noy4GTi5dDdUU/l0O0Z9wfuyn/Ux2XeH66/Eb9v7RhnKgvE++jhefwX+wLHU
21fS74C/02EWc+FmG9ID37xXGOm4eGxMLBqXjLJoqf5lsNuxuy1QampxfkWC
sU9YYpZJwb8JmWiEXN4Wgcx5eCn2+GY/e32M0Q+w7S8HxBPcuE3vyb7zPNjq
S10MeUNI6JGhK2djd54qL+HIPxJj0k4awFVNSxr5ctlfOcfbdX9J+WRNjFUG
Ju3RhK8EHVw8KfsnbnfS6N0xVwg6y3G79yXdvJJx53LGw0uR1ovgxmbRnnnT
4n3F3L4mdrVBwOEjMWePRJ8+EO62lmCt7u9+r7UNuEJu42E9hIWe7/ajmQ+v
pt+9mn4JjLZWwpYYFFfThrOA7K8ibDnRORk2D9NTEFHWs7w2PKexaaTrzmBQ
5nfwsXKaUdJTWHzZAGlsEH7uZNrdK+l3PTKubcPqzMXuPF5R3k3P9orZbIo1
+A5pbhx+6lJReDod2LQ8qH1TfsnJx2YlQmcpYeuO1GferW+IAhAKTMiGJ2X/
fnNtMzHghr/B95jzcXzlGrRUyEzYi9JYGnwfT6EQ6+HH8Drf+TzJH1W08UjD
cz+1uXj3W/Vt02b3xJ1nFsKMTaIfBL8dB1CbEef9DL9DnU0ErT5WfVMu+yeu
N3V/ZMwnG2bzyA0dyYGlL68lHrD3sVJHaq35QPZlMvmOZJmE00nJDC19cTPx
0oGQDXpo0xXemw9VlrT0pHm+J/u2at5rXZsUsiChVVVeN4Crm+Vlt442eke4
6iG1NMs6lckKueUhcZbfon6VfR2UkV0Nmd+HNIMZ6gbs3pl871r6nauZdw4F
OOohVVXCo993XfT8wlv2aP05hEc5724Alo2PjjJ6ub29/CHRhKAEyD5a96uo
EIWXF7MpSdcI6rP8HobRuYO9iFN+1suQZkf6lEOX4Z427w1IjWXRuHTu5Bqg
tO+uKchMmAdhgNfbirCHq2smhirjeVHPLUeUqVrg+SC5h5CyuuLv+Gp873M3
isMfY2GPEqyWeG9+yJnM1CA19UWIwfeoIzgOg9EffDNsiwlG7xu4mWXU5Vvl
CXl06qB0QjoQ9zTCcQnM6ARlMi4V8WoDI8FVbo87iUxu5MMwuwUwm1sseWHF
Q82EYLVZ3kceNTXJW15ci4raqYNYZV5HVeSbz+QSq4jxPsWeF2N3WoPAG6lu
/5uyL6E9toEZqvvtP//+ZiqJkN0/QOkeoHHEIkbjkdkwY7s0n4y3S6SdlR47
cIbfEu6XA6Uq2fgN3Gpzdni5osMOdaEuBljO9trqC0yWk3g1eL0J1mA+yswk
4vy10pgsWu/kDP9A2Fog+6GXPakKJ8+Uy/4iuOH2RqXnBUWphweofij7/4iI
o8t4GbG636E2uZdkTw5RZKODIyyagAXqc2KU6B24ajbuyPW6xs+xpGs4B3U6
Zbr/kPU1/yr7wp6rujBjg7DrvrzJZq+p+Mn1rewPvpX9DIXsjzKSEdE278i+
3iq/Pec7lPO4w611sAM4gxX4Pcde372Z+uBG6sM7GZ6PMjxf1eY2v6uHMlp+
TahfTWz6wORRTlfEbX/9WQg3dD/rw4nR6UiZ5U3xMU1ZBXSmstNLRdTq+icH
/ew0kSt1qnqkvITN78v+XNiaq130Kdn/0Xv36YoKufuWtMemnzJ8R/Zne+88
WFY7qVei+tDkQ7rwVeaVHaK3sn+nk0Ijh5/B663A7dyXcOuGvJgPboNiZnr+
Uhb/ZtrK0NSSbkEle3xoYJTTzykPzzqzFqPzjc/D9BEhpeaAAdJCz2f7kZTH
t1Pv30h9dDfjl0cZj39qIHJGsi5hzVf5bD3bO5kdISvDO9b2R5jToz5WX/t1
Z3lHvhyp/FLUkVNwRhfIfsjZs8kPbsmTenw/0/NhFpLQRgQR/iC36vUb7NPU
q4fDtxmjdGchbFxLS+R6N85oIEZ75/10Kfboeh+rlYgV3wfeiuRLJ0ZICtk/
/KC5prHV18NX9zvv6ymCt7LPTjuBVV8UeBfb090GZB+n9S9/WKlS0EaakQGq
c+Sy3zpN9kXtR3+EmZrHPI56uwzCJKIv+5t8Dz8a8zuyz2+ouGSD0VxA2HUg
6eFPuQ9OR7jqIDWmy76ET+8viK9PTOohT1rGxBid+vpJiOUylJVTKjqkLfVF
oPa7sq/qvXZPu8J6pf3Vb24bw9RNgeyPNOEjXEEoq1ncrAxChJyygFjL76bL
fudgzzNDuJGun9uuxPu3FQYvb77MJ7cKs96X/ZG22ueHCcYLEZue9HF/7Y7C
rqLiE0beplZZr+uEvNLMw4ol3XiFykm4lOQ7vuo/+D4I6+fy5LJvNR+xCT4p
CvyuVpQjXF01zi+L93ZCgP6zNcxAJ/QymjNAUci+VlJo3pC8P4l6bitk/1KE
/Fwpqzvhnq/Gdz73ojn8EQb8EMFikfeO57y3dd2fjgg3+R6xB8WkAXPmMYrj
y+H3ky/tC9lkhNb80dv1Qn0dmR75JMJ+IczyMm2ykccH6yNiTb9DuD7oaKUr
ZH8+zO6eYtpTzG8iBKv+gHN/3NwiD6jEdeioXUD2LepooNrzi06aY3RV/fYf
Tf7p57w7B4I2aCHU1v6m7E8MJx9DaANXvr2g4B3dF5Prfzrgb7Mcf4jAH2fV
7/0XzMwp3T/3rRVSam+64Yy/x10vUsj+V3CbHblRNQovKujFXAq0ArJPUNTl
CKckrhL7U/KVg2GbTTD6/0Ks3VfxRt6gA+H202Xfbg7M4W4fS9kGkiGl7Ls/
bFJO8gwWZZ9xwWj/Uy777MQItR8w20+XF03mWTYyIKD3DdK578l+02eS/RMJ
0yNo6ZTsyyd5eGGuMC1V3z2na2ooozwmKxeXtN/o7STPSOvhpXBT44i7IYoI
jUkOuRlkNg++8R3Z33uJrBxqSfpJ/tf89X/AXwtlc8dA5CUbpdHyktsKSpiM
98Wc+Iqg/SPSyrGkQjH5I+xtJZz3NZqFPOzTT27pryvvrihjMGbcwCcmwX2+
V4Fb2Sf7lbxdAhayIm8EO6kjVhrX9sp+X/bdZpD9VfMwzpsyo5sUEbSInfoy
ev1ymN6+dpbs12ifMdif5hms/z3uHKqnZxAUE/RQRmFqW04ulTK9yX5d0m2Z
aoN+or+Hv/Fc+GYEe5jX+9Day0gv1MMfVBiIUsXsLlpJWmtOxeCIVJhzEWuh
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
UVtGcntZNaOHMT7zLmQJnzlAburMiKoND2nOK6V19Eyavfy7IV4XKFQrh6uw
CplYONCn6KRskVgipPcwSW30TsZ7aY8PD9PI/bWFrWlpnTWgUfpFyq/lxgmS
InLZgxL5EZmwT2Etvcqn4MfHuIqU+zhv300kGesn05sqSVmv5UXopo2OTg3P
haDdadV5rcnRTRk5PY3tgwNTT1RIRJw+FrG+Myu+rbCSTu4d5k8GqePsPjap
rZ/Up0ge2BiTJTcJ6siIog8O09lkIuh08hlamWi4p7m7IK0lPbMLWGx/L6eb
BFp2gA+67oCiq3YPDc2w/3ucz+9ppZSmNUSFNqRm9zS2DbD479aPDJzQS+x7
k9eWldVd18SmcsSTRj861NlKJ5EHOcpeIBEyelmk1v5O5ZKQeKy/sx90ltT4
pvTs7obWAc7wWxsdFfQQaY01PTX1XCZXOMDggKs6qKJfm1wqHqSxGspJuZmd
VY1cJpPXQwa9gz2pZjJgAJz2uq6CtNbcgt62jqHBt2E9aG4GmdFcR6muogP7
/Pe/B0vagfLX0vDZsTMFE91dnt+EvRbmuOSV5ek2MvedPqXYPPMHkMnEn/aK
HalE9leeS5OKJePj0j+WtxlgRwWtnIPdtq+4TDFE/7S31MkkwP99hpvLa0zy
7hOBStmX7+TpUCydyD79rXkyifTj73oDtxBLJR9LR37JJxXkU5v195KRSf+4
ZYMqkHzyVeDkcZHkT77zjt50bSN+rUnQkdsNecWU3LC887YoNdU4XPrAjDOv
05vvt5CMS0Siz/cWRPmtP09CMxZB3p0/bjmAv94FgPnNlPinXDsu+s3LZX+g
77x71Uyd5VMu/u07ykXvf+atOO8gYkafDzRbhbHWw9kZeltrYDceLC/q+I2g
5b+TSdnfW1T6p4dYn5NJ2d/sToJezfWfh1NceNQMZaYpf2rYVg9jaRr5OJDa
/+deDwcB8e/i/wM66kRU
    "], {{0, 468}, {509, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{207.88888888888926`, Automatic},
  ImageSizeRaw->{509, 468},
  PlotRange->{{0, 509}, {0, 468}}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Our Data", "Subsubsection",
 CellChangeTimes->{{3.6743192785967097`*^9, 3.6743192804651136`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Tal\\\\Desktop\\\\Counting Plasmids\\\\Stephanie LacI \
Data - O1 and O2.xlsx\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"acquire", "[", 
     RowBox[{"rawData", ",", "index", ",", "\"\<IPTG (nM)\>\""}], "]"}]}], 
   ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Change", " ", "data", " ", "to", " ", "Molar", " ", "instead", " ", "of", 
    " ", "nM"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], "*=", 
   SuperscriptBox["10", 
    RowBox[{"-", "9."}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.674087301481105*^9, 3.674087332535881*^9}, {
  3.67408738915512*^9, 3.674087389730153*^9}, {3.674087473614702*^9, 
  3.67408747514979*^9}, {3.674087605779261*^9, 3.674087610780547*^9}, {
  3.6740876562401476`*^9, 3.674087661089425*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"PointLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "@", "2"}]}], ",", 
     RowBox[{"font", "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<O1\>\"", ",", "\"\<O2\>\""}], "}"}]}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.6"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "9.4"}]], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "2.1"}]]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1.35"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"LogTicks", "[", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]], ",", 
          RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
        RowBox[{"LinTicks", "[", 
         RowBox[{"0", ",", "1.4", ",", 
          RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], "}"}]}], 
     ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{"leg", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Scaled", "[", 
           RowBox[{"{", 
            RowBox[{"0.1", ",", "0.73"}], "}"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}], ",", 
     "opts"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6740874769158907`*^9, 3.674087479960065*^9}, {
   3.6740878394385357`*^9, 3.674087847853352*^9}, {3.674091777983743*^9, 
   3.6740919535600996`*^9}, {3.674092391255935*^9, 3.674092396203144*^9}, {
   3.674093826617855*^9, 3.6740938270198565`*^9}, 3.6740951823777213`*^9, 
   3.6742342151863728`*^9}],

Cell["\<\
Trying to see what happens if we fit to Mitch\[CloseCurlyQuote]s parameters \
and the new functional form\
\>", "Text",
 CellChangeTimes->{{3.674094944240988*^9, 3.6740949531714067`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"fold", "-", "change"}], "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["c", 
           SubscriptBox["K", "A"]]}], ")"}], "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["c", 
            SubscriptBox["K", "A"]]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], " ", 
            SubscriptBox["\[Epsilon]", "R"]}]], "(", 
          RowBox[{"1", "+", 
           FractionBox["c", 
            SubscriptBox["K", "I"]]}], ")"}], "2"]}]], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Beta]"}], " ", 
          SubscriptBox["\[Epsilon]", "R"]}]]}], ")"}], 
      FractionBox[
       RowBox[{"2", "R"}], 
       SubscriptBox["N", "ns"]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", 
        SubsuperscriptBox["\[Epsilon]", "DNA", 
         RowBox[{"(", "Hernan", ")"}]]}]]}]}]]}], 
  TraditionalForm]]]], "TextNumbered",
 CellChangeTimes->{{3.67408753879743*^9, 3.6740875404805264`*^9}, {
  3.6740879083118596`*^9, 3.674087949817567*^9}, {3.674319709086177*^9, 
  3.674319709086177*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "@", "2"}]}], ",", 
     RowBox[{"font", "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<O1\>\"", ",", "\"\<O2\>\""}], "}"}]}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.6"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{"data", 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "*)"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "9.4"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "2.1"}]]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.35"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"LogTicks", "[", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "9"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", 
            RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
          RowBox[{"LinTicks", "[", 
           RowBox[{"0", ",", "1.4", ",", 
            RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], "}"}]}], 
       ",", "opts"}], "]"}], ",", 
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.", "/", 
            RowBox[{"(", 
             RowBox[{"1.", "+", 
              RowBox[{
               FractionBox[
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1.", "+", 
                   RowBox[{"c", "*", 
                    SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1.", "+", 
                    RowBox[{"c", "*", 
                    SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], "+", 
                  RowBox[{
                   SuperscriptBox["E", "yLog"], 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1.", "+", 
                    RowBox[{"c", "*", 
                    SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "2."]}]}], 
                 ")"}]], 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["E", "yLog"]}], ")"}], 
               FractionBox[
                RowBox[{"2", " ", "11."}], 
                RowBox[{"4.6", "*", 
                 SuperscriptBox["10", "6"]}]], "*", 
               SuperscriptBox["E", "15.3"]}]}], ")"}]}], ",", 
           RowBox[{"1.", "/", 
            RowBox[{"(", 
             RowBox[{"1.", "+", 
              RowBox[{
               FractionBox[
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1.", "+", 
                   RowBox[{"c", "*", 
                    SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1.", "+", 
                    RowBox[{"c", "*", 
                    SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], "+", 
                  RowBox[{
                   SuperscriptBox["E", "yLog"], 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1.", "+", 
                    RowBox[{"c", "*", 
                    SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "2."]}]}], 
                 ")"}]], 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["E", "yLog"]}], ")"}], 
               FractionBox[
                RowBox[{"2", " ", "11."}], 
                RowBox[{"4.6", "*", 
                 SuperscriptBox["10", "6"]}]], "*", 
               SuperscriptBox["E", "13.9"]}]}], ")"}]}]}], "}"}], "/.", 
         RowBox[{"nlmWT3", "[", "\"\<BestFitParameters\>\"", "]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "2"}]]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{"leg", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0.1", ",", "0.73"}], "}"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}]}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"grid", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Labeled", "[", 
       RowBox[{"plot1", ",", "aLabel", ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"Top", ",", "Left"}], "}"}], "}"}]}], "]"}], ",", 
      RowBox[{"Labeled", "[", 
       RowBox[{"plot2", ",", "bLabel", ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"Top", ",", "Left"}], "}"}], "}"}]}], "]"}]}], "}"}], "}"}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.6740874769158907`*^9, 3.674087479960065*^9}, {
   3.6740878394385357`*^9, 3.674087847853352*^9}, {3.674091777983743*^9, 
   3.6740919535600996`*^9}, {3.674092391255935*^9, 3.674092396203144*^9}, {
   3.674093826617855*^9, 3.6740938270198565`*^9}, 3.674094941891983*^9, {
   3.674094986915085*^9, 3.67409499699131*^9}, {3.6740950433596134`*^9, 
   3.674095178138113*^9}, {3.674233930381344*^9, 3.674233937174356*^9}, {
   3.6742342125327415`*^9, 3.6742342217474036`*^9}, {3.674319681144515*^9, 
   3.6743196853313227`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"$figurePath", "<>", "\"\<plot0.pdf\>\""}], ",", "grid"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6740952304888396`*^9, 3.6740952448701253`*^9}, {
   3.674234226480613*^9, 3.674234242651451*^9}, 3.674414972355837*^9, {
   3.6744168483054047`*^9, 3.6744168508582096`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
What if both Lac repressor dimers in a tetramer are cooperative?\
\>", "Subsection",
 CellChangeTimes->{{3.674414898889635*^9, 3.6744149207138834`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "@", "2"}]}], ",", 
     RowBox[{"font", "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<O1\>\"", ",", "\"\<O2\>\""}], "}"}]}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.6"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot3", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{"data", 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "*)"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "9.4"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "2.1"}]]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.35"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"LogTicks", "[", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "9"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", 
            RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
          RowBox[{"LinTicks", "[", 
           RowBox[{"0", ",", "1.4", ",", 
            RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], "}"}]}], 
       ",", "opts"}], "]"}], ",", 
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1.", 
            RowBox[{"1.", "+", 
             RowBox[{
              FractionBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1.", "+", 
                  RowBox[{"c", "*", 
                   SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1.", "+", 
                    RowBox[{"c", "*", 
                    SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], "+", 
                 RowBox[{
                  SuperscriptBox["E", "yLog"], 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1.", "+", 
                    RowBox[{"c", "*", 
                    SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "4."]}]}], 
                ")"}]], 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["E", "yLog"]}], ")"}], 
              FractionBox[
               RowBox[{"2", " ", "11."}], 
               RowBox[{"4.6", "*", 
                SuperscriptBox["10", "6"]}]], "*", 
              SuperscriptBox["E", "15.3"]}]}]], ",", 
           FractionBox["1.", 
            RowBox[{"1.", "+", 
             RowBox[{
              FractionBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1.", "+", 
                  RowBox[{"c", "*", 
                   SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1.", "+", 
                    RowBox[{"c", "*", 
                    SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], "+", 
                 RowBox[{
                  SuperscriptBox["E", "yLog"], 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1.", "+", 
                    RowBox[{"c", "*", 
                    SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "4."]}]}], 
                ")"}]], 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["E", "yLog"]}], ")"}], 
              FractionBox[
               RowBox[{"2", " ", "11."}], 
               RowBox[{"4.6", "*", 
                SuperscriptBox["10", "6"]}]], "*", 
              SuperscriptBox["E", "13.9"]}]}]]}], "}"}], "/.", 
         RowBox[{"nlmWT3", "[", "\"\<BestFitParameters\>\"", "]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "2"}]]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{"leg", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0.1", ",", "0.73"}], "}"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}]}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"grid", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Labeled", "[", 
       RowBox[{"plot1", ",", "aLabel", ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"Top", ",", "Left"}], "}"}], "}"}]}], "]"}], ",", 
      RowBox[{"Labeled", "[", 
       RowBox[{"plot3", ",", "bLabel", ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"Top", ",", "Left"}], "}"}], "}"}]}], "]"}]}], "}"}], "}"}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.6740874769158907`*^9, 3.674087479960065*^9}, {
   3.6740878394385357`*^9, 3.674087847853352*^9}, {3.674091777983743*^9, 
   3.6740919535600996`*^9}, {3.674092391255935*^9, 3.674092396203144*^9}, {
   3.674093826617855*^9, 3.6740938270198565`*^9}, 3.674094941891983*^9, {
   3.674094986915085*^9, 3.67409499699131*^9}, {3.6740950433596134`*^9, 
   3.674095178138113*^9}, {3.674233930381344*^9, 3.674233937174356*^9}, {
   3.6742342125327415`*^9, 3.6742342217474036`*^9}, {3.674319681144515*^9, 
   3.6743196853313227`*^9}, {3.674414929130365*^9, 3.674414953592764*^9}, 
   3.6744167813340473`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"$figurePath", "<>", "\"\<plot01.pdf\>\""}], ",", "grid"}], "]"}],
   ";"}]], "Input",
 CellChangeTimes->{{3.6740952304888396`*^9, 3.6740952448701253`*^9}, {
   3.674234226480613*^9, 3.674234242651451*^9}, 3.6744151222694116`*^9, {
   3.674416837386174*^9, 3.6744168383603764`*^9}, 3.674416894437768*^9}],

Cell[CellGroupData[{

Cell["How important is this effect?", "Subsubsection",
 CellChangeTimes->{{3.6744151158360434`*^9, 3.674415118477195*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
         "Dashed"}], "}"}], ",", 
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}], ",", 
         "Dashed"}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"font", "[", 
        RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<O1, exponent 2\>\"", ",", "\"\<O1, exponent 4\>\"", ",", 
        "\"\<O2, exponent 2\>\"", ",", "\"\<O2, exponent 4\>\""}], "}"}]}], 
     ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", 
        RowBox[{"-", "0.5"}]}], "}"}]}], ",", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot4", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{"data", 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "*)"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["10", 
            RowBox[{"-", "9.4"}]], ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "2.1"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1.35"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"LogTicks", "[", 
          RowBox[{
           SuperscriptBox["10", 
            RowBox[{"-", "9"}]], ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "2"}]], ",", 
           RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}], ",", 
         RowBox[{"LinTicks", "[", 
          RowBox[{"0", ",", "1.4", ",", 
           RowBox[{"TickLengthScale", "\[Rule]", "2"}]}], "]"}]}], "}"}]}], 
      ",", "opts"}], "]"}], ",", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["1.", 
           RowBox[{"1.", "+", 
            RowBox[{
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.", "+", 
                 RowBox[{"c", "*", 
                  SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1.", "+", 
                   RowBox[{"c", "*", 
                    SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], "+", 
                RowBox[{
                 SuperscriptBox["E", "yLog"], 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1.", "+", 
                    RowBox[{"c", "*", 
                    SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "2."]}]}], 
               ")"}]], 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["E", "yLog"]}], ")"}], 
             FractionBox[
              RowBox[{"2", " ", "11."}], 
              RowBox[{"4.6", "*", 
               SuperscriptBox["10", "6"]}]], "*", 
             SuperscriptBox["E", "15.3"]}]}]], ",", 
          FractionBox["1.", 
           RowBox[{"1.", "+", 
            RowBox[{
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.", "+", 
                 RowBox[{"c", "*", 
                  SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1.", "+", 
                   RowBox[{"c", "*", 
                    SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], "+", 
                RowBox[{
                 SuperscriptBox["E", "yLog"], 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1.", "+", 
                    RowBox[{"c", "*", 
                    SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "4."]}]}], 
               ")"}]], 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["E", "yLog"]}], ")"}], 
             FractionBox[
              RowBox[{"2", " ", "11."}], 
              RowBox[{"4.6", "*", 
               SuperscriptBox["10", "6"]}]], "*", 
             SuperscriptBox["E", "15.3"]}]}]], ",", 
          FractionBox["1.", 
           RowBox[{"1.", "+", 
            RowBox[{
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.", "+", 
                 RowBox[{"c", "*", 
                  SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1.", "+", 
                   RowBox[{"c", "*", 
                    SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], "+", 
                RowBox[{
                 SuperscriptBox["E", "yLog"], 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1.", "+", 
                    RowBox[{"c", "*", 
                    SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "2."]}]}], 
               ")"}]], 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["E", "yLog"]}], ")"}], 
             FractionBox[
              RowBox[{"2", " ", "11."}], 
              RowBox[{"4.6", "*", 
               SuperscriptBox["10", "6"]}]], "*", 
             SuperscriptBox["E", "13.9"]}]}]], ",", 
          FractionBox["1.", 
           RowBox[{"1.", "+", 
            RowBox[{
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.", "+", 
                 RowBox[{"c", "*", 
                  SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1.", "+", 
                   RowBox[{"c", "*", 
                    SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], "+", 
                RowBox[{
                 SuperscriptBox["E", "yLog"], 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1.", "+", 
                    RowBox[{"c", "*", 
                    SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "4."]}]}], 
               ")"}]], 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["E", "yLog"]}], ")"}], 
             FractionBox[
              RowBox[{"2", " ", "11."}], 
              RowBox[{"4.6", "*", 
               SuperscriptBox["10", "6"]}]], "*", 
             SuperscriptBox["E", "13.9"]}]}]]}], "}"}], "/.", 
        RowBox[{"nlmWT3", "[", "\"\<BestFitParameters\>\"", "]"}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "9"}]], ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "2"}]]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
           "Dashed"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}], ",", 
           "Dashed"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{"leg", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.05", ",", "0.73"}], "}"}], "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}]}], 
     "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6744182173288975`*^9, 3.6744183206053205`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"$figurePath", "<>", "\"\<plot02.pdf\>\""}], ",", "plot4"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6740952304888396`*^9, 3.6740952448701253`*^9}, {
   3.674234226480613*^9, 3.674234242651451*^9}, 3.6744151222694116`*^9, {
   3.674416837386174*^9, 3.6744168383603764`*^9}, 3.674416894437768*^9, {
   3.6744183395453615`*^9, 3.674418348007581*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["scratch", "Subsubsection",
 CellChangeTimes->{{3.674418325366131*^9, 3.674418325977532*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
         "Dashed"}], "}"}], ",", 
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}], ",", 
         "Dashed"}], "}"}]}], "}"}], ",", 
     RowBox[{"font", "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<O1, exponent 2\>\"", ",", "\"\<O1, exponent 4\>\"", ",", 
        "\"\<O2, exponent 2\>\"", ",", "\"\<O2, exponent 4\>\""}], "}"}]}], 
     ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.6"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1.", 
        RowBox[{"1.", "+", 
         RowBox[{
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.", "+", 
              RowBox[{"c", "*", 
               SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.", "+", 
                RowBox[{"c", "*", 
                 SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], "+", 
             RowBox[{
              SuperscriptBox["E", "yLog"], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.", "+", 
                 RowBox[{"c", "*", 
                  SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "2."]}]}], 
            ")"}]], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["E", "yLog"]}], ")"}], 
          FractionBox[
           RowBox[{"2", " ", "11."}], 
           RowBox[{"4.6", "*", 
            SuperscriptBox["10", "6"]}]], "*", 
          SuperscriptBox["E", "15.3"]}]}]], ",", 
       FractionBox["1.", 
        RowBox[{"1.", "+", 
         RowBox[{
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.", "+", 
              RowBox[{"c", "*", 
               SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.", "+", 
                RowBox[{"c", "*", 
                 SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], "+", 
             RowBox[{
              SuperscriptBox["E", "yLog"], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.", "+", 
                 RowBox[{"c", "*", 
                  SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "4."]}]}], 
            ")"}]], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["E", "yLog"]}], ")"}], 
          FractionBox[
           RowBox[{"2", " ", "11."}], 
           RowBox[{"4.6", "*", 
            SuperscriptBox["10", "6"]}]], "*", 
          SuperscriptBox["E", "15.3"]}]}]], ",", 
       FractionBox["1.", 
        RowBox[{"1.", "+", 
         RowBox[{
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.", "+", 
              RowBox[{"c", "*", 
               SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.", "+", 
                RowBox[{"c", "*", 
                 SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], "+", 
             RowBox[{
              SuperscriptBox["E", "yLog"], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.", "+", 
                 RowBox[{"c", "*", 
                  SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "2."]}]}], 
            ")"}]], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["E", "yLog"]}], ")"}], 
          FractionBox[
           RowBox[{"2", " ", "11."}], 
           RowBox[{"4.6", "*", 
            SuperscriptBox["10", "6"]}]], "*", 
          SuperscriptBox["E", "13.9"]}]}]], ",", 
       FractionBox["1.", 
        RowBox[{"1.", "+", 
         RowBox[{
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.", "+", 
              RowBox[{"c", "*", 
               SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.", "+", 
                RowBox[{"c", "*", 
                 SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], "+", 
             RowBox[{
              SuperscriptBox["E", "yLog"], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.", "+", 
                 RowBox[{"c", "*", 
                  SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "4."]}]}], 
            ")"}]], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["E", "yLog"]}], ")"}], 
          FractionBox[
           RowBox[{"2", " ", "11."}], 
           RowBox[{"4.6", "*", 
            SuperscriptBox["10", "6"]}]], "*", 
          SuperscriptBox["E", "13.9"]}]}]]}], "}"}], "/.", 
     RowBox[{"nlmWT3", "[", "\"\<BestFitParameters\>\"", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "9"}]], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
        "Dashed"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}], ",", 
        "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"leg", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.05", ",", "0.73"}], "}"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6744165575780816`*^9, 3.6744165758945265`*^9}, {
  3.6744166125032525`*^9, 3.674416747264962*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"How", " ", "big", " ", "is", " ", "this", " ", 
    RowBox[{"effect", "?", " ", "Very"}], " ", "small"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"LogLinearPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1.", "+", 
            RowBox[{"c", "*", 
             SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.", "+", 
              RowBox[{"c", "*", 
               SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], "+", 
           RowBox[{
            SuperscriptBox["E", "yLog"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1.", "+", 
               RowBox[{"c", "*", 
                SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "2."]}]}], ")"}]],
         ",", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1.", "+", 
            RowBox[{"c", "*", 
             SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.", "+", 
              RowBox[{"c", "*", 
               SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "4."], "+", 
           RowBox[{
            SuperscriptBox["E", "yLog"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1.", "+", 
               RowBox[{"c", "*", 
                SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "4."]}]}], 
          ")"}]]}], "}"}], "/.", 
      RowBox[{"nlmWT3", "[", "\"\<BestFitParameters\>\"", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", 
      SuperscriptBox["10", 
       RowBox[{"-", "9"}]], ",", 
      SuperscriptBox["10", 
       RowBox[{"-", "2"}]]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.674415099664119*^9, 3.674415107496567*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Initialization", "Section",
 CellChangeTimes->{{3.5952763377858877`*^9, 3.595276340199198*^9}, {
  3.628343746141529*^9, 3.628343746359929*^9}, {3.6356433944643664`*^9, 
  3.6356433946503773`*^9}, {3.645233427768176*^9, 3.645233429080251*^9}, {
  3.657090234659174*^9, 3.657090235180204*^9}}],

Cell[CellGroupData[{

Cell["Importing Data", "Subsection",
 CellChangeTimes->{{3.6740874095815706`*^9, 3.6740874106589723`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Keep", " ", "collecting", " ", 
    RowBox[{"(", 
     RowBox[{"x", ",", "y"}], ")"}], " ", "data", " ", "points", " ", "in", 
    " ", "Excel", " ", "downwards", " ", "until", " ", "you", " ", "run", " ",
     "into", " ", "an", " ", "empty", " ", "row"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"collect", "[", 
    RowBox[{"data_", ",", 
     RowBox[{"{", 
      RowBox[{"row_", ",", "col_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", "posRow", ",", "next", ",", "maxRow"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"posRow", "=", 
       RowBox[{"row", "+", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"next", "=", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"posRow", ",", "col"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "In", " ", "case", " ", "the", " ", "data", " ", "goes", " ", "all", 
        " ", "the", " ", "way", " ", "to", " ", "the", " ", "bottom", " ", 
        "of", " ", "the", " ", "import"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"maxRow", "=", 
       RowBox[{"First", "@", 
        RowBox[{"Dimensions", "@", "data"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Keep", " ", "acquiring", " ", "data", " ", "until", " ", "you", " ", 
        "run", " ", "out"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"next", "=!=", "\"\<\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"res", ",", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"posRow", ",", 
              RowBox[{"col", ";;", 
               RowBox[{"col", "+", "1"}]}]}], "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"posRow", "++"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Check", " ", "to", " ", "make", " ", "sure", " ", "you", " ", 
           RowBox[{"don", "'"}], "t", " ", "hit", " ", "the", " ", "bottom", 
           " ", "of", " ", "import"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"posRow", "\[LessEqual]", "maxRow"}], ",", 
           RowBox[{"next", "=", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"posRow", ",", "col"}], "]"}], "]"}]}], ",", 
           RowBox[{"next", "=", "\"\<\>\""}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "res"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.652236833975213*^9, 3.6522370315905156`*^9}, {
  3.6522370681046042`*^9, 3.652237181431086*^9}, {3.6522373638465195`*^9, 
  3.6522373741101065`*^9}, {3.6522374292302594`*^9, 3.652237497673174*^9}, {
  3.652237534088257*^9, 3.6522375597077227`*^9}, {3.6522379464108405`*^9, 
  3.6522381073120437`*^9}, {3.6522383393463154`*^9, 3.652238349326886*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"acquire", "[", 
   RowBox[{"data_", ",", "page_", ",", 
    RowBox[{"symbol_:", "\"\<[S]\>\""}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pos", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", "symbol"}], "]"}], ")"}], 
        "&"}], "/@", 
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "data"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"collect", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", "page", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"pos", "[", 
      RowBox[{"[", "page", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6522381499644833`*^9, 3.652238199112294*^9}, {
  3.652238313629844*^9, 3.6522383321689043`*^9}, {3.663176258768691*^9, 
  3.6631762672819138`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"acquire", "[", 
   RowBox[{"data_", ",", "page_", ",", 
    RowBox[{"symbol_:", "\"\<[S]\>\""}], ",", 
    RowBox[{"\"\<Headers\>\"", "\[Rule]", "True"}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pos", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", "symbol"}], "]"}], ")"}], 
        "&"}], "/@", 
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "data"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "page", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
     RowBox[{"pos", "[", 
      RowBox[{"[", "page", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6522381499644833`*^9, 3.652238199112294*^9}, {
  3.652238277948803*^9, 3.6522382810969834`*^9}, {3.6522384691497393`*^9, 
  3.652238487624796*^9}, {3.6525661520954895`*^9, 3.6525661591438923`*^9}, {
  3.663176295576001*^9, 3.6631762981912107`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Making Figures - Rob\[CloseCurlyQuote]s Style", "Subsection",
 CellChangeTimes->{{3.654190111904699*^9, 3.6541901368031483`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"'", 
    RowBox[{"relabel", "'"}], " ", "makes", " ", "all", " ", "log", " ", 
    "ticks", " ", "take", " ", "the", " ", "form", " ", 
    SuperscriptBox["10", "x"]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"format2", "=", 
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{"#", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"n_", "?", "NumericQ"}], "|", 
          RowBox[{"NumberForm", "[", 
           RowBox[{"n_", ",", "_"}], "]"}]}], "\[RuleDelayed]", 
         RowBox[{"Superscript", "[", 
          RowBox[{"10", ",", 
           RowBox[{"Round", "@", 
            RowBox[{"Log10", "@", "n"}]}]}], "]"}]}]}], "]"}], "&"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"relabel", "=", 
     RowBox[{
      RowBox[{"#", "/.", 
       RowBox[{"CST_Charting`ScaledTicks", "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MapAt", "[", 
           RowBox[{"format2", ",", 
            RowBox[{"CST", "[", "##", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"All", ",", "2"}], "}"}]}], "]"}], "&"}], ")"}]}]}], 
      "&"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.635908699052521*^9, 3.635908713808365*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Directory", " ", "to", " ", "export", " ", "plots"}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "$figurePath", "=", 
    "\"\<C:\\\\Users\\\\Tal\\\\Desktop\\\\Counting Plasmids\\\\\>\""}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.67441681287072*^9, 3.6744168291093574`*^9}, {
  3.674416920806526*^9, 3.6744169209001265`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Use", " ", "Times", " ", "New", " ", "Roman", " ", "font"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"font", "[", 
     RowBox[{"text_", ",", 
      RowBox[{"size_:", "12"}], ",", "opts___"}], "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{"text", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "size", ",", 
      "opts"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6336501326265645`*^9, 3.633650142816147*^9}, {
   3.6336501962752047`*^9, 3.633650206366782*^9}, {3.6359107769783716`*^9, 
   3.635910793370309*^9}, {3.635911238441964*^9, 3.63591124344025*^9}, {
   3.6359164530844183`*^9, 3.6359164532174263`*^9}, {3.63600058594444*^9, 
   3.63600058617844*^9}, {3.6430010469401784`*^9, 3.643001047828229*^9}, {
   3.6674303081546917`*^9, 3.6674303637398715`*^9}, 3.6674304783434267`*^9, {
   3.667431206280562*^9, 3.66743121202089*^9}, {3.667612868180255*^9, 
   3.6676128685234556`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Whether", " ", "to", " ", "show", " ", "multi"}], "-", 
    RowBox[{
    "part", " ", "figures", " ", "in", " ", "a", " ", "row", " ", "or", " ", 
     "column"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"rowQ", "=", "True"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6710846586986246`*^9, 3.6710846715248475`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Image", " ", "Size", " ", "for", " ", "all", " ", "plots"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"size", "=", "295"}], ";"}]}]], "Input",
 CellChangeTimes->{
  3.635910713331731*^9, {3.6429988857315645`*^9, 3.642998886041582*^9}, 
   3.659321167908574*^9, 3.6656098942918663`*^9, {3.665610174333884*^9, 
   3.665610174387887*^9}, {3.6685769202839813`*^9, 3.6685769208840156`*^9}, {
   3.6685771150811234`*^9, 3.668577115339138*^9}, {3.6685771786837606`*^9, 
   3.6685771789807777`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "markers", " ", "for", " ", "the", " ", "theory", " ", 
    "plots", " ", 
    RowBox[{"(", 
     RowBox[{"Figures", " ", "4", " ", "and", " ", "6"}], ")"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"marker", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.2", "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", 
             RowBox[{"-", "0.5"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", 
             RowBox[{"-", "0.5"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", 
             RowBox[{"-", "0.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"markerSize", "=", "0.04"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6677847690766144`*^9, 3.667784771385747*^9}, {
  3.6677848519783564`*^9, 3.6677849037973204`*^9}, {3.6677849555812817`*^9, 
  3.667784965612856*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"opts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "*)"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"size", ",", 
        RowBox[{"size", "/", "GoldenRatio"}]}], "}"}]}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Make", " ", "plots", " ", "have", " ", "similar", " ", "look", " ", 
       "to", " ", 
       RowBox[{"Rob", "'"}], 
       RowBox[{"s", " ", "'"}], "Physical", " ", "Biology", " ", "of", " ", 
       "the", " ", 
       RowBox[{"Cell", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Prolog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           RowBox[{
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[
                Rational[223, 255], 
                Rational[72, 85], 
                Rational[40, 51]], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.5830065359477125, 0.5647058823529412, 0.5228758169934641],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None], "\[InvisibleSpace]"}],
           "RGBColor[{223/255, 72/85, 40/51}]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                Rational[223, 255], 
                Rational[72, 85], 
                Rational[40, 51]]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[{
           Rational[223, 255], 
           Rational[72, 85], 
           Rational[40, 51]}],
         Editable->False,
         Selectable->False], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"Scaled", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
          RowBox[{"Scaled", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], "]"}]}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           RowBox[{
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->GrayLevel[0.6666666666666666],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None], "\[InvisibleSpace]"}],
           "GrayLevel[1]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], ",", 
        RowBox[{"Thickness", "[", "Small", "]"}], ",", 
        RowBox[{"FontColor", "\[Rule]", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            RowBox[{
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              Frame->True,
              FrameStyle->GrayLevel[0.],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None], "\[InvisibleSpace]"}],
            "GrayLevel[0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["GrayLevelColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          GrayLevel[0],
          Editable->False,
          Selectable->False]}]}], "]"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           RowBox[{
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->GrayLevel[0.6666666666666666],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None], "\[InvisibleSpace]"}],
           "GrayLevel[1]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], ",", "Thick", ",", 
        RowBox[{"FontColor", "\[Rule]", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            RowBox[{
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              Frame->True,
              FrameStyle->GrayLevel[0.],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None], "\[InvisibleSpace]"}],
            "GrayLevel[0]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["GrayLevelColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          GrayLevel[0],
          Editable->False,
          Selectable->False]}]}], "]"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.633650456207671*^9, 3.63365046160598*^9}, {
   3.6336505128549113`*^9, 3.6336505545362954`*^9}, {3.6336505845610127`*^9, 
   3.633650595068614*^9}, {3.633650627946494*^9, 3.633650631407692*^9}, {
   3.6336506731000767`*^9, 3.633650696790432*^9}, {3.634793000298256*^9, 
   3.634793006729624*^9}, {3.635910769916968*^9, 3.6359107997086716`*^9}, {
   3.635911246294413*^9, 3.6359112465614285`*^9}, {3.6359120304704638`*^9, 
   3.6359120379298906`*^9}, {3.635912258227491*^9, 3.635912258231491*^9}, 
   3.6359145402740164`*^9, {3.6399430581098833`*^9, 3.6399430921638308`*^9}, {
   3.639943123423619*^9, 3.639943144609831*^9}, {3.6399441505503674`*^9, 
   3.63994415357654*^9}, {3.6434222247078495`*^9, 3.643422230365173*^9}, {
   3.6434222716935368`*^9, 3.643422273862661*^9}, {3.6435896608004665`*^9, 
   3.64358966103648*^9}, {3.643599078814146*^9, 3.6435991047536297`*^9}, {
   3.644802267076435*^9, 3.6448022926808996`*^9}, 3.644807406180375*^9, {
   3.6514522633020015`*^9, 3.651452270895426*^9}, 3.6514525554289737`*^9, {
   3.653186517888594*^9, 3.6531865243279624`*^9}, {3.6531869052247486`*^9, 
   3.653186913576226*^9}, {3.6533390157998714`*^9, 3.653339059598377*^9}, {
   3.653340416829006*^9, 3.653340425847522*^9}, {3.6533446996608157`*^9, 
   3.653344744479371*^9}, {3.6533447748070745`*^9, 3.6533448171730075`*^9}, {
   3.6533448535457263`*^9, 3.6533448581977415`*^9}, {3.653369177562014*^9, 
   3.653369183068329*^9}, {3.6541902141845007`*^9, 3.6541902406545486`*^9}, {
   3.6541902843810277`*^9, 3.6541902902148647`*^9}, {3.6541903604913683`*^9, 
   3.654190400300686*^9}, 3.654190920547269*^9, 3.6541919916682634`*^9, {
   3.6541922759363937`*^9, 3.6541922759363937`*^9}, {3.6541943051641254`*^9, 
   3.654194334187492*^9}, {3.6557780303455467`*^9, 3.655778036485358*^9}, {
   3.6557784148808603`*^9, 3.65577842042087*^9}, {3.656384016525813*^9, 
   3.656384024298627*^9}, {3.6565288123163214`*^9, 3.6565288165665646`*^9}, {
   3.6565288481243696`*^9, 3.656528848431387*^9}, {3.656529789299202*^9, 
   3.656529793080418*^9}, {3.6593197794188147`*^9, 3.6593197873118267`*^9}, {
   3.661731940905587*^9, 3.661731970688678*^9}, {3.6617320058657784`*^9, 
   3.6617320157736106`*^9}, {3.6617334760754957`*^9, 3.661733491132984*^9}, {
   3.66743056145018*^9, 3.6674305721077895`*^9}, {3.6674311420378876`*^9, 
   3.667431153352535*^9}, {3.6674311976190667`*^9, 3.6674311982311015`*^9}, {
   3.6674312329450874`*^9, 3.667431239439459*^9}, {3.6674314027497997`*^9, 
   3.6674314484214115`*^9}, {3.6674315110759954`*^9, 
   3.6674315339113016`*^9}, {3.667431581907047*^9, 3.667431679486628*^9}, {
   3.667431754311908*^9, 3.6674317544859176`*^9}, {3.6674318740177546`*^9, 
   3.667431916099161*^9}, {3.6674326019043875`*^9, 3.6674326042215195`*^9}, {
   3.667433998236253*^9, 3.6674340103979483`*^9}, {3.6676129604146347`*^9, 
   3.6676129999009075`*^9}, {3.667619818894603*^9, 3.667619857134671*^9}, 
   3.667619978121394*^9, {3.667784983970906*^9, 3.6677849844909353`*^9}, {
   3.667936656251902*^9, 3.6679366596990995`*^9}, {3.668223629619296*^9, 
   3.6682236490654087`*^9}, {3.6682238989056983`*^9, 3.6682239050570507`*^9}, 
   3.6742338994304886`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"From", " ", "Mark", " ", 
    RowBox[{"Caprio", "'"}], "s", " ", 
    ButtonBox[
     RowBox[{"CustomTicks", " ", "package"}],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL["http://scidraw.nd.edu/customticks/CustomTicksGuide.pdf"], None},
     ButtonNote->"http://scidraw.nd.edu/customticks/CustomTicksGuide.pdf"], 
    " ", "which", " ", "I", " ", "put", " ", "in", " ", 
    "\"\<C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.1\\\\AddOns\\\\Packages\\\\CustomTicks\>\""}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"<<", "CustomTicks`"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"LogTicks", ",", 
      RowBox[{"LogPlot", "\[Rule]", "True"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6448056018371725`*^9, 3.6448056337910004`*^9}, {
  3.6448068601611447`*^9, 3.6448069004924517`*^9}, {3.651281557651985*^9, 
  3.6512815611171837`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Labels", " ", "for", " ", "multiple", " ", "plots"}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"aLabel", "=", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<A\>\"", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "14"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bLabel", "=", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<B\>\"", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "14"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cLabel", "=", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<C\>\"", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "14"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dLabel", "=", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<D\>\"", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "14"}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6359144183280416`*^9, 3.6359144417953835`*^9}, {
  3.6429988918099117`*^9, 3.642998903745595*^9}, {3.6570776012172575`*^9, 
  3.657077674986883*^9}, {3.6570777110255933`*^9, 3.6570777285872498`*^9}, {
  3.6674306201125355`*^9, 3.6674306220796475`*^9}, {3.667612920909356*^9, 
  3.667612925125765*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Mitch Data Fits", "Subsection",
 CellChangeTimes->{{3.674234115963433*^9, 3.6742341183746367`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mitchWTData", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.`"}], ",", "0.040317426411673386`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.9999999999999996`"}], ",", "0.06807911751079934`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.6989700043360183`"}], ",", "0.10024554764297543`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.397940008672037`"}], ",", "0.19437676869685602`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.0969100130080562`"}], ",", "0.3397299987660877`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.7958800173440752`"}], ",", "0.45106414756747015`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.4948500216800937`"}], ",", "0.6272106133460507`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.2907300390241692`"}], ",", "0.6635230132265953`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.1938200260161127`"}], ",", "0.6773668642425565`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.9897000433601879`"}], ",", "0.690259121100411`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.8927900303521316`"}], ",", "0.6124037259837742`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.6886700476962068`"}], ",", "0.6652928578429965`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5917600346881503`"}], ",", "0.7154822501982547`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.38764005203222557`"}], ",", "0.7026386153583845`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.08661005636824443`"}], ",", "0.7210456904575598`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.21441993929573672`", ",", "0.7159250659064512`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.5154499349597179`", ",", "0.7395890934394233`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8164799306236991`", ",", "0.7594739006872235`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.1175099262876802`", ",", "0.7451191434870386`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.4185399219516615`", ",", "0.7518371457897784`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.7195699176156425`", ",", "0.8480118870841352`"}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nlmWT3", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"mitchWTData", ",", 
     RowBox[{"1.", "/", 
      RowBox[{"(", 
       RowBox[{"1.", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.", "+", 
              RowBox[{
               SuperscriptBox["10.", 
                RowBox[{"x", "-", "3."}]], "*", 
               SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.", "+", 
                RowBox[{
                 SuperscriptBox["10.", 
                  RowBox[{"x", "-", "3."}]], "*", 
                 SuperscriptBox["E", "KaInvLog"]}]}], ")"}], "2."], "+", 
             RowBox[{
              SuperscriptBox["E", "yLog"], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.", "+", 
                 RowBox[{
                  SuperscriptBox["10.", 
                   RowBox[{"x", "-", "3."}]], "*", 
                  SuperscriptBox["E", "KiInvLog"]}]}], ")"}], "2."]}]}], 
            ")"}]}], ")"}], 
         SuperscriptBox["E", "rLog"]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"KaInvLog", ",", "11."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KiInvLog", ",", "14."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"yLog", ",", 
         RowBox[{"-", "1.5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"rLog", ",", "5."}], "}"}]}], "}"}], ",", "x"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6742340009682684`*^9, 3.6742341007302513`*^9}}]
}, Closed]]
}, Closed]]
}, Closed]]
},
WindowSize->{1350, 710},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (December 10, 2015)",
StyleDefinitions->FrontEnd`FileName[{$RootDirectory, "C:", "Users", "Tal", 
   "Dropbox", "Mathematica"}, "TalStyle.nb", CharacterEncoding -> 
  "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 318, 8, 54, "Text"],
Cell[879, 30, 209378, 4394, 379, "Output"],
Cell[210260, 4426, 438, 11, 89, "Text"],
Cell[210701, 4439, 87352, 1436, 450, "Input"],
Cell[CellGroupData[{
Cell[298078, 5879, 107, 1, 66, "Subsubsection"],
Cell[298188, 5882, 544, 11, 51, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298769, 5898, 347, 9, 124, "Section"],
Cell[299119, 5909, 195, 2, 54, "Text"],
Cell[299317, 5913, 691, 19, 89, "Text"],
Cell[300011, 5934, 1849, 62, 100, "TextNumbered"],
Cell[301863, 5998, 397, 11, 42, "TextNumbered"],
Cell[302263, 6011, 489, 13, 42, "TextNumbered"],
Cell[CellGroupData[{
Cell[302777, 6028, 97, 1, 66, "Subsubsection"],
Cell[302877, 6031, 2809, 77, 347, "Input"],
Cell[305689, 6110, 1262, 33, 201, "Input"],
Cell[306954, 6145, 2093, 54, 236, "Input"],
Cell[309050, 6201, 3079, 84, 353, "Input"],
Cell[312132, 6287, 933, 23, 198, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[313102, 6315, 262, 8, 69, "Subsection"],
Cell[CellGroupData[{
Cell[313389, 6327, 109, 1, 66, "Subsubsection"],
Cell[313501, 6330, 579, 11, 157, "Input"],
Cell[314083, 6343, 351, 9, 89, "Input"],
Cell[314437, 6354, 3753, 88, 353, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[318227, 6447, 199, 2, 52, "Subsubsection"],
Cell[318429, 6451, 2806, 70, 474, "Input"],
Cell[321238, 6523, 2658, 76, 399, "Input"],
Cell[323899, 6601, 3878, 111, 523, "Input"],
Cell[327780, 6714, 3016, 73, 474, "Input"],
Cell[330799, 6789, 986, 24, 192, "Text"],
Cell[331788, 6815, 777, 20, 123, "Input"],
Cell[332568, 6837, 245, 5, 89, "Input"],
Cell[332816, 6844, 829, 21, 123, "Input"],
Cell[333648, 6867, 828, 21, 123, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[334513, 6893, 291, 3, 52, "Subsubsection"],
Cell[334807, 6898, 954, 20, 225, "Input"],
Cell[335764, 6920, 2448, 72, 347, "Input"],
Cell[338215, 6994, 2267, 55, 309, "Input"],
Cell[340485, 7051, 986, 24, 192, "Text"],
Cell[341474, 7077, 804, 21, 123, "Input"],
Cell[342281, 7100, 851, 21, 157, "Input"],
Cell[343135, 7123, 852, 21, 123, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[344024, 7149, 290, 3, 52, "Subsubsection"],
Cell[344317, 7154, 1076, 23, 225, "Input"],
Cell[345396, 7179, 2448, 72, 347, "Input"],
Cell[347847, 7253, 2267, 55, 309, "Input"],
Cell[350117, 7310, 317, 7, 54, "Input"],
Cell[350437, 7319, 1086, 31, 89, "Input"],
Cell[351526, 7352, 1195, 30, 169, "Input"],
Cell[352724, 7384, 1292, 30, 169, "Input"],
Cell[354019, 7416, 1241, 30, 169, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[355297, 7451, 342, 4, 52, "Subsubsection"],
Cell[355642, 7457, 954, 20, 225, "Input"],
Cell[356599, 7479, 2448, 72, 347, "Input"],
Cell[359050, 7553, 1858, 43, 206, "Input"],
Cell[360911, 7598, 4562, 121, 597, "Input"],
Cell[365476, 7721, 2629, 81, 463, "Input"],
Cell[368108, 7804, 939, 23, 157, "Input"],
Cell[369050, 7829, 486, 14, 111, "Text"],
Cell[369539, 7845, 187, 5, 83, "Input"],
Cell[369729, 7852, 1253, 31, 225, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[371019, 7888, 102, 1, 52, "Subsubsection"],
Cell[371124, 7891, 415, 12, 54, "Input"],
Cell[371542, 7905, 804, 21, 123, "Input"],
Cell[372349, 7928, 851, 21, 157, "Input"],
Cell[373203, 7951, 852, 21, 123, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[374092, 7977, 388, 5, 52, "Subsubsection"],
Cell[374483, 7984, 1076, 23, 225, "Input"],
Cell[375562, 8009, 2448, 72, 260, "Input"],
Cell[378013, 8083, 1779, 42, 167, "Input"],
Cell[379795, 8127, 4316, 116, 421, "Input"],
Cell[384114, 8245, 79, 1, 54, "Input"],
Cell[384196, 8248, 2702, 81, 191, "Input"],
Cell[386901, 8331, 2966, 86, 225, "Input"],
Cell[389870, 8419, 4135, 104, 293, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[394042, 8528, 316, 9, 52, "Subsubsection"],
Cell[394361, 8539, 205, 5, 54, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[394615, 8550, 97, 1, 87, "Subsection"],
Cell[CellGroupData[{
Cell[394737, 8555, 97, 1, 66, "Subsubsection"],
Cell[394837, 8558, 182, 4, 54, "Input"],
Cell[395022, 8564, 459, 12, 54, "Input"],
Cell[395484, 8578, 4291, 138, 263, "Input"],
Cell[399778, 8718, 5045, 170, 316, "Input"],
Cell[404826, 8890, 4058, 128, 247, "Input"],
Cell[408887, 9020, 138, 3, 54, "Input"],
Cell[409028, 9025, 5306, 158, 315, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[414371, 9188, 100, 1, 52, "Subsubsection"],
Cell[414474, 9191, 747, 20, 54, "Input"],
Cell[415224, 9213, 1230, 38, 89, "Input"],
Cell[416457, 9253, 678, 21, 54, "Input"],
Cell[417138, 9276, 452, 7, 123, "Text"],
Cell[417593, 9285, 1150, 24, 89, "Input"],
Cell[418746, 9311, 317, 7, 54, "Input"],
Cell[419066, 9320, 1300, 36, 89, "Input"],
Cell[420369, 9358, 2629, 81, 259, "Input"],
Cell[423001, 9441, 1214, 29, 169, "Input"],
Cell[424218, 9472, 562, 17, 131, "Text"],
Cell[424783, 9491, 1557, 38, 247, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[426377, 9534, 100, 1, 52, "Subsubsection"],
Cell[426480, 9537, 197, 3, 191, "Input"],
Cell[426680, 9542, 1195, 30, 169, "Input"],
Cell[427878, 9574, 1292, 30, 169, "Input"],
Cell[429173, 9606, 1241, 30, 169, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[430451, 9641, 97, 1, 52, "Subsubsection"],
Cell[430551, 9644, 1076, 23, 225, "Input"],
Cell[431630, 9669, 2448, 72, 347, "Input"],
Cell[434081, 9743, 2267, 55, 309, "Input"],
Cell[436351, 9800, 1195, 30, 169, "Input"],
Cell[437549, 9832, 1292, 30, 169, "Input"],
Cell[438844, 9864, 1241, 30, 169, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[440122, 9899, 102, 1, 52, "Subsubsection"],
Cell[440227, 9902, 212, 4, 89, "Input"],
Cell[440442, 9908, 374, 10, 89, "Input"],
Cell[440819, 9920, 199, 5, 54, "Input"],
Cell[441021, 9927, 204, 7, 54, "Input"],
Cell[441228, 9936, 981, 29, 89, "Input"],
Cell[442212, 9967, 638, 19, 54, "Input"],
Cell[442853, 9988, 686, 21, 54, "Input"],
Cell[443542, 10011, 1403, 47, 123, "Input"],
Cell[444948, 10060, 127, 1, 89, "Input"],
Cell[445078, 10063, 273, 7, 89, "Input"],
Cell[445354, 10072, 101, 3, 54, "Input"],
Cell[445458, 10077, 472, 15, 54, "Input"],
Cell[445933, 10094, 587, 17, 54, "Input"],
Cell[446523, 10113, 200, 4, 54, "Input"],
Cell[446726, 10119, 126, 2, 54, "Input"],
Cell[446855, 10123, 804, 21, 123, "Input"],
Cell[447662, 10146, 851, 21, 157, "Input"],
Cell[448516, 10169, 852, 21, 123, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[449405, 10195, 97, 1, 52, "Subsubsection"],
Cell[449505, 10198, 176, 3, 157, "Input"],
Cell[449684, 10203, 3016, 73, 547, "Input"],
Cell[452703, 10278, 777, 20, 123, "Input"],
Cell[453483, 10300, 245, 5, 89, "Input"],
Cell[453731, 10307, 829, 21, 157, "Input"],
Cell[454563, 10330, 828, 21, 123, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[455428, 10356, 98, 1, 52, "Subsubsection"],
Cell[455529, 10359, 1322, 39, 252, "Input"],
Cell[456854, 10400, 391, 11, 89, "Input"],
Cell[457248, 10413, 237, 5, 89, "Input"],
Cell[457488, 10420, 768, 24, 89, "Input"],
Cell[458259, 10446, 211, 5, 54, "Input"],
Cell[458473, 10453, 125, 3, 54, "Input"],
Cell[458601, 10458, 213, 7, 54, "Input"],
Cell[458817, 10467, 934, 20, 123, "Input"],
Cell[459754, 10489, 468, 14, 60, "Input"],
Cell[460225, 10505, 425, 13, 54, "Input"],
Cell[460653, 10520, 790, 24, 92, "Input"],
Cell[461446, 10546, 86, 1, 89, "Input"],
Cell[461535, 10549, 145, 4, 54, "Input"],
Cell[461683, 10555, 766, 24, 92, "Input"],
Cell[462452, 10581, 150, 2, 123, "Input"],
Cell[462605, 10585, 1462, 46, 157, "Input",
 CellID->332479036],
Cell[464070, 10633, 381, 10, 89, "Input"],
Cell[464454, 10645, 766, 24, 92, "Input"],
Cell[465223, 10671, 106, 3, 54, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[465366, 10679, 102, 1, 52, "Subsubsection"],
Cell[465471, 10682, 180, 3, 89, "Input"],
Cell[465654, 10687, 3680, 109, 385, "Input"],
Cell[469337, 10798, 174, 4, 54, "Input"],
Cell[469514, 10804, 497, 14, 89, "Input"],
Cell[470014, 10820, 222, 3, 225, "Input"],
Cell[470239, 10825, 2458, 66, 324, "Input"],
Cell[472700, 10893, 145, 3, 54, "Input"],
Cell[472848, 10898, 4695, 118, 700, "Input"],
Cell[477546, 11018, 81, 2, 54, "Input"],
Cell[477630, 11022, 129, 3, 54, "Input"],
Cell[477762, 11027, 211, 5, 54, "Input"],
Cell[477976, 11034, 988, 31, 92, "Input"],
Cell[478967, 11067, 515, 16, 60, "Input"],
Cell[479485, 11085, 398, 13, 60, "Input"],
Cell[479886, 11100, 468, 14, 60, "Input"],
Cell[480357, 11116, 5554, 162, 751, "Input"],
Cell[485914, 11280, 1899, 56, 134, "Input"],
Cell[487816, 11338, 737, 17, 89, "Input"],
Cell[488556, 11357, 2458, 66, 272, "Input"],
Cell[491017, 11425, 2458, 66, 272, "Input"],
Cell[493478, 11493, 851, 20, 123, "Input"],
Cell[494332, 11515, 961, 24, 123, "Input"],
Cell[495296, 11541, 877, 25, 95, "Input"],
Cell[496176, 11568, 798, 20, 123, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[497011, 11593, 100, 1, 52, "Subsubsection"],
Cell[497114, 11596, 2133, 57, 810, "Input"],
Cell[499250, 11655, 3845, 100, 1722, "Input"],
Cell[503098, 11757, 779, 20, 320, "Input"],
Cell[503880, 11779, 246, 5, 171, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[504187, 11791, 306, 8, 96, "Section"],
Cell[CellGroupData[{
Cell[504518, 11803, 103, 1, 66, "Subsubsection"],
Cell[504624, 11806, 358, 6, 123, "Text"],
Cell[504985, 11814, 384, 10, 42, "TextNumbered"],
Cell[505372, 11826, 136, 1, 54, "Text"],
Cell[505511, 11829, 989, 30, 192, "TextNumbered"],
Cell[506503, 11861, 163, 3, 54, "Text"],
Cell[506669, 11866, 359, 10, 54, "Text"],
Cell[507031, 11878, 1455, 45, 89, "TextNumbered"],
Cell[508489, 11925, 223, 4, 89, "Text"],
Cell[508715, 11931, 700, 21, 64, "TextNumbered"],
Cell[509418, 11954, 310, 8, 54, "Text"],
Cell[509731, 11964, 258, 8, 31, "TextNumbered"],
Cell[509992, 11974, 193, 4, 54, "Text"],
Cell[510188, 11980, 400, 13, 42, "TextNumbered"],
Cell[510591, 11995, 572, 13, 123, "Text"],
Cell[511166, 12010, 1005, 31, 89, "TextNumbered"],
Cell[512174, 12043, 202, 4, 54, "Text"],
Cell[512379, 12049, 1285, 37, 89, "TextNumbered"],
Cell[513667, 12088, 639, 20, 66, "Text"],
Cell[514309, 12110, 2343, 63, 319, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[516689, 12178, 136, 2, 52, "Subsubsection"],
Cell[516828, 12182, 691, 19, 89, "Text"],
Cell[517522, 12203, 1849, 62, 100, "TextNumbered"],
Cell[519374, 12267, 317, 8, 31, "TextNumbered"],
Cell[519694, 12277, 1005, 31, 89, "TextNumbered"],
Cell[520702, 12310, 268, 8, 54, "Text"],
Cell[520973, 12320, 1336, 38, 89, "TextNumbered"]
}, Closed]],
Cell[CellGroupData[{
Cell[522346, 12363, 94, 1, 69, "Subsection"],
Cell[CellGroupData[{
Cell[522465, 12368, 166, 3, 66, "Subsubsection"],
Cell[522634, 12373, 2809, 77, 347, "Input"],
Cell[525446, 12452, 1262, 33, 201, "Input"],
Cell[526711, 12487, 2093, 54, 236, "Input"],
Cell[528807, 12543, 3079, 84, 353, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[531923, 12632, 391, 5, 52, "Subsubsection"],
Cell[532317, 12639, 954, 20, 225, "Input"],
Cell[533274, 12661, 4755, 125, 710, "Input"],
Cell[538032, 12788, 1858, 43, 206, "Input"],
Cell[539893, 12833, 4562, 121, 597, "Input"],
Cell[544458, 12956, 2629, 81, 463, "Input"],
Cell[547090, 13039, 939, 23, 157, "Input"],
Cell[548032, 13064, 153, 2, 54, "Text"],
Cell[548188, 13068, 1015, 25, 157, "Input"],
Cell[549206, 13095, 1328, 33, 225, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550571, 13133, 480, 6, 66, "Subsubsection"],
Cell[551054, 13141, 1173, 24, 225, "Input"],
Cell[552230, 13167, 6337, 161, 817, "Input"],
Cell[558570, 13330, 6337, 161, 817, "Input"],
Cell[564910, 13493, 205, 5, 54, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[565176, 13505, 106, 1, 124, "Section"],
Cell[CellGroupData[{
Cell[565307, 13510, 109, 1, 66, "Subsubsection"],
Cell[565419, 13513, 404, 9, 225, "Input"],
Cell[565826, 13524, 384, 9, 89, "Input"],
Cell[566213, 13535, 1614, 41, 276, "Input"],
Cell[567830, 13578, 1150, 32, 123, "Input"],
Cell[568983, 13612, 1216, 35, 123, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570236, 13652, 534, 12, 66, "Subsubsection"],
Cell[570773, 13666, 1752, 51, 199, "Input"],
Cell[572528, 13719, 911, 27, 89, "Input"],
Cell[573442, 13748, 1399, 38, 207, "Input"],
Cell[574844, 13788, 1525, 39, 207, "Input"],
Cell[576372, 13829, 4404, 117, 503, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[580813, 13951, 294, 6, 113, "Subsubsection"],
Cell[581110, 13959, 1752, 51, 2086, "Input"],
Cell[582865, 14012, 3136, 83, 2941, "Input"],
Cell[586004, 14097, 4601, 124, 3492, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[590642, 14226, 229, 3, 52, "Subsubsection"],
Cell[590874, 14231, 1752, 51, 2086, "Input"],
Cell[592629, 14284, 911, 27, 928, "Input"],
Cell[593543, 14313, 1340, 38, 1402, "Input"],
Cell[594886, 14353, 3092, 83, 2941, "Input"],
Cell[597981, 14438, 4245, 114, 3492, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[602263, 14557, 343, 6, 52, "Subsubsection"],
Cell[602609, 14565, 1752, 51, 199, "Input"],
Cell[604364, 14618, 911, 27, 89, "Input"],
Cell[605278, 14647, 1340, 38, 134, "Input"],
Cell[606621, 14687, 3709, 99, 393, "Input"],
Cell[610333, 14788, 4375, 117, 503, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[614745, 14910, 295, 6, 52, "Subsubsection"],
Cell[615043, 14918, 1826, 52, 2086, "Input"],
Cell[616872, 14972, 1337, 38, 1402, "Input"],
Cell[618212, 15012, 3337, 85, 2989, "Input"],
Cell[621552, 15099, 4425, 118, 3492, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[626014, 15222, 125, 1, 52, "Subsubsection"],
Cell[626142, 15225, 1826, 52, 1159, "Input"],
Cell[627971, 15279, 911, 27, 518, "Input"],
Cell[628885, 15308, 1363, 38, 779, "Input"],
Cell[630251, 15348, 2673, 69, 2062, "Input"],
Cell[632927, 15419, 4269, 114, 3492, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[637233, 15538, 235, 5, 52, "Subsubsection"],
Cell[637471, 15545, 1826, 52, 1159, "Input"],
Cell[639300, 15599, 911, 27, 518, "Input"],
Cell[640214, 15628, 1363, 38, 779, "Input"],
Cell[641580, 15668, 3301, 85, 2289, "Input"],
Cell[644884, 15755, 4397, 117, 2932, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[649318, 15877, 166, 2, 52, "Subsubsection"],
Cell[649487, 15881, 645, 19, 89, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[650169, 15905, 112, 1, 52, "Subsubsection"],
Cell[650284, 15908, 1752, 51, 199, "Input"],
Cell[652039, 15961, 3338, 85, 393, "Input"],
Cell[655380, 16048, 4478, 120, 469, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[659895, 16173, 114, 1, 52, "Subsubsection"],
Cell[660012, 16176, 3286, 84, 393, "Input"],
Cell[663301, 16262, 4456, 120, 469, "Input"],
Cell[667760, 16384, 307, 9, 313, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[668104, 16398, 350, 9, 52, "Subsubsection"],
Cell[668457, 16409, 1883, 53, 1459, "Input"],
Cell[670343, 16464, 911, 27, 518, "Input"],
Cell[671257, 16493, 1413, 40, 779, "Input"],
Cell[672673, 16535, 3226, 87, 2062, "Input"],
Cell[675902, 16624, 4510, 119, 3159, "Input"],
Cell[680415, 16745, 254, 6, 313, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[680706, 16756, 221, 7, 52, "Subsubsection"],
Cell[680930, 16765, 1934, 54, 1459, "Input"],
Cell[682867, 16821, 911, 27, 518, "Input"],
Cell[683781, 16850, 2244, 56, 1458, "Input"],
Cell[686028, 16908, 1162, 32, 518, "Input"],
Cell[687193, 16942, 3985, 99, 2656, "Input"],
Cell[691181, 17043, 2688, 72, 1978, "Input"],
Cell[693872, 17117, 285, 7, 313, "Input"],
Cell[694160, 17126, 2212, 59, 1800, "Input"],
Cell[696375, 17187, 447, 9, 1110, "Input"],
Cell[696825, 17198, 452, 10, 1110, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[697314, 17213, 310, 10, 52, "Subsubsection"],
Cell[697627, 17225, 1123, 33, 657, "TextNumbered"],
Cell[698753, 17260, 582, 21, 401, "Text"],
Cell[699338, 17283, 155, 3, 313, "Text"],
Cell[699496, 17288, 696, 17, 271, "TextNumbered"],
Cell[700195, 17307, 823, 21, 410, "TextNumbered"]
}, Closed]],
Cell[CellGroupData[{
Cell[701055, 17333, 303, 10, 52, "Subsubsection"],
Cell[701361, 17345, 1149, 34, 621, "TextNumbered"],
Cell[702513, 17381, 1986, 60, 657, "TextNumbered"],
Cell[704502, 17443, 652, 22, 401, "Text"],
Cell[705157, 17467, 952, 28, 847, "Input"],
Cell[706112, 17497, 665, 23, 439, "Text"],
Cell[706780, 17522, 1116, 33, 621, "TextNumbered"],
Cell[707899, 17557, 1123, 33, 657, "TextNumbered"],
Cell[709025, 17592, 889, 28, 1256, "Input"],
Cell[709917, 17622, 514, 15, 527, "Input"],
Cell[710434, 17639, 431, 13, 527, "Input"],
Cell[710868, 17654, 507, 16, 336, "TextNumbered"],
Cell[711378, 17672, 590, 16, 844, "Input"],
Cell[711971, 17690, 171, 4, 313, "Input"],
Cell[712145, 17696, 1023, 32, 693, "Input"],
Cell[713171, 17730, 3184, 102, 2151, "Input"],
Cell[716358, 17834, 186, 4, 313, "Input"],
Cell[716547, 17840, 528, 17, 469, "Input"],
Cell[717078, 17859, 126, 2, 313, "Input"],
Cell[717207, 17863, 1483, 47, 394, "TextNumbered"],
Cell[718693, 17912, 819, 24, 293, "TextNumbered"],
Cell[719515, 17938, 376, 11, 475, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[719928, 17954, 358, 11, 52, "Subsubsection"],
Cell[720289, 17967, 982, 28, 113, "TextNumbered"],
Cell[721274, 17997, 817, 25, 201, "Input"],
Cell[722094, 18024, 397, 11, 87, "Input"],
Cell[722494, 18037, 502, 14, 58, "TextNumbered"],
Cell[722999, 18053, 815, 22, 83, "Input"],
Cell[723817, 18077, 841, 28, 91, "Input"],
Cell[724661, 18107, 482, 16, 83, "Input"],
Cell[725146, 18125, 3184, 102, 339, "Input"],
Cell[728333, 18229, 186, 4, 313, "Input"],
Cell[728522, 18235, 528, 17, 469, "Input"],
Cell[729053, 18254, 126, 2, 313, "Input"],
Cell[729182, 18258, 1483, 47, 394, "TextNumbered"],
Cell[730668, 18307, 819, 24, 293, "TextNumbered"],
Cell[731490, 18333, 376, 11, 475, "Input"],
Cell[731869, 18346, 490, 15, 307, "TextNumbered"],
Cell[732362, 18363, 1682, 55, 1220, "Input"],
Cell[734047, 18420, 122, 2, 313, "Input"],
Cell[734172, 18424, 443, 13, 475, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[734652, 18442, 97, 1, 69, "Subsection"],
Cell[CellGroupData[{
Cell[734774, 18447, 95, 1, 685, "Subsubsection"],
Cell[734872, 18450, 1802, 52, 2086, "Input"],
Cell[736677, 18504, 911, 27, 928, "Input"],
Cell[737591, 18533, 1363, 38, 1402, "Input"],
Cell[738957, 18573, 3120, 84, 2941, "Input"],
Cell[742080, 18659, 4245, 114, 3492, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[746362, 18778, 95, 1, 540, "Subsubsection"],
Cell[746460, 18781, 903, 28, 1036, "Input"],
Cell[747366, 18811, 704, 22, 1036, "Input"],
Cell[748073, 18835, 792, 24, 1402, "Input"],
Cell[748868, 18861, 1101, 34, 1810, "Input"],
Cell[749972, 18897, 31, 0, 563, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[750064, 18904, 129, 1, 96, "Section"],
Cell[CellGroupData[{
Cell[750218, 18909, 105, 1, 212, "Subsubsection"],
Cell[750326, 18912, 89, 1, 174, "Text"],
Cell[CellGroupData[{
Cell[750440, 18917, 502, 11, 163, "Item"],
Cell[750945, 18930, 515, 12, 163, "Item"]
}, Open  ]],
Cell[751475, 18945, 189796, 3122, 1152, "Input"],
Cell[941274, 22069, 559, 15, 196, "Text"],
Cell[941836, 22086, 1844, 51, 342, "TextNumbered"]
}, Open  ]],
Cell[CellGroupData[{
Cell[943717, 22142, 121, 1, 277, "Subsection"],
Cell[CellGroupData[{
Cell[943863, 22147, 148, 2, 685, "Subsubsection"],
Cell[944014, 22151, 2631, 73, 3207, "Input"],
Cell[946648, 22226, 1630, 43, 2989, "Input"],
Cell[948281, 22271, 353, 9, 628, "Input"],
Cell[948637, 22282, 80, 1, 563, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[948754, 22288, 146, 1, 685, "Subsubsection"],
Cell[948903, 22291, 392, 9, 928, "Text"],
Cell[949298, 22302, 4264, 111, 7545, "Input"],
Cell[953565, 22415, 2792, 77, 3754, "Input"],
Cell[956360, 22494, 519, 15, 628, "Input"],
Cell[956882, 22511, 3608, 96, 7036, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[960539, 22613, 174, 2, 223, "Subsection"],
Cell[960716, 22617, 189796, 3122, 6735, "Input"],
Cell[1150515, 25741, 565, 16, 2953, "Input"],
Cell[1151083, 25759, 2781, 77, 6757, "Input"],
Cell[1153867, 25838, 2230, 58, 6116, "Input"],
Cell[1156100, 25898, 4870, 129, 12466, "Input"],
Cell[1160973, 26029, 3883, 111, 11761, "Input"],
Cell[1164859, 26142, 4368, 124, 9498, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1169276, 26272, 129, 2, 96, "Section",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[1169430, 26278, 109, 1, 66, "Subsubsection"],
Cell[1169542, 26281, 2227, 69, 5445, "Input"],
Cell[1171772, 26352, 1671, 50, 4570, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1173480, 26407, 106, 1, 69, "Subsection"],
Cell[1173589, 26410, 3249, 73, 11309, "Input"],
Cell[1176841, 26485, 1051, 31, 2953, "Input"],
Cell[1177895, 26518, 1395, 39, 2953, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1179327, 26562, 104, 1, 69, "Subsection"],
Cell[CellGroupData[{
Cell[1179456, 26567, 100, 1, 1233, "Subsubsection"],
Cell[1179559, 26570, 2631, 67, 9550, "Input"],
Cell[1182193, 26639, 712, 10, 1013, "Input"],
Cell[1182908, 26651, 5067, 125, 17096, "Input"],
Cell[1187978, 26778, 2792, 72, 6809, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1190807, 26855, 111, 1, 972, "Subsubsection"],
Cell[1190921, 26858, 4251, 115, 13231, "Input"],
Cell[1195175, 26975, 3214, 84, 9567, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1198438, 27065, 135, 1, 69, "Subsection"],
Cell[1198576, 27068, 337, 8, 2464, "Input"],
Cell[1198916, 27078, 19884, 513, 4201, "Input"],
Cell[1218803, 27593, 1271, 36, 5832, "Input"],
Cell[1220077, 27631, 1021, 21, 4201, "Input"],
Cell[1221101, 27654, 407, 10, 4201, "Input"],
Cell[1221511, 27666, 571, 12, 4201, "Input"],
Cell[1222085, 27680, 1397, 40, 5832, "Input"],
Cell[1223485, 27722, 21361, 519, 36822, "Input"],
Cell[1244849, 28243, 981, 23, 7493, "Input"],
Cell[1245833, 28268, 1007, 27, 4302, "Input"],
Cell[1246843, 28297, 1356, 34, 9171, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1248248, 28337, 109, 1, 132, "Title"],
Cell[1248360, 28340, 418, 7, 397, "Text"],
Cell[CellGroupData[{
Cell[1248803, 28351, 110, 1, 401, "Section"],
Cell[CellGroupData[{
Cell[1248938, 28356, 194, 4, 811, "Subsection"],
Cell[1249135, 28362, 950, 28, 1049, "Text"],
Cell[1250088, 28392, 750, 20, 1134, "Input"],
Cell[CellGroupData[{
Cell[1250863, 28416, 411, 10, 928, "Subsubsection"],
Cell[1251277, 28428, 201, 4, 518, "Text"],
Cell[1251481, 28434, 1108, 33, 300, "TextNumbered"],
Cell[1252592, 28469, 574, 17, 714, "Text"],
Cell[1253169, 28488, 878, 24, 721, "Input"],
Cell[1254050, 28514, 1493, 45, 540, "TextNumbered"],
Cell[1255546, 28561, 1973, 59, 540, "TextNumbered"],
Cell[1257522, 28622, 1455, 42, 540, "TextNumbered"],
Cell[1258980, 28666, 222, 7, 313, "Text"],
Cell[1259205, 28675, 1350, 37, 540, "TextNumbered"],
Cell[1260558, 28714, 1098, 30, 540, "TextNumbered"],
Cell[1261659, 28746, 986, 26, 540, "TextNumbered"],
Cell[1262648, 28774, 729, 18, 527, "TextNumbered"],
Cell[1263380, 28794, 409, 8, 459, "TextNumbered"],
Cell[1263792, 28804, 657, 20, 928, "Text"],
Cell[1264452, 28826, 566, 13, 563, "Input"],
Cell[1265021, 28841, 141, 1, 563, "Text"],
Cell[1265165, 28844, 766, 24, 527, "TextNumbered"],
Cell[1265934, 28870, 318, 9, 680, "Text"],
Cell[1266255, 28881, 879, 21, 1117, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1267171, 28907, 268, 9, 685, "Subsubsection"],
Cell[1267442, 28918, 1746, 47, 2043, "Input"],
Cell[1269191, 28967, 3025, 86, 4143, "Input"],
Cell[1272219, 29055, 2878, 80, 3427, "Input"],
Cell[1275100, 29137, 311, 7, 563, "Input"],
Cell[1275414, 29146, 175, 3, 563, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1275626, 29154, 108, 1, 685, "Subsubsection"],
Cell[1275737, 29157, 465, 13, 1677, "Text"],
Cell[1276205, 29172, 766, 24, 948, "TextNumbered"],
Cell[1276974, 29198, 266, 8, 1629, "Input"],
Cell[1277243, 29208, 748, 20, 2937, "Input"],
Cell[1277994, 29230, 1218, 35, 3070, "Input"],
Cell[1279215, 29267, 841, 24, 1771, "Input"],
Cell[1280059, 29293, 566, 13, 1013, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1280674, 29312, 170, 2, 401, "Subsection"],
Cell[CellGroupData[{
Cell[1280869, 29318, 129, 1, 381, "Subsubsection"],
Cell[1281001, 29321, 529, 11, 518, "Text"],
Cell[1281533, 29334, 756, 21, 394, "TextNumbered"],
Cell[1282292, 29357, 760, 19, 754, "Text"],
Cell[1283055, 29378, 987, 26, 761, "Text"],
Cell[1284045, 29406, 972, 27, 345, "TextNumbered"],
Cell[1285020, 29435, 187, 4, 313, "Text"],
Cell[1285210, 29441, 703, 22, 284, "TextNumbered"],
Cell[1285916, 29465, 101, 1, 563, "Text"],
Cell[1286020, 29468, 665, 20, 352, "TextNumbered"],
Cell[1286688, 29490, 739, 20, 928, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[1287464, 29515, 113, 1, 300, "Subsubsection"],
Cell[1287580, 29518, 279, 6, 313, "Text"],
Cell[1287862, 29526, 1446, 42, 621, "TextNumbered"],
Cell[1289311, 29570, 1002, 30, 802, "Text"],
Cell[1290316, 29602, 1755, 49, 621, "TextNumbered"],
Cell[1292074, 29653, 662, 18, 547, "Text"],
Cell[1292739, 29673, 879, 22, 709, "TextNumbered"],
Cell[1293621, 29697, 754, 24, 1036, "Input"],
Cell[1294378, 29723, 1502, 44, 1800, "Text"],
Cell[1295883, 29769, 47757, 947, 3726, "Output"],
Cell[1343643, 30718, 888, 20, 1654, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1344580, 30744, 118, 1, 401, "Subsection"],
Cell[CellGroupData[{
Cell[1344723, 30749, 106, 1, 381, "Subsubsection"],
Cell[1344832, 30752, 293, 6, 313, "Text"],
Cell[1345128, 30760, 605, 12, 714, "Text"],
Cell[1345736, 30774, 1352, 32, 919, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[1347125, 30811, 144, 1, 300, "Subsubsection"],
Cell[1347272, 30814, 1450, 32, 1386, "Text"],
Cell[1348725, 30848, 974, 18, 714, "Text"],
Cell[1349702, 30868, 962, 24, 394, "TextNumbered"],
Cell[1350667, 30894, 110682, 1988, 2066, "Input"],
Cell[1461352, 32884, 1529, 31, 2365, "Text"],
Cell[1462884, 32917, 698, 20, 1022, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1463643, 32944, 150, 2, 309, "Section"],
Cell[CellGroupData[{
Cell[1463818, 32950, 101, 1, 381, "Subsubsection"],
Cell[1463922, 32953, 363, 8, 313, "Text"],
Cell[1464288, 32963, 133138, 2187, 2160, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1597463, 35155, 103, 1, 300, "Subsubsection"],
Cell[1597569, 35158, 1081, 29, 1904, "Input"],
Cell[1598653, 35189, 2246, 61, 2464, "Input"],
Cell[1600902, 35252, 197, 4, 518, "Text"],
Cell[1601102, 35258, 1506, 45, 621, "TextNumbered"],
Cell[1602611, 35305, 6220, 164, 7875, "Input"],
Cell[1608834, 35471, 355, 8, 313, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1609226, 35484, 162, 3, 811, "Subsection"],
Cell[1609391, 35489, 6172, 163, 4107, "Input"],
Cell[1615566, 35654, 378, 8, 563, "Input"],
Cell[CellGroupData[{
Cell[1615969, 35666, 122, 1, 685, "Subsubsection"],
Cell[1616094, 35669, 8773, 242, 10441, "Input"],
Cell[1624870, 35913, 432, 9, 563, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1625339, 35927, 98, 1, 685, "Subsubsection"],
Cell[1625440, 35930, 6946, 203, 8676, "Input"],
Cell[1632389, 36135, 2094, 61, 4068, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1634544, 36203, 298, 4, 309, "Section"],
Cell[CellGroupData[{
Cell[1634867, 36211, 106, 1, 504, "Subsection"],
Cell[1634976, 36214, 3249, 73, 6285, "Input"],
Cell[1638228, 36289, 1051, 31, 1641, "Input"],
Cell[1639282, 36322, 1395, 39, 1641, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1640714, 36366, 135, 1, 401, "Subsection"],
Cell[1640852, 36369, 1271, 36, 1706, "Input"],
Cell[1642126, 36407, 411, 11, 714, "Input"],
Cell[1642540, 36420, 1021, 21, 714, "Input"],
Cell[1643564, 36443, 407, 10, 714, "Input"],
Cell[1643974, 36455, 571, 12, 928, "Input"],
Cell[1644548, 36469, 1397, 40, 2358, "Input"],
Cell[1645948, 36511, 14049, 319, 2937, "Input"],
Cell[1660000, 36832, 981, 23, 1998, "Input"],
Cell[1660984, 36857, 1356, 34, 1998, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1662377, 36896, 105, 1, 401, "Subsection"],
Cell[1662485, 36899, 4388, 127, 6125, "Input"]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
